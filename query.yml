query:
  index-query-name: index_elicitation
  index-query:  SELECT boui.code as "Facility Id (Datim)", state.name AS "State", lga.name AS "LGA", facility.name AS "Facility", hc.client_code AS "Client Code",
                pp.uuid AS "Patient Id",
                hc.uuid AS "Index HTS Uuid",
                (CASE WHEN hc.test1->>'result' ILIKE 'Yes' THEN 'Positive' ELSE 'Negative' END) AS "HIV Status of Index",
                hc.index_notification_services_elicitation ->> 'OfferedIns' AS "Offered INS",
                hc.index_notification_services_elicitation ->> 'AcceptedIns' AS "Accepted INS",
                hc.client_code AS "Index Code",
                hie.first_name AS "First Name",
                hie.last_name AS "Last Name",
                hie.middle_name AS "Middle Name",
                hie.phone_number AS "Phone Number",
                hie.dob AS "Date of Birth",
                se.display AS "Sex",
                hie.address AS "Address",
                noti_method.display AS "Notification Method",
                sexually_un.display AS "Sexually uncomfortable",
                CASE WHEN hie.currently_live_with_partner  IS TRUE THEN 'Yes' ELSE 'No' END AS "Currently living with partner",
                relationship.display AS "Relationship with index client",
                hie.date_partner_came_for_testing AS "Date Partner Came For Testing"
                FROM hts_client hc
                LEFT JOIN patient_person pp ON pp.uuid=hc.person_uuid
                INNER JOIN hts_index_elicitation hie ON hie.hts_client_uuid = hc.uuid
                LEFT JOIN base_application_codeset se ON se.id=hie.sex
                LEFT JOIN base_application_codeset noti_method ON noti_method.id=hie.notification_method
                LEFT JOIN base_application_codeset sexually_un ON sexually_un.id=hie.sexually_uncomfortable
                LEFT JOIN base_application_codeset relationship ON relationship.id=hie.relationship_with_index_client
                LEFT JOIN base_organisation_unit facility ON facility.id=hc.facility_id
                LEFT JOIN base_organisation_unit state ON state.id=facility.parent_organisation_unit_id
                LEFT JOIN base_organisation_unit lga ON lga.id=state.parent_organisation_unit_id
                LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=hc.facility_id AND boui.name='DATIM_ID'
                WHERE hc.archived=0 AND hc.facility_id=%d AND
                hc.date_visit BETWEEN CAST('%s' AS DATE) 
                AND CAST('%s' AS DATE)
  biometric-query-name: biometric
  biometric-query:  SELECT result.state AS "State", result.lga AS "LGA", result.facility AS "Facility",
                    result.uuid AS "Patient ID", result.hospitalNumber AS "Hospital Number",
                    base.enrollment_date AS "Date Base Biometrics Enrolled (yyyy-mm-dd)",
                    base.count AS "Number of Base Fingerprint Captured",
                    first_recapture.enrollment_date AS "Date of 1st Biometric Recapture",
                    first_recapture.count AS "Number of 1st Biometric Recaptured Fingerprints",
                    second_recapture.enrollment_date AS "Date of 2nd Biometric Recapture",
                    second_recapture.count AS "Number of 2nd Recapture Fingerprints Captured"
                    FROM
                    ( SELECT pp.hospital_number AS hospitalNumber, pp.facility_id,
                    pp.uuid, facility.name AS facility, state.name AS state, lga.name AS lga
                    FROM patient_person pp
                    INNER JOIN hiv_enrollment he ON he.person_uuid=pp.uuid AND he.archived=0
                    LEFT JOIN base_organisation_unit facility ON facility.id=pp.facility_id
                    LEFT JOIN base_organisation_unit state ON state.id=facility.parent_organisation_unit_id
                    LEFT JOIN base_organisation_unit lga ON lga.id=state.parent_organisation_unit_id
                    LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=pp.facility_id
                    AND boui.name='DATIM_ID'
                    WHERE pp.archived=0 AND pp.facility_id=%d
                    AND pp.date_of_registration BETWEEN CAST('%s' AS DATE) AND CAST('%s' AS DATE)
                    ) AS result
                    LEFT JOIN (
                    SELECT
                    person_uuid,
                    MAX(enrollment_date) enrollment_date,
                    count
                    FROM
                    biometric
                    WHERE
                    recapture = 0 AND archived=0 AND count is not null and enrollment_date is not null
                    GROUP BY person_uuid, count
                    ) base ON result.uuid = base.person_uuid
                    LEFT JOIN (
                    SELECT
                    person_uuid,
                    MAX(enrollment_date) enrollment_date,
                    count
                    FROM
                    biometric
                    WHERE
                    recapture = 1 AND archived=0 AND count is not null and enrollment_date is not null
                    GROUP BY person_uuid, count
                    ) AS first_recapture ON result.uuid = first_recapture.person_uuid
                    LEFT JOIN (
                    SELECT
                    person_uuid,
                    MAX(enrollment_date) enrollment_date,
                    count
                    FROM
                    biometric
                    WHERE
                    recapture = 2 AND archived=0 AND count is not null and enrollment_date is not null
                    GROUP BY person_uuid, count
                    ) AS second_recapture ON result.uuid = second_recapture.person_uuid
