across:
    configuration:
        validate: false
    web:
        resources:
            caching:
acrossHibernate:
    create-unit-of-work-factory: true
    hibernate-properties:
        hibernate.format_sql: true
        hibernate.use_sql_comments: false
        hibernate.show_sql: false
        hibernate.event.merge.enty_copy_observer: allow
        hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
        hibernate.connection.characterEncoding: utf-8
        hibernate.connection.CharSet: utf-8
        hibernate.connection.useUnicode: true
    primary: true
    #generate-ddl: true
    register-repository-interceptor: true
applicationInfo:
    applicationId: lamisplus
    applicationName: LAMISPLUS
    buildDate: "@maven.build.timestamp@"
    buildId: "@pom.version@-@build.revision@"

jpa:
    create-unit-of-work-factory: true
    hibernate-properties:
        hibernate.format_sql: true
        hibernate.use_sql_comments: false
        hibernate.show_sql: false
        hibernate.event.merge.enty_copy_observer: allow
    primary: true
    properties:
        hibernate:
            enable_lazy_load_no_trans: true
            dialect: org.hibernate.dialect.PostgreSQLDialect
            connection:
                characterEncoding: utf-8
                CharSet: utf-8
                useUnicode: true
build:
    number: "@build.revision@"
logging:
    request-response:
        enabled: true

    file:
        name: application-debug/application-debug.log
server:
    error:
        whitelabel:
            enabled: false
        include-stacktrace:
            facility: false
    datasource:
        hikari:
            auto-commit: false
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    http2:
        enabled: true
#    port: 8282
    tomcat:
        uri-encoding: UTF-8
        connection-timeout: 20s
spring:
    datasource:
        driver-class-name: org.postgresql.Driver
        username: lamisplus
        password: admin
        url: jdbc:postgresql://localhost:5432/lamisplus2
        hibernate:
            ddl-auto: none
            event.merge.enty_copy_observer: allow
        hikari:
            auto-commit: true
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
            maximum-pool-size: 20
            minimum-idle: 5
    jpa:
        database: POSTGRESQL
        show-sql: true
        open-in-view: false
        properties:
            hibernate:
                enable_lazy_load_no_trans: true
                dialect: org.hibernate.dialect.PostgreSQLDialect
                connection:
                    characterEncoding: utf-8
                    CharSet: utf-8
                    useUnicode: true
    mail:
        host: localhost
        port: 25
        username:
        password:
        jndi-name:
    servlet:
        multipart:
            max-file-size: 1000MB
            max-request-size: 1000MB
    jackson:
        jackson:
            serialization:
                fail-on-empty-beans: false
    banner:
        location: banner.txt
jwt:
    # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
    base64-secret: YzMzNjBmOTcwN2Y4YmNmNWViMzhhNjk5MjhmMmY5OTZkNWUxYzIwM2Q5ZWU4OWIzNTZmZTBlOTMzZjFhN2ZmMzBlMDIzMGRkYWNkYTIwOThmY2E1ZjNhYTAxODA0NTJkY2U5NTYxZTI1YjA1NTIyN2IwMTZlMTRlMDM0OTIyNzM=
    # Token is valid 8 hours
    token-validity-in-milli-seconds: 28800000
    # Token is valid 12 hours
    token-validity-in-milli-seconds-for-remember-me: 43200000
lamis:
    temp-dir: runtime/
    module-path: modules

management:
    endpoints:
        web:
            base-path: /api/v1/management
            exposure:
                include: ["configprops", "env", "health", 'metrics', "info", "threaddump", "loggers" ]
        enabled-by-default: true
    endpoint:
        metrics:
            enabled: true
        health:
            show-details: always
springdoc:
    show:
        actuator=true:
application:
    async:
        core-pool-size: 10
        max-pool-size: 50
        queue-capacity: 10000

lamisplus:
    datasource:
        module:
            driver-class-name: org.postgresql.Driver
            username: lamisplus
            password: admin
            url: jdbc:postgresql://localhost:5432/lamisplus2
            hikari:
                auto-commit: true
                data-source-properties:
                    cachePrepStmts: true
                    prepStmtCacheSize: 250
                    prepStmtCacheSqlLimit: 2048
                    useServerPrepStmts: true
                maximum-pool-size: 5
                minimum-idle: 3
    base-url:
        version-one: "/api/v1/"
    secugen:
        biometrics:
            server-url: http://localhost:8282
            server-port: 8282
            timeout: 3000
            quality: 80
#query:
#   index-query:  SELECT boui.code as "Facility Id (Datim)", state.name AS "State", lga.name AS "LGA", facility.name AS "Facility", hc.client_code AS "Client Code",
#                 pp.uuid AS "Patient Id",
#                 hc.uuid AS "Index HTS Uuid",
#                 (CASE WHEN hc.test1->>'result' ILIKE 'Yes' THEN 'Positive' ELSE 'Negative' END) AS "HIV Status of Index",
#                 hc.index_notification_services_elicitation ->> 'OfferedIns' AS "Offered INS",
#                 hc.index_notification_services_elicitation ->> 'AcceptedIns' AS "Accepted INS",
#                 hc.client_code AS "Index Code",
#                 hie.first_name AS "First Name",
#                 hie.last_name AS "Last Name",
#                 hie.middle_name AS "Middle Name",
#                 hie.phone_number AS "Phone Number",
#                 hie.dob AS "Date of Birth",
#                 se.display AS "Sex",
#                 hie.address AS "Address",
#                 noti_method.display AS "Notification Method",
#                 sexually_un.display AS "Sexually uncomfortable",
#                 CASE WHEN hie.currently_live_with_partner  IS TRUE THEN 'Yes' ELSE 'No' END AS "Currently living with partner",
#                 relationship.display AS "Relationship with index client",
#                 hie.date_partner_came_for_testing AS "Date Partner Came For Testing"
#                 FROM hts_client hc
#                 LEFT JOIN patient_person pp ON pp.uuid=hc.person_uuid
#                 INNER JOIN hts_index_elicitation hie ON hie.hts_client_uuid = hc.uuid
#                 LEFT JOIN base_application_codeset se ON se.id=hie.sex
#                 LEFT JOIN base_application_codeset noti_method ON noti_method.id=hie.notification_method
#                 LEFT JOIN base_application_codeset sexually_un ON sexually_un.id=hie.sexually_uncomfortable
#                 LEFT JOIN base_application_codeset relationship ON relationship.id=hie.relationship_with_index_client
#                 LEFT JOIN base_organisation_unit facility ON facility.id=hc.facility_id
#                 LEFT JOIN base_organisation_unit state ON state.id=facility.parent_organisation_unit_id
#                 LEFT JOIN base_organisation_unit lga ON lga.id=state.parent_organisation_unit_id
#                 LEFT JOIN base_organisation_unit_identifier boui ON boui.organisation_unit_id=hc.facility_id AND boui.name='DATIM_ID'
#                 WHERE hc.archived=0