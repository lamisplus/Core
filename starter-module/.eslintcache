[{"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\index.js":"1","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\App.js":"2","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\store.js":"4","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reportWebVitals.js":"5","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\LoginPage.js":"6","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\index.js":"8","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\index.js":"9","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_services\\authentication.js":"10","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\FacilitySetup.js":"11","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\ErrorMissingOrganisation.js":"12","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleJar.js":"13","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\Footer.js":"14","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\types.js":"15","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Home.js":"16","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ModuleMenu.js":"17","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Dashboard\\Home.js":"18","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserPage.js":"19","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\FacilitiesPage.js":"20","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\AddFacility.js":"21","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\menu.js":"22","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\NewBootstrapModule.js":"23","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\index.js":"24","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\api\\index.js":"25","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\FacilitiesList.js":"26","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\bootstrapModule.js":"27","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Progress.js":"28","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Message.js":"29","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js":"30","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\Header.js":"31","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\NavHader.js":"32","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\SideBar.js":"33","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Button\\SplitActionButton.js":"34","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserList.js":"35","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\SalesCanvas.js":"36","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\RevenueLineApex.js":"37","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Donut.js":"38","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\TicketsLineApex.js":"39","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\UpcomingEventSection.js":"40","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesRevenueTab.js":"41","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Latestsaleblog.js":"42","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\RecentEvenList.js":"43","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\BestSellingTab.js":"44","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\EditModuleMenu.js":"45","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\menu.js":"46","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Functions\\LoadMenu.js":"47","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\Logout.js":"48","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\AssignFacilityModal.js":"49","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\user.js":"50","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart3.js":"51","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart2.js":"52","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart.js":"53","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\applicationCodeset.js":"54","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart3.js":"55","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart2.js":"56","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart1.js":"57","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\AddModuleMenu.js":"58","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleMenuPosition.js":"59","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleInformation.js":"60","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ViewModule.js":"61","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ActivateModule.js":"62","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\DeactivateModule.js":"63","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UnInstallModule.js":"64","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\generalUserDashboardReducer.js":"65","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\organizationalUnitReducer.js":"66","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\rolesReducer.js":"67","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\SystemInfoReducer.js":"68","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\bootstrapReducer.js":"69","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\applicationCodesetReducer.js":"70","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\userReducer.js":"71","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\registrationReducer.js":"72","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\patientReducer.js":"73","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\SubMenuList.js":"74","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\MenuList.js":"75","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js":"76","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\Index.js":"77","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\ParentOrganizationalUnit.js":"78","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Modules\\Index.js":"79","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\AssignFacility.js":"80","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\TestPage\\Index.js":"81","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationCodeset\\ApplicationCodesetSearch.js":"82","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\EditRole.js":"83","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\EditPermission.js":"84","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\RolesPage.js":"85","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\AddRole.js":"86","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\index.js":"87","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\EditUser.js":"88","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserAccount.js":"89","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserRegistration.js":"90","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\LogConfiguration\\Index.js":"91","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\Index.js":"92","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationMatrics\\Index.js":"93","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\HealthCheck\\Index.js":"94","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\EditSubMenu.js":"95","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\AddSubMenu.js":"96","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\organizationalUnit.js":"97","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreateParentOrgUnit.js":"98","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\UpdateOrganisationUnit.js":"99","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\UpdateOrganisationUnitLevel.js":"100","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreateOrganizationUnitLevel.js":"101","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\DeleteOrgUnit.js":"102","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\EditMenu.js":"103","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js":"104","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js":"105","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\AddMenu.js":"106","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\DeleteOrgUnitLevel.js":"107","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\TestPage\\PatientCard.js":"108","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationCodeset\\NewApplicationCodeset.js":"109","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Functions\\UseForm.js":"110","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\role.js":"111","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\RolesList.js":"112","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\auth-header.js":"113","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\interceptor.js":"114","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\handle-response.js":"115","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\initialFieldState_UserRegistration.js":"116","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemConfig.js":"117","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\systemInfo.js":"118","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemProperty.js":"119","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\ApplicationConfig.js":"120","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemEnv.js":"121","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreatOrgUnitByUpload.js":"122","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Patients\\SubMenu.js":"123"},{"size":1005,"mtime":1675189262204,"results":"124","hashOfConfig":"125"},{"size":4059,"mtime":1688232689847,"results":"126","hashOfConfig":"125"},{"size":9235,"mtime":1675189262246,"results":"127","hashOfConfig":"125"},{"size":561,"mtime":1675189266290,"results":"128","hashOfConfig":"125"},{"size":375,"mtime":1675189266087,"results":"129","hashOfConfig":"125"},{"size":6319,"mtime":1688194967211,"results":"130","hashOfConfig":"125"},{"size":3056,"mtime":1675189262247,"results":"131","hashOfConfig":"125"},{"size":7755,"mtime":1685609807832,"results":"132","hashOfConfig":"125"},{"size":1036,"mtime":1675189266079,"results":"133","hashOfConfig":"125"},{"size":3703,"mtime":1675189262225,"results":"134","hashOfConfig":"125"},{"size":13455,"mtime":1685609807853,"results":"135","hashOfConfig":"125"},{"size":1732,"mtime":1685609807849,"results":"136","hashOfConfig":"125"},{"size":27204,"mtime":1686576567045,"results":"137","hashOfConfig":"125"},{"size":435,"mtime":1688232762053,"results":"138","hashOfConfig":"125"},{"size":15085,"mtime":1675189262240,"results":"139","hashOfConfig":"125"},{"size":17192,"mtime":1685609807706,"results":"140","hashOfConfig":"125"},{"size":12442,"mtime":1675189265883,"results":"141","hashOfConfig":"125"},{"size":4433,"mtime":1685609807726,"results":"142","hashOfConfig":"125"},{"size":1715,"mtime":1685609807820,"results":"143","hashOfConfig":"125"},{"size":1591,"mtime":1685609807734,"results":"144","hashOfConfig":"125"},{"size":12451,"mtime":1685609807729,"results":"145","hashOfConfig":"125"},{"size":585,"mtime":1675189266080,"results":"146","hashOfConfig":"125"},{"size":26425,"mtime":1688194967201,"results":"147","hashOfConfig":"125"},{"size":885,"mtime":1675189266050,"results":"148","hashOfConfig":"125"},{"size":190,"mtime":1688194967198,"results":"149","hashOfConfig":"125"},{"size":5535,"mtime":1685609807731,"results":"150","hashOfConfig":"125"},{"size":12580,"mtime":1675189262229,"results":"151","hashOfConfig":"125"},{"size":497,"mtime":1685609807710,"results":"152","hashOfConfig":"125"},{"size":519,"mtime":1675189265882,"results":"153","hashOfConfig":"125"},{"size":571,"mtime":1675189266042,"results":"154","hashOfConfig":"125"},{"size":12766,"mtime":1685609807839,"results":"155","hashOfConfig":"125"},{"size":1369,"mtime":1685609807843,"results":"156","hashOfConfig":"125"},{"size":14747,"mtime":1688194967208,"results":"157","hashOfConfig":"125"},{"size":4665,"mtime":1685609807722,"results":"158","hashOfConfig":"125"},{"size":9465,"mtime":1685609807817,"results":"159","hashOfConfig":"125"},{"size":1274,"mtime":1675189265995,"results":"160","hashOfConfig":"125"},{"size":2427,"mtime":1675189265994,"results":"161","hashOfConfig":"125"},{"size":903,"mtime":1675189265984,"results":"162","hashOfConfig":"125"},{"size":2427,"mtime":1675189266001,"results":"163","hashOfConfig":"125"},{"size":3515,"mtime":1675189266002,"results":"164","hashOfConfig":"125"},{"size":2145,"mtime":1675189265992,"results":"165","hashOfConfig":"125"},{"size":3468,"mtime":1675189265985,"results":"166","hashOfConfig":"125"},{"size":4651,"mtime":1675189265986,"results":"167","hashOfConfig":"125"},{"size":3709,"mtime":1675189265996,"results":"168","hashOfConfig":"125"},{"size":16087,"mtime":1675189265880,"results":"169","hashOfConfig":"125"},{"size":4309,"mtime":1675189262233,"results":"170","hashOfConfig":"125"},{"size":944,"mtime":1675189265911,"results":"171","hashOfConfig":"125"},{"size":1599,"mtime":1675189266047,"results":"172","hashOfConfig":"125"},{"size":11130,"mtime":1675189265969,"results":"173","hashOfConfig":"125"},{"size":4389,"mtime":1675189262241,"results":"174","hashOfConfig":"125"},{"size":1001,"mtime":1675189266000,"results":"175","hashOfConfig":"125"},{"size":1000,"mtime":1675189265998,"results":"176","hashOfConfig":"125"},{"size":1000,"mtime":1675189265997,"results":"177","hashOfConfig":"125"},{"size":4757,"mtime":1675189262228,"results":"178","hashOfConfig":"125"},{"size":2243,"mtime":1675189265991,"results":"179","hashOfConfig":"125"},{"size":2242,"mtime":1675189265990,"results":"180","hashOfConfig":"125"},{"size":2240,"mtime":1675189265989,"results":"181","hashOfConfig":"125"},{"size":16306,"mtime":1675189265877,"results":"182","hashOfConfig":"125"},{"size":21322,"mtime":1675189265896,"results":"183","hashOfConfig":"125"},{"size":6999,"mtime":1675189265893,"results":"184","hashOfConfig":"125"},{"size":4054,"mtime":1675189265897,"results":"185","hashOfConfig":"125"},{"size":3267,"mtime":1675189265876,"results":"186","hashOfConfig":"125"},{"size":3281,"mtime":1675189265879,"results":"187","hashOfConfig":"125"},{"size":3190,"mtime":1685609807717,"results":"188","hashOfConfig":"125"},{"size":405,"mtime":1675189266078,"results":"189","hashOfConfig":"125"},{"size":799,"mtime":1675189266081,"results":"190","hashOfConfig":"125"},{"size":683,"mtime":1675189266085,"results":"191","hashOfConfig":"125"},{"size":621,"mtime":1675189266075,"results":"192","hashOfConfig":"125"},{"size":796,"mtime":1675189266077,"results":"193","hashOfConfig":"125"},{"size":1404,"mtime":1675189266076,"results":"194","hashOfConfig":"125"},{"size":711,"mtime":1675189266086,"results":"195","hashOfConfig":"125"},{"size":410,"mtime":1675189266083,"results":"196","hashOfConfig":"125"},{"size":2849,"mtime":1675189266082,"results":"197","hashOfConfig":"125"},{"size":14195,"mtime":1685609807756,"results":"198","hashOfConfig":"125"},{"size":12464,"mtime":1685609807751,"results":"199","hashOfConfig":"125"},{"size":9987,"mtime":1675189265873,"results":"200","hashOfConfig":"125"},{"size":10182,"mtime":1685609807770,"results":"201","hashOfConfig":"125"},{"size":12401,"mtime":1685609807775,"results":"202","hashOfConfig":"125"},{"size":1078,"mtime":1685609807762,"results":"203","hashOfConfig":"125"},{"size":12071,"mtime":1675189265967,"results":"204","hashOfConfig":"125"},{"size":2549,"mtime":1675189265964,"results":"205","hashOfConfig":"125"},{"size":11275,"mtime":1688047374202,"results":"206","hashOfConfig":"125"},{"size":9496,"mtime":1685609807801,"results":"207","hashOfConfig":"125"},{"size":8109,"mtime":1675189265950,"results":"208","hashOfConfig":"125"},{"size":1468,"mtime":1685609807809,"results":"209","hashOfConfig":"125"},{"size":8520,"mtime":1685609807796,"results":"210","hashOfConfig":"125"},{"size":98,"mtime":1675189262220,"results":"211","hashOfConfig":"125"},{"size":22171,"mtime":1685609807812,"results":"212","hashOfConfig":"125"},{"size":8764,"mtime":1675189265976,"results":"213","hashOfConfig":"125"},{"size":23716,"mtime":1685609807824,"results":"214","hashOfConfig":"125"},{"size":2957,"mtime":1675189265918,"results":"215","hashOfConfig":"125"},{"size":1891,"mtime":1675189265959,"results":"216","hashOfConfig":"125"},{"size":2865,"mtime":1675189265870,"results":"217","hashOfConfig":"125"},{"size":2976,"mtime":1675189265917,"results":"218","hashOfConfig":"125"},{"size":17713,"mtime":1685609807747,"results":"219","hashOfConfig":"125"},{"size":12007,"mtime":1675189265921,"results":"220","hashOfConfig":"125"},{"size":5918,"mtime":1675189262235,"results":"221","hashOfConfig":"125"},{"size":24831,"mtime":1675189265934,"results":"222","hashOfConfig":"125"},{"size":10108,"mtime":1685609807785,"results":"223","hashOfConfig":"125"},{"size":10261,"mtime":1685609807791,"results":"224","hashOfConfig":"125"},{"size":12181,"mtime":1685609807765,"results":"225","hashOfConfig":"125"},{"size":3624,"mtime":1675189265938,"results":"226","hashOfConfig":"125"},{"size":17901,"mtime":1685609807742,"results":"227","hashOfConfig":"125"},{"size":8099,"mtime":1675189265875,"results":"228","hashOfConfig":"125"},{"size":8096,"mtime":1675189265872,"results":"229","hashOfConfig":"125"},{"size":14211,"mtime":1685609807737,"results":"230","hashOfConfig":"125"},{"size":3805,"mtime":1675189265939,"results":"231","hashOfConfig":"125"},{"size":7586,"mtime":1675189265966,"results":"232","hashOfConfig":"125"},{"size":11536,"mtime":1685609807700,"results":"233","hashOfConfig":"125"},{"size":647,"mtime":1675189265914,"results":"234","hashOfConfig":"125"},{"size":3141,"mtime":1675189262237,"results":"235","hashOfConfig":"125"},{"size":8019,"mtime":1685609807805,"results":"236","hashOfConfig":"125"},{"size":365,"mtime":1675189262218,"results":"237","hashOfConfig":"125"},{"size":1837,"mtime":1675189262222,"results":"238","hashOfConfig":"125"},{"size":591,"mtime":1675189262219,"results":"239","hashOfConfig":"125"},{"size":300,"mtime":1675189262221,"results":"240","hashOfConfig":"125"},{"size":1839,"mtime":1675189265960,"results":"241","hashOfConfig":"125"},{"size":2282,"mtime":1675189262239,"results":"242","hashOfConfig":"125"},{"size":1853,"mtime":1675189265963,"results":"243","hashOfConfig":"125"},{"size":1860,"mtime":1675189265958,"results":"244","hashOfConfig":"125"},{"size":1844,"mtime":1675189265961,"results":"245","hashOfConfig":"125"},{"size":5942,"mtime":1675189265931,"results":"246","hashOfConfig":"125"},{"size":2046,"mtime":1675189265947,"results":"247","hashOfConfig":"125"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ucq07",{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"428"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"431"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":2,"source":"460"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":"466"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\index.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\App.js",["559","560","561","562","563"],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\store.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\LoginPage.js",["564","565","566","567","568"],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\index.js",["569","570","571"],"import React, {useContext, useEffect, useState} from \"react\";\r\n\r\n/// React router dom\r\nimport {  Switch, Route } from \"react-router-dom\";\r\n\r\n/// Css\r\nimport \"./index.css\";\r\nimport \"./chart.css\";\r\nimport \"./step.css\";\r\n\r\n/// Layout\r\nimport Nav from \"./layouts/nav\";\r\nimport Footer from \"./layouts/Footer\";\r\n/// Dashboard\r\nimport LoginPage from './pages/LoginPage';\r\nimport Home from \"./components/Dashboard/Home\";\r\nimport Bootstrap from \"./components/BootstrapModules/Home\";\r\nimport NewBootstrapModule from \"./components/BootstrapModules/NewBootstrapModule\";\r\nimport ModuleMenu from \"./components/BootstrapModules/ModuleMenu\";\r\nimport UpdateModuleJar from \"./components/BootstrapModules/UpdateModuleJar\";\r\nimport UserList from \"./components/Users/UserPage\";\r\nimport userRegsitration from \"./components/Users/UserRegistration\";\r\nimport userAccount from \"./components/Users/UserAccount\";\r\nimport EditUser from \"./components/Users/EditUser\";\r\nimport SystemConfiguration from \"./components/SystemConfiguration/Index\";\r\nimport HealthCheck from \"./components/HealthCheck/Index\";\r\nimport ApplicationMatrics from \"./components/ApplicationMatrics/Index\";\r\nimport LogConfiguration from \"./components/LogConfiguration/Index\";\r\nimport RoleList from \"./components/Roles/RolesPage\";\r\nimport AddRole from \"./components/Roles/AddRole\";\r\nimport EditRole from \"./components/Roles/EditRole\";\r\nimport EditPermission from \"./components/Roles/EditPermission\";\r\nimport AssignFacility from \"./components/Users/AssignFacility\";\r\nimport Test from \"./components/TestPage/Index\";\r\nimport Modules from \"./components/Modules/Index\";\r\nimport OrganizationUnit from \"./components/OrganizationUnit/Index\";\r\nimport ApplicationCodeset from \"./components/ApplicationCodeset/ApplicationCodesetSearch\";\r\nimport ParentOrganizationUnit from \"./components/OrganizationUnit/ParentOrganizationalUnit\";\r\nimport MenuList from \"./components/Menu/MenuList\";\r\nimport BiometricList from \"./components/Biometric/BiometricList\";\r\n\r\nimport SubMenuList from \"./components/Menu/SubMenuList\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\nimport {authentication} from \"../_services/authentication\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../api\";\r\nimport * as ACTION_TYPES from \"../actions/types\";\r\nimport ErrorMissingOrganisation from \"./pages/ErrorMissingOrganisation\";\r\nimport FacilitiesList from \"./components/FaciltyConfig/FacilitiesPage\";\r\nimport AddFacility from \"./components/FaciltyConfig/AddFacility\";\r\nimport FacilitySetup from \"./pages/FacilitySetup\";\r\n\r\nconst Markup = () => {\r\n  const [user, setUser] = useState(null);\r\n  const { menuToggle } = useContext(ThemeContext);\r\n  const [appConfig, setAppConfig] = useState(null);\r\n  const routes = [\r\n    /// Dashboard\r\n    { url: \"\", component: Home },\r\n    { url: \"dashboard\", component: Home },\r\n    ///LamisPlus Pages\r\n    ///Bootstrap Module\r\n    { url: \"bootstrap-modules\", component: Bootstrap },\r\n    { url: \"upload-module\", component: NewBootstrapModule },\r\n    { url: \"update-module\", component: UpdateModuleJar },\r\n    { url: \"module-menu\", component: ModuleMenu },\r\n    { url: \"submenu\", component: SubMenuList },\r\n\r\n    ///User and Role Management\r\n    { url: \"users\", component: UserList },\r\n    { url: \"user-registration\", component: userRegsitration },\r\n    { url: \"account\", component: userAccount },\r\n    { url: \"edit-user\", component: EditUser },\r\n    { url: \"roles\", component: RoleList },\r\n    { url: \"add-role\", component: AddRole },\r\n    { url: \"edit-role\", component: EditRole },\r\n    { url: \"edit-permission\", component: EditPermission },\r\n    { url: \"assign-facility\", component: AssignFacility },\r\n      { url: \"system-configuration\", component: SystemConfiguration },\r\n    { url: \"health-check\", component: HealthCheck },\r\n    { url: \"log-configuration\", component: LogConfiguration },\r\n    { url: \"application-matrics\", component: ApplicationMatrics },\r\n    { url: \"test\", component: Test },\r\n    { url: \"modules\", component: Modules },\r\n    { url: \"organisation-unit\", component: OrganizationUnit },\r\n    { url: \"application-codeset\", component: ApplicationCodeset },\r\n    { url: \"admin-parent-organization-unit\", component: ParentOrganizationUnit },\r\n    { url: \"menu\", component: MenuList },\r\n    { url: \"biometrics\", component: BiometricList },\r\n    { url: \"facility\", component: FacilitiesList },\r\n    { url: \"facility-config\", component: AddFacility },\r\n  ];\r\n  let path = window.location.pathname;\r\n  path = path.split(\"/\");\r\n  path = path[path.length - 1];\r\n\r\n  let pagePath = path.split(\"-\").includes(\"page\");\r\n\r\n\r\n  async function fetchMe() {\r\n    if( authentication.currentUserValue != null ) {\r\n      axios\r\n          .get(`${baseUrl}account`)\r\n          .then((response) => {\r\n            setUser(response.data);\r\n          })\r\n          .catch((error) => {\r\n            authentication.logout();\r\n            // console.log(error);\r\n          });\r\n    }\r\n  }\r\n  async function configApp() {\r\n    if( authentication.currentUserValue != null ) {\r\n      axios\r\n          .get(`${baseUrl}users/configure/app`)\r\n          .then((response) => {\r\n            setAppConfig(response.data);\r\n          })\r\n          .catch((error) => {\r\n            //authentication.logout();\r\n            // console.log(error);\r\n          });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMe();\r\n    configApp();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        {/*{appConfig !== true ? (*/}\r\n        {/*    <>*/}\r\n            {user !== null ?\r\n                (\r\n                    <>\r\n                      {user && user.currentOrganisationUnitId !== null ?\r\n                          (\r\n                              <>\r\n                                <div\r\n                                    id={`${!pagePath ? \"main-wrapper\" : \"\"}`}\r\n                                    className={`${!pagePath ? \"show\" : \"mh100vh\"}  ${\r\n                                        menuToggle ? \"menu-toggle\" : \"\"\r\n                                    }`}\r\n                                >\r\n                                  {!pagePath && <Nav/>}\r\n\r\n                                  <div className={`${!pagePath ? \"content-body\" : \"\"}`}\r\n                                       style={{paddingTop: '4rem', backgroundColor: '#f2f7f8'}}>\r\n                                    <div\r\n                                        className={`${!pagePath ? \"container-fluid\" : \"\"}`}\r\n                                        style={{minHeight: window.screen.height - 260, padding: '1px'}}\r\n                                    >\r\n                                      <Switch>\r\n                                        {routes.map((data, i) => (\r\n                                            <Route\r\n                                                key={i}\r\n                                                exact\r\n                                                path={`/${data.url}`}\r\n                                                component={data.component}\r\n                                            />\r\n                                        ))}\r\n                                      </Switch>\r\n                                    </div>\r\n                                  </div>\r\n                                  {!pagePath && <Footer/>}\r\n                                </div>\r\n                              </>\r\n                          ) :\r\n                          (\r\n                              <>\r\n                                <FacilitySetup user={user}/>\r\n                              </>\r\n                          )\r\n                      }\r\n                    </>\r\n                )\r\n                :\r\n\r\n                <ErrorMissingOrganisation/>\r\n          }\r\n\r\n      </>\r\n\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\index.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_services\\authentication.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\FacilitySetup.js",["572","573","574","575","576","577","578","579"],"import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {authentication} from \"../../_services/authentication\";\r\nimport { Form,Row,Col,FormGroup,Label,Input,Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Spinner } from 'reactstrap';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport Select from \"react-select\";\r\nimport {url as baseUrl} from \"../../api\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst ErrorMissingOrganisation = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    //const currentUser = props.user;\r\n    const defaultValues = {applicationUserId: \"\", organisationUnitId:\"\", targetGroup:\"\"};\r\n    const [formData, setFormData] = useState( defaultValues)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [lgas, setLgas] = useState([]);\r\n    const [selectedFacilities, setSelectedFacilities] = useState( [] );\r\n    const classes = useStyles()\r\n    const [targetGroup, setTargetGroup] = useState([]);\r\n    const onFacilitySelect = (selectedValues) => {\r\n        setSelectedFacilities(selectedValues);\r\n    };\r\n\r\n    const getStateByCountry = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 2, setStates);\r\n        //fetchFacilityByParentId(data.value.id, 4);\r\n    };\r\n\r\n    const getLgaByState = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 3, setLgas);\r\n        //fetchFacilityByParentId(data.value.id, data.value.id);\r\n    }\r\n    const getTargetGroup = (data) => {\r\n        defaultValues.targetGroup=data.label\r\n    }\r\n    const getFacilities = (data) => {\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    }\r\n    useEffect(() => {\r\n        fetchCountries();\r\n        fetchTargetGroup();\r\n    }, []);\r\n    const fetchCountries = () => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/0`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n                setCountries(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchTargetGroup = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/TARGET_GROUP_SETUP`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n                setTargetGroup(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const fetchFacilityByParentId = (parentId, levelId) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}/organisation-units-level/${levelId}/hierarchy`)\r\n            .then((response) => {\r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    //console.log(facilities)\r\n    const fetchOrgUnitByParentId = (parentId, levelId, setData) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n                // const d = c.push({label:'Select one', value:''});\r\n\r\n                setData(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    // useEffect(() => {\r\n    //     const y = props.user && props.user.applicationUserOrganisationUnits\r\n    //         ? props.user.applicationUserOrganisationUnits.map((x) => (x.organisationUnitId)) : [];\r\n    //     setSelectedFacilities(y);\r\n    // }, [props.user]);\r\n\r\n    /* Get list of Facilities from the server - id is 4*/\r\n    // useEffect(() => {\r\n    //     async function getCharacters() {\r\n    //         axios\r\n    //             .get(`${baseUrl}organisation-units/organisation-unit-level/4`)\r\n    //             .then((response) => {\r\n    //                 setFacilities(\r\n    //                     Object.entries(response.data).map(([key, value]) => ({\r\n    //                         label: value.name,\r\n    //                         value: value.id,\r\n    //                     }))\r\n    //                 );\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(error);\r\n    //             });\r\n    //     }\r\n    //\r\n    //     getCharacters();\r\n    //     //fetchCountries();\r\n    // }, []);\r\n    const create = e => {\r\n        e.preventDefault()\r\n        setLoading(true);\r\n        defaultValues.organisationUnitId = selectedFacilities\r\n        defaultValues.applicationUserId= props.user.userName\r\n        //console.log(defaultValues);\r\n        const onSuccess = () => {\r\n            setLoading(false);\r\n            toast.success(\"Facility assigned successfully!\")\r\n            //props.toggleModal()\r\n            window.location.reload(false);\r\n        }\r\n        const onError = () => {\r\n            setLoading(false);\r\n            toast.error(\"Something went wrong, please contact administration\");\r\n            //props.toggleModal()\r\n        }\r\n        axios\r\n            .post(`${baseUrl}users/facility/setup`, defaultValues)\r\n            .then((response) => {\r\n                onSuccess();\r\n            })\r\n            .catch((error) => {\r\n                onError();\r\n            });\r\n    }\r\n    const handleClick = ()=>{\r\n        //console.log('mew mew mew')\r\n        authentication.logout();\r\n    }\r\n    return (\r\n        <div className=\"authincation h-100 p-meddle\">\r\n            <div className=\"container h-100\">\r\n                {\" \"}\r\n                <div className=\"row justify-content-center h-100 align-items-center\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-input-content text-center error-page\">\r\n                            <p className=\"error-text font-weight-bold\" style={{fontSize:'70px'}}>Welcome To LAMISPlus 2.0</p>\r\n                            <h4 className=\"text-info\" >\r\n                                <i className=\"fa fa-thumbs-down text-info\" /> Missing Facility\r\n                            </h4>\r\n                            <p style={{fontSize:'24px'}}>Kindly setup your facility </p>\r\n                            <Card >\r\n                                <CardBody>\r\n                                    <Row >\r\n\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label style={{fontWeight: \"bold\", fontSize: \"16px\", }} >Country</Label>\r\n                                                <Select\r\n                                                    required\r\n                                                    isMulti={false}\r\n                                                    //isClearable={true}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getStateByCountry}\r\n                                                    options={countries.map((x) => ({\r\n                                                        label: x.name,\r\n                                                        value: x,\r\n                                                    }))}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label style={{fontWeight: \"bold\", fontSize: \"16px\"}}>State</Label>\r\n                                                <Select\r\n                                                    required\r\n                                                    //isMulti={false}\r\n                                                    //isClearable={true}\r\n                                                    onChange={getLgaByState}\r\n                                                    options={states.sort().map((x) => ({\r\n                                                        label: x.name,\r\n                                                        value: x,\r\n                                                    }))}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label style={{fontWeight: \"bold\", fontSize: \"16px\"}}>LGA</Label>\r\n                                                <Select\r\n                                                    required\r\n                                                    isMulti={false}\r\n                                                    isClearable={true}\r\n                                                    onChange={getFacilities}\r\n                                                    options={lgas.sort().map((x) => ({\r\n                                                        label: x.name,\r\n                                                        value: x,\r\n                                                    }))}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <br/><br/>\r\n                                        <br/><br/>\r\n                                        <Col md={12}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"Facility\" style={{fontSize:'22px', fontWeight: \"bold\"}}>Assign Facilities</Label>\r\n                                                <DualListBox\r\n                                                    canFilter\r\n                                                    options={facilities}\r\n                                                    onChange={onFacilitySelect}\r\n                                                    selected={selectedFacilities}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br/>\r\n                                    {/*<Row >*/}\r\n                                    {/*<Col md={4}>*/}\r\n                                    {/*    <FormGroup>*/}\r\n                                    {/*        <Label style={{fontWeight: \"bold\", fontSize: \"16px\"}}>Target Group</Label>*/}\r\n                                    {/*        <Select*/}\r\n                                    {/*            required*/}\r\n                                    {/*            //isMulti={false}*/}\r\n                                    {/*            //isClearable={true}*/}\r\n                                    {/*            onChange={getTargetGroup}*/}\r\n                                    {/*            options={targetGroup.map((x) => ({*/}\r\n                                    {/*                label: x.display,*/}\r\n                                    {/*                value: x.code,*/}\r\n                                    {/*            }))}*/}\r\n                                    {/*        />*/}\r\n                                    {/*    </FormGroup>*/}\r\n                                    {/*</Col>*/}\r\n                                    {/*</Row>*/}\r\n\r\n                                    <MatButton\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={create}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Save  {loading ? <Spinner /> : \"\"}\r\n                                    </MatButton>\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMissingOrganisation;\r\n\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\pages\\ErrorMissingOrganisation.js",["580","581"],"import React, {useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {authentication} from \"../../_services/authentication\";\r\n\r\nconst ErrorMissingOrganisation = () => {\r\n\r\n   /*   useEffect(()=>{\r\n\r\n      },[]);*/\r\n   const handleClick = ()=>{\r\n      console.log('mew mew mew')\r\n      authentication.logout();\r\n   }\r\n   return (\r\n       <div className=\"authincation h-100 p-meddle\">\r\n          <div className=\"container h-100\">\r\n             {\" \"}\r\n             <div className=\"row justify-content-center h-100 align-items-center\">\r\n                <div className=\"col-md-12\">\r\n                   <div className=\"form-input-content text-center error-page\">\r\n                      <p className=\"error-text font-weight-bold\" style={{fontSize:'70px'}}>Welcome To LAMISPlus 2.0</p>\r\n                      <h4 className=\"text-danger\" >\r\n                         <i className=\"fa fa-thumbs-down text-danger\" /> Missing Organisation\r\n                      </h4>\r\n                      <p style={{fontSize:'24px'}}>Kindly reach out to the system admin to assign you an organisation</p>\r\n                      <div className=\"btn\">\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                style={{ backgroundColor: '#0E8A74' }}\r\n                                onClick={handleClick}\r\n                            >\r\n                               Back to Home\r\n                            </button>\r\n\r\n\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n             </div>\r\n          </div>\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default ErrorMissingOrganisation;\r\n\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleJar.js",["582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622"],"import React, { useState, useEffect} from 'react';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { TiArrowBack} from 'react-icons/ti';\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n//Stepper\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Table } from 'reactstrap';\r\nimport { Button as ButtonSematic} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport OverlayLoader from 'react-overlay-loading/lib/OverlayLoader'\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {CardBody,Col,Row, Form} from 'reactstrap'\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { url } from \"./../../../api\";\r\nimport { createBootstrapModule, startBootstrapModule } from './../../../actions/bootstrapModule';\r\nimport { updateBootstrapModule, fetchAllBootstrapModuleBYBatchNum } from './../../../actions/bootstrapModule';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport _ from \"lodash\";\r\n\r\n//import RestartingApp from \"./RestartModule\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .MuiStepIcon-active\": { color: \"#014d88\" },\r\n        \"& .MuiStepIcon-completed\": { color: \"green\" },\r\n        \"& .Mui-disabled .MuiStepIcon-root\": { color: \"#992E62\" },\r\n        \"& .MuiStepLabel-label.MuiStepLabel-active\":{ color: \"#014d88\", fontSize:'14px' },\r\n        \"& .MuiStepLabel-label\":{ color: \"#992E62\", fontSize:'14px' },\r\n        \"& .MuiDropzoneArea-icon\":{ color: \"#992E62\", fontSize:'24px',width:'150px',height:'150px' },\r\n        \"& .MuiDropzoneArea-text\":{ color: \"#992E62\", fontSize:'24px' }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    container: {\r\n        maxHeight: 440\r\n    },\r\n    td: { borderBottom :'#fff'}\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n    return ['Upload', 'Install'];\r\n}\r\n\r\nconst BootstrapModule = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [timesession, setTimesession] = useState('July 27th - Auguts 27th, 2021');\r\n    const [postModal, setPostModal] = useState(false);\r\n    const [contacts, setContacts] = useState();\r\n    // delete data\r\n    const handleDeleteClick = (contactId) => {\r\n        const newContacts = [...contacts];\r\n        const index = contacts.findIndex((contact)=> contact.id === contactId);\r\n        newContacts.splice(index, 1);\r\n        setContacts(newContacts);\r\n    }\r\n    //Add data\r\n    const [addFormData, setAddFormData ] = useState({\r\n        Cust_Id:'',\r\n        Date_Join:'',\r\n        Cust_Name:'',\r\n        Location:'',\r\n        image:'',\r\n    });\r\n\r\n    const [editModal, setEditModal] = useState(false);\r\n\r\n    // Edit function editable page loop\r\n    const [editContactId, setEditContactId] = useState(null);\r\n\r\n    // Edit function button click to edit\r\n    const handleEditClick = ( event, contact) => {\r\n        event.preventDefault();\r\n        setEditContactId(contact.id);\r\n        const formValues = {\r\n            Cust_Id: contact.Cust_Id,\r\n            Date_Join: contact.Date_Join,\r\n            Cust_Name: contact.Cust_Name,\r\n            Location: contact.Location,\r\n            image: contact.image,\r\n        }\r\n        setEditFormData(formValues);\r\n        setEditModal(true);\r\n    };\r\n\r\n\r\n    // edit  data\r\n    const [editFormData, setEditFormData] = useState({\r\n        Cust_Id:'',\r\n        Date_Join:'',\r\n        Cust_Name:'',\r\n        Location:'',\r\n        image:'',\r\n    })\r\n\r\n    const apiURl = url + \"module/\";\r\n\r\n    const dispatch = useDispatch();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n    const [fileToUpload, setFileToUpload] = useState({})\r\n    const [uploadResponse, setUploadResponse] = React.useState([])\r\n    const [uploadModuleList, setUploadModuleList] = React.useState({})\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [disableNextButtonProcess, setDisableNextButtonProcess] = React.useState(true);\r\n    const [installationMessage, setInstallationMessage] = useState();\r\n    const [installationOverlay, setInstallationOverlay] = useState(false)\r\n    const [uploadButton, setUploadButton] = useState(false)\r\n    const [uploadButtonhidden, setuploadButtonhidden] = useState(false)\r\n    const [buttonStatus, setButtonStatus] = useState(true)\r\n    const [hiddeStartModuleFinishButton, sethiddeStartModuleFinishButton] = useState(true)\r\n    const [modal, setModal] = useState(false)//modal to View\r\n    const toggleModal = () => setModal(!modal)\r\n    const [collectModal, setcollectModal] = useState([])//\r\n    const [disabledUploadButton, setDisabledUploadButton] = useState(false)\r\n    const [disabledNextButton, setDisabledNextButton] = useState(false)\r\n    const [moduleStatus, setModuleStatus] = useState()\r\n    const [moduleBatchNum, setModuleBatchNum] = useState()\r\n    const [restartmodal, setRestartModal] = useState(false) //Modal\r\n    const toggleRestartModal = () => setRestartModal(!restartmodal);\r\n    const [open, setOpen] = useState(false);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const onSuccess = (data) => {\r\n            //setUploadResponse(data)\r\n            setUploadModuleList(data)\r\n        }\r\n        const onError = () => {}\r\n        //props.fetchAllBootstrapModuleBYBatchNum(moduleStatus,moduleBatchNum, onSuccess,onError)\r\n\r\n    }, [moduleStatus,moduleBatchNum]); //componentDidMount\r\n\r\n    const restartingModule  = () => {\r\n        axios.get(`restart`)\r\n        .then((response) => {\r\n            handleClose()\r\n            toast.success(`Successfully restarting`);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            toast.error(`An error occurred, restarting`);\r\n        });\r\n/*        alert('restarting');\r\n        //setRestartModal(!restartmodal)*/\r\n    }\r\n\r\n    const handleModuleBatchList = (moduleStatus,moduleBatchNum) => {\r\n        const onSuccess = (data) => {\r\n\r\n            setUploadResponse([data])\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1); //auotmatically move to the next phase of installation in the wizard\r\n        }\r\n        const onError = () => {}\r\n        props.fetchAllBootstrapModuleBYBatchNum(moduleStatus,moduleBatchNum, onSuccess,onError)\r\n    }\r\n\r\n    const handleNext = async e => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        if(activeStep === 1 && steps[2] === 'Start module'){\r\n            sethiddeStartModuleFinishButton(false)\r\n            setDisableNextButtonProcess(true)\r\n        }\r\n\r\n    };\r\n    const handleBack = () => {\r\n        setDisabledUploadButton(false)\r\n        setuploadButtonhidden(false)\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const startModule = () => {\r\n        const onSuccess = () => {\r\n            setTimeout(() => {\r\n                history.push(`/bootstrap-modules`)\r\n            }, 1000)\r\n        }\r\n        const onError = () => {}\r\n        props.startBootstrapModule( onSuccess, onError);\r\n    }\r\n    const handleClickOpen = () => {\r\n\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleInstallModule = (obj) => {\r\n       \r\n        setDisabledNextButton(true)\r\n        setInstallationOverlay(true)\r\n        setDisableNextButtonProcess(true)\r\n        const onSuccess = (installResponse) => {\r\n            \r\n            const installModuleDetail = installResponse\r\n            // var foundIndex = uploadResponse.findIndex(x => x.batchNo == installModuleDetail.batchNo);\r\n            //uploadResponse[foundIndex] = installModuleDetail\r\n            setDisabledNextButton(false)\r\n            setInstallationOverlay(false)\r\n            setDisableNextButtonProcess(false)\r\n            //window.location.href = \"bootstrap-modules\";\r\n            //history.push(`/bootstrap-modules`)\r\n            setOpen(true);\r\n\r\n        }\r\n        const onError = () => {\r\n            setDisabledNextButton(false)\r\n            setInstallationOverlay(false)\r\n            setDisableNextButtonProcess(false)\r\n        }\r\n        props.updateBootstrapModule(obj, onSuccess, onError);\r\n    }\r\n\r\n    const handleUploadFile = async e => {\r\n\r\n        if(fileToUpload[0]){\r\n            setDisabledUploadButton(true)\r\n            setDisableNextButtonProcess(true)\r\n            setInstallationMessage('Processing, please wait...')\r\n            const form_Data = new FormData();\r\n            form_Data.append('file', fileToUpload[0]);\r\n\r\n            try {\r\n                const res = await axios.post(url+'modules/upload', form_Data, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    },\r\n\r\n                    onUploadProgress: progressEvent => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                            )\r\n                        );\r\n                        // Clear percentage\r\n                        setTimeout(() => setUploadPercentage(0), 10000);\r\n                    }\r\n                });\r\n\r\n                const { fileName, filePath } = res.data;\r\n                setUploadedFile({ fileName, filePath });\r\n                setMessage('File Uploaded');\r\n                setUploadResponse(res.data===null ? {} :res.data)\r\n                setuploadButtonhidden(true)\r\n                setDisableNextButtonProcess(false) //Enable the next process button for the next stage\r\n                setInstallationMessage('')\r\n                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n            } catch (err) {\r\n                console.log(err)\r\n                if (err.response && err.response.status === 500) {\r\n                    setDisabledUploadButton(false)\r\n                    setMessage('There was a problem in uploading file! please try again...');\r\n                } else if(err.response && err.response.status === 400){\r\n                    setDisabledUploadButton(false)\r\n                    setMessage('Something went wrong! please try again...');\r\n                    //setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }else{\r\n                    setDisabledUploadButton(false)\r\n                    setMessage('Something went wrong! please try again...');\r\n                }\r\n            }\r\n        }else{\r\n            setMessage('Please upload a jar file');\r\n        }\r\n    }\r\n\r\n    const handleStartModule = () => {\r\n        history.push(`/bootstrap-modules`)\r\n\r\n    }\r\n\r\n\r\n    const sampleAction = (obj) =>{\r\n        return (\r\n            <ButtonSematic content='Update Module' labelPosition='left' icon='cogs' primary  size='mini' compact onClick={() => handleInstallModule(obj)}/>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function getStepContent(stepIndex) {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return (\r\n                    <Form enctype=\"multipart/form-data\">\r\n                        <Card className=\"mb-12\">\r\n                            <CardBody>\r\n                                <br />\r\n                                \r\n                                <Row>\r\n                                    <Col sm={12}>\r\n                                        {message ? <Message msg={message} /> : null}\r\n                                        <DropzoneArea\r\n                                            //onChange={(files) => console.log('Files:', files)}\r\n                                            onChange = {(file) => setFileToUpload(file)}\r\n                                            showFileNames=\"true\"\r\n                                            //acceptedFiles={['jar']}\r\n                                            maxFileSize ={'1000000000000000000'}\r\n\r\n                                        />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col sm={12}>\r\n                                        <Progress percentage={uploadPercentage} />\r\n                                        <br/>\r\n                                        <strong>{installationMessage}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Form>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <>\r\n                        <ToastContainer autoClose={3000} hideProgressBar />\r\n                       \r\n                        <Card className=\"mb-12\">\r\n                            <CardBody>\r\n                                <br />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <OverlayLoader\r\n                                            color={'red'} // default is white\r\n                                            loader=\"ScaleLoader\" // check below for more loaders\r\n                                            text=\"Installing... please wait!\"\r\n                                            active={installationOverlay}\r\n                                            backgroundColor={'black'} // default is black\r\n                                            opacity=\".4\" // default is .9\r\n                                        >\r\n                                            {uploadResponse.type==='ERROR'? \r\n                                   <>\r\n                                    <Alert severity=\"error\">\r\n                                      <AlertTitle>\r\n                                        <b>{uploadResponse.message}</b>\r\n                                      </AlertTitle>\r\n                                    </Alert>\r\n                                   </> \r\n                                   : \r\n                                   <>\r\n                                   <Alert severity=\"success\">\r\n                                      <AlertTitle>\r\n                                        <b>No dependecy issue</b>\r\n                                      </AlertTitle>\r\n                                    </Alert>\r\n                                   </>\r\n                                   }\r\n                                   <br/>\r\n                                    <Table striped>\r\n                                        <thead style={{  backgroundColor:'#014d88', color:'#ffffff', height:\"5px !important\" }}>\r\n                                        <tr style={{ height:\"5px !important\" }}>\r\n\r\n                                            <th style={{padding:'15px 10px'}}>Module Name</th>\r\n                                            <th style={{padding:'15px 10px'}}>Description</th>\r\n                                            <th style={{padding:'15px 10px'}}>Version</th>\r\n                                            <th style={{padding:'15px 10px'}}>Status</th>\r\n                                            <th style={{padding:'15px 10px'}}>Action</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                        {[uploadResponse].map((row) => (\r\n                                            <tr key={row.id}>\r\n                                                <td>{row.name===\"\"?\" \":row.name}</td>\r\n                                                <td>{row.description===\"\"?\" \":row.description}</td>\r\n\r\n                                                <td>{row.version===\"\"?\" \":row.version}</td>\r\n                                                <td>{row.status!==2 ? \"Uploaded\":\"Uploaded\"}</td>\r\n                                                <td>\r\n                                                    {row.type==='ERROR'? \r\n                                                    ( <ButtonSematic content=\"Can't Install\" labelPosition='left' icon='fork' color='red' size='mini' compact />)\r\n                                                    : sampleAction(row)}\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                        ))\r\n                                        }\r\n\r\n                                        </tbody>\r\n                                    </Table>\r\n                                        </OverlayLoader>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <>\r\n                        <Alert color=\"info\">\r\n                            <Typography className={classes.instructions}>\r\n                                <span style={{ fontWeight: 'bold'}}>Starting this module wil restart the application and all scheduled tasked\r\n                                and background processes will be interupted. <br/>Do you want to Proceed?</span>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                <br/>\r\n                            </Typography>\r\n                        </Alert>\r\n                        <br/>\r\n                        <br/>\r\n                        <Table striped>\r\n                            <thead style={{  backgroundColor:'#9F9FA5' }}>\r\n                            <tr>\r\n\r\n                                <th>Module Name</th>\r\n                                <th>Description</th>\r\n                                <th>Version</th>\r\n                                <th>Status</th>\r\n\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {[uploadResponse].map((row) => (\r\n                                <tr key={row.id}>\r\n                                    <td>{row.name===\"\"?\" \":row.name}</td>\r\n                                    <td>{row.description===\"\"?\" \":row.description}</td>\r\n                                    <td>{row.version===\"\"?\" \":row.version}</td>\r\n                                    <td>{row.status!==2 ? \"\":\"Installed\"}</td>\r\n\r\n                                </tr>\r\n\r\n                            ))\r\n                            }\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </>\r\n                );\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <PageTitle\r\n                motherMenu=\"Bootstrap\"\r\n                activeMenu=\"Update Module\"\r\n                pageContent=\"Update Module\"\r\n            />\r\n            <Link\r\n                to ={{\r\n                    pathname: \"/bootstrap-modules\",\r\n                    activetab: 1\r\n                }}\r\n            >\r\n                <MatButton\r\n                    type='submit'\r\n                    variant=\"contained\"\r\n                    className=\"me-2 float-end\"\r\n                    style={{backgroundColor:'#992E62',color:'#fff',marginTop:'-20px',marginRight:'10px', fontSize:'18px',width:'110px'}}\r\n                >\r\n                    <TiArrowBack/>{\" \"} Back\r\n                </MatButton>\r\n            </Link>\r\n            <br/><br/>\r\n            <Card className={classes.cardBottom} style={{marginTop:'-10px'}}>\r\n                <CardContent>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <h3 style={{color:'#014d88', fontWeight:'bold'}}>Update Module</h3>\r\n                            <Card className=\"mb-12\">\r\n                                <CardBody>\r\n\r\n                                    <div className={classes.root}>\r\n                                        <Stepper activeStep={activeStep} alternativeLabel>\r\n                                            {steps.map((label) => (\r\n                                                <Step key={label}>\r\n                                                    <StepLabel>{label}</StepLabel>\r\n                                                </Step>\r\n                                            ))}\r\n                                        </Stepper>\r\n                                        <div>\r\n                                            {activeStep === steps.length ? (\r\n                                                <div>\r\n                                                    <Alert color=\"info\">\r\n                                                        <Typography className={classes.instructions}>All steps completed</Typography>\r\n                                                    </Alert>\r\n                                                    <br/>\r\n                                                    <br/>\r\n                                                    <Button variant=\"contained\"\r\n                                                            onClick={handleReset}\r\n                                                            color=\"secondary\">\r\n                                                        Reset/Cancel\r\n                                                    </Button>\r\n\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div>\r\n                                                    <Typography className={classes.instructions}>\r\n                                                        {getStepContent(activeStep)}\r\n\r\n                                                    </Typography>\r\n                                                    <div>\r\n                                                        <Button\r\n                                                            disabled={activeStep === 0}\r\n                                                            onClick={handleBack}\r\n                                                            className={classes.backButton}\r\n                                                            hidden={!uploadButtonhidden}\r\n                                                            variant=\"contained\"\r\n                                                            style={{backgroundColor:'#992E62',color:'#fff'}}\r\n                                                        >\r\n                                                            Previous\r\n                                                        </Button>\r\n\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={handleUploadFile}\r\n                                                            hidden={uploadButtonhidden}\r\n                                                            disabled={disabledUploadButton}\r\n                                                            style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                                                        >\r\n                                                            Upload Module\r\n                                                        </Button>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={open} >\r\n                <DialogTitle style={{backgroundColor:'#014d88',color:'#fff',textAlign:'center', fontSize:'28px'}}>Restart LAMISPlus</DialogTitle>\r\n                <DialogContent style={{width:'850px',height:'250px',padding:'0px'}}>\r\n                    <DialogContentText style={{fontSize:'24px',color:'#992E62',fontWeight:'bold', width:'600px',height:'250px',border:'10px solid #fff',textAlign:'center',justifyContent:'center',display:'flex',alignItems:'center'}}>\r\n                        Kindly restart LAMISPlus to effect the update\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions style={{backgroundColor:'#014d88',color:'#fff'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={restartingModule}\r\n                        style={{color:'#014d88',backgroundColor:'#fff'}}\r\n                    >\r\n                        Restart\r\n                    </Button>\r\n\r\n                    <Link\r\n                        to ={{\r\n                            pathname: \"/bootstrap-modules\",\r\n                            activetab: 1\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{backgroundColor:'#992E62',color:'#fff',marginLeft:\"20px\"}}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        moduleLists: state.boostrapmodule.moduleList\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createBootstrapModule, updateBootstrapModule, startBootstrapModule, fetchAllBootstrapModuleBYBatchNum})(BootstrapModule);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\Footer.js",["623"],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\types.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Home.js",["624","625","626","627","628","629"],"import React, { useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {Dropdown} from 'react-bootstrap';\r\n/// Bootstrap\r\nimport { Badge} from \"react-bootstrap\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  fetchAllBootstrapModule } from '../../../actions/bootstrapModule';\r\nimport UnIstallModal from './UnInstallModule'\r\nimport DeactivateModule from './DeactivateModule'\r\nimport ActivateModule from './ActivateModule'\r\nimport ViewModule from './ViewModule'\r\nimport UpdateModuleInformation from './UpdateModuleInformation'\r\nimport UpdateModuleMenuPosition from './UpdateModuleMenuPosition'\r\nimport {  FaPlus } from \"react-icons/fa\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport moment from \"moment\";\r\n//import BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n      margin: theme.spacing(20),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n  }));\r\n\r\nconst PostPage = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const [viewInstallmodal, setViewInstallModal] = useState(false) //View Module Modal\r\n    const toggleViewinstallModal = () => setViewInstallModal(!viewInstallmodal)\r\n    const [updateModuleInfoModal, setUpdateModuleInfoModal] = useState(false) //View Module Modal\r\n    const togglesetUpdateModuleInfoModal = () => setUpdateModuleInfoModal(!updateModuleInfoModal)\r\n    const [updateModuleMenuModal, setUpdateModuleMenuModal] = useState(false) //View Module Menu Position Modal\r\n    const togglesetUpdateModuleMenuModal = () => setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    const [unInstallmodal, setUnInstallModal] = useState(false) //Modal \r\n    const toggleUninstallModal = () => setUnInstallModal(!unInstallmodal)\r\n    const [deactivateModal, setDeactivateModal] = useState(false) //Modal\r\n    const toggleDeactivateModal = () => setDeactivateModal(!deactivateModal)\r\n    const [activateModal, setActivateModal] = useState(false) //Modal \r\n    const toggleActivateModal = () => setActivateModal(!activateModal)\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const listOfAllModule = useSelector(state => state.boostrapmodule.list);\r\n\r\n    const [restartmodal, setRestartModal] = useState(false) //Modal\r\n    const toggleRestartModal = () => setRestartModal(!restartmodal)\r\n\r\n    useEffect(() => {\r\n        loadModules()  \r\n    }, []); //componentDidMount\r\n\r\n    const loadModules =()=>{\r\n        setLoading(true);\r\n        const onSuccess = () => {\r\n            setLoading(false)\r\n            \r\n        }\r\n        const onError = () => {\r\n            setLoading(false)     \r\n        }\r\n          const fetchAllModule = dispatch(fetchAllBootstrapModule(onSuccess,onError ));\r\n    }\r\n  \r\n    const viewInstallModule = (row)=>{\r\n        //fetchExternalMenu()\r\n        setcollectModal({...collectModal, ...row});\r\n        setViewInstallModal(!viewInstallmodal)\r\n    }\r\n    const unInstallModule = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUnInstallModal(!unInstallmodal) \r\n      }\r\n    const restartingModule  = (row) => {\r\n\r\n        setRestartModal(!restartmodal)\r\n    }\r\n    const updateModuleInformation = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUpdateModuleInfoModal(!updateModuleInfoModal)\r\n    }\r\n    const updateModuleMenuPosition = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    }\r\n    const updateModuleJar = ()=>{\r\n        history.push(\"/update-module\")\r\n    }\r\n    const deactivatelModule = (row) => {  \r\n        setcollectModal({...collectModal, ...row});\r\n        setDeactivateModal(!deactivateModal) \r\n    }\r\n  \r\n    const activatelModule = (row) => {\r\n      setcollectModal({...collectModal, ...row});\r\n      setActivateModal(!activateModal) \r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n            {loading ?\r\n                <div style={{width:'100%', minHeight:'600px',justifyContent:'center',display:'flex',alignItems:'center'}}>\r\n                    <CircularProgress size={200}  />\r\n                </div>\r\n\r\n                :\r\n                <>\r\n\r\n                    <PageTitle\r\n                        motherMenu=\"Bootstrap\"\r\n                        activeMenu=\"Modules\"\r\n                        pageContent=\"Modules\"\r\n                    />\r\n                    <Link to={\"upload-module\"} style={{marginTop:'-20px',marginRight:'30px'}} >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className=\" float-end\"\r\n                            startIcon={<FaPlus size=\"10\"/>}\r\n                            style={{backgroundColor:'#014d88',color:'#fff',marginTop:'-20px',marginRight:'10px', width:'110px'}}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\",fontSize:\"18px\" }}>New</span>\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <div className=\"mb-sm-5 mb-3 d-flex flex-wrap align-items-center text-head\"></div>\r\n                    <div className=\"row\" style={{marginTop:'-25px',paddingRight:'10px',paddingLeft:'5px'}}>\r\n                        {!loading && listOfAllModule.length > 0 ? (\r\n                                <>\r\n                                    {listOfAllModule.map((contact, index)=>(\r\n                                        <div  className=\"col-xl-4 col-xxl-4 col-lg-6 col-md-6 col-sm-6\" key={index} style={{minHeight:'300px'}}>\r\n                                            <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                                <div className=\"card-header align-items-start\">\r\n                                                    <div>\r\n                                                        <h6 className=\"fs-18 font-w500 mb-3\"><Link to={\"#\"}className=\"user-name\" style={{color:'#014d88',fontSize:'20px'}}>{contact.name}</Link></h6>\r\n                                                        <div className=\"fs-14 text-nowrap\" style={{color:'#992E62', fontWeight:'bold'}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(contact.buildTime).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                    </div>\r\n\r\n                                                    {/*Action button -- Dropdown menu*/}\r\n                                                    <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                        <Dropdown.Toggle\r\n                                                            as=\"button\"\r\n                                                            variant=\"\"\r\n                                                            drop=\"up\"\r\n                                                            className=\"btn sharp btn-primary \"\r\n                                                            id=\"tp-btn\"\r\n                                                            style={{ backgroundColor: '#014d88', borderColor:'#014d88', fontSize:\"4\", borderRadius:'5px',marginRight:'-25px',marginTop:'-25px'}}\r\n                                                        >\r\n                                                            <svg\r\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                                width=\"18px\"\r\n                                                                height=\"18px\"\r\n                                                                viewBox=\"0 0 24 24\"\r\n                                                                version=\"1.1\"\r\n                                                            >\r\n                                                                <g\r\n                                                                    stroke=\"none\"\r\n                                                                    strokeWidth=\"1\"\r\n                                                                    fill=\"none\"\r\n                                                                    fillRule=\"evenodd\"\r\n                                                                >\r\n                                                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                    <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                    <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                    <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                                </g>\r\n                                                            </svg>\r\n                                                        </Dropdown.Toggle>\r\n                                                        <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                            <Dropdown.Item\r\n                                                                onClick={()=>viewInstallModule(contact)}\r\n                                                            >View Details\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item\r\n                                                                onClick={()=>updateModuleInformation(contact)}\r\n                                                            >Update Module Details\r\n                                                            </Dropdown.Item>\r\n\r\n                                                            <Dropdown.Item\r\n\r\n                                                            ><Link to={{pathname: \"/module-menu\", state: { datasample: contact }}}>Module Menu</Link>\r\n                                                            </Dropdown.Item>\r\n\r\n                                                            <Dropdown.Item\r\n                                                                onClick={()=>updateModuleJar(contact)}\r\n                                                            >Update Module Jar\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item\r\n                                                                onClick={()=>unInstallModule(contact)}\r\n                                                            >Uninstall\r\n                                                            </Dropdown.Item>\r\n                                                            {/*<Dropdown.Item*/}\r\n                                                            {/*    onClick={()=>restartingModule(contact)}*/}\r\n                                                            {/*>Restart*/}\r\n                                                            {/*</Dropdown.Item>*/}\r\n                                                            {contact.active===true? (\r\n                                                                    <>\r\n\r\n                                                                        <Dropdown.Item className=\"text-danger\"\r\n                                                                                       onClick={()=>deactivatelModule(contact)}\r\n                                                                        >Deactive\r\n                                                                        </Dropdown.Item>\r\n                                                                    </>\r\n                                                                )\r\n\r\n                                                                :\r\n\r\n                                                                (\r\n                                                                    <>\r\n                                                                        <Dropdown.Item className=\"text-danger\"\r\n                                                                                       onClick={()=>activatelModule(contact)}\r\n                                                                        >Activate\r\n                                                                        </Dropdown.Item>\r\n\r\n                                                                    </>\r\n                                                                )\r\n                                                            }\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n\r\n                                                </div>\r\n                                                <div className=\"card-body p-0 pb-3\">\r\n                                                    <ul className=\"list-group list-group-flush\">\r\n                                                        <li className=\"list-group-item\" style={{minHeight:'200px'}}>\r\n                                                            <span className=\"mb-0 title\">Description</span> :\r\n                                                            <span className=\"text-black ms-2\">{contact.description}</span>\r\n                                                        </li>\r\n\r\n                                                        <li className=\"list-group-item\">\r\n\r\n                                                            <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {contact.version}</Badge>\r\n                                                            <span className=\"mb-0 title\">Status</span> :\r\n                                                            <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={contact.active===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> {contact.active===true? \"Active\": \"Inactive\"}</Badge>\r\n                                                                                {/*<BootstrapSwitchButton checked={true} size=\"xs\" />*/}\r\n                                                        </span>\r\n                                                        </li>\r\n\r\n                                                    </ul>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </>\r\n                            )\r\n                            :\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <div  className=\"col-xl-12 col-xxl-12 col-lg-12 col-md-12 col-sm-12\" >\r\n                                        <br/><br/>\r\n                                        <Alert severity=\"info\">\r\n                                            <AlertTitle>\r\n                                                <strong>NO Module Found</strong>\r\n                                            </AlertTitle>\r\n                                        </Alert>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n\r\n                    <UnIstallModal modalstatus={unInstallmodal} togglestatus={toggleUninstallModal} datasample={collectModal} loadModules={loadModules}/>\r\n                    <DeactivateModule modalstatus={deactivateModal} togglestatus={toggleDeactivateModal} datasample={collectModal} loadModules={loadModules}/>\r\n                    <ActivateModule modalstatus={activateModal} togglestatus={toggleActivateModal} datasample={collectModal} loadModules={loadModules}/>\r\n                    <ViewModule modalstatus={viewInstallmodal} togglestatus={toggleViewinstallModal} datasample={collectModal} loadModules={loadModules}/>\r\n                    <UpdateModuleInformation modalstatus={updateModuleInfoModal} togglestatus={togglesetUpdateModuleInfoModal} datasample={collectModal} loadModules={loadModules}  />\r\n                    <UpdateModuleMenuPosition modalstatus={updateModuleMenuModal} togglestatus={togglesetUpdateModuleMenuModal} datasample={collectModal} loadModules={loadModules} />\r\n                    {/*<RestartingApp modalstatus={restartmodal} togglestatus={toggleRestartModal}  />*/}\r\n                </>\r\n            }\r\n        </>\r\n\r\n    );     \r\n}\r\n\r\nexport default PostPage;","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ModuleMenu.js",["630","631","632","633","634","635","636","637","638","639"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { getModuleMenus, deleteModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport { MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport AddModuleMenu from \"./AddModuleMenu\";\r\nimport EditModuleMenu from './EditModuleMenu';\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nlet menuId = 0;\r\nlet menuName=\"\"\r\n\r\nconst ModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const classes = useStyles();\r\n    const [updateModuleMenuModal, setUpdateModuleMenuModal] = useState(false) //New Module Menu  Modal\r\n    const togglesetUpdateModuleMenuModal = () => setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    const [editModuleMenuModal, setEditModuleMenuModal] = useState(false) //Edit Module Menu  Modal\r\n    const togglesetEditModuleMenuModal = () => setEditModuleMenuModal(!editModuleMenuModal)\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n    const datasample = props.location && props.location.state? props.location.state.datasample : {};\r\n    const moduleName= datasample.name + \" Menu List\";\r\n    \r\n    useEffect(() => {\r\n        loadModuleMenus()\r\n    }, [props.location.state.datasample.id]); //componentDidMount to get module menus\r\n    //Method to load module menus\r\n    const loadModuleMenus =()=>{\r\n        const onSuccess = () => {\r\n            setLoading(false)\r\n        }\r\n        const onError = () => {}\r\n        props.getModuleMenus(datasample.id,onSuccess,onError );\r\n    }\r\n\r\n    const deleteMenuModal = (id, name) => {\r\n        menuId = id;\r\n        menuName= name\r\n        setModal(!modal);\r\n\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const onSuccess = () => {\r\n            setModal(false)\r\n            loadModuleMenus()\r\n        };\r\n        const onError = () => {\r\n            toast.error(\"Something went wrong\");\r\n            //return;\r\n        };\r\n        props.deleteModuleMenu(id, onSuccess,onError);\r\n    };\r\n    const updateModuleMenuPosition = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    }\r\n    const editModuleMenu = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setEditModuleMenuModal(!editModuleMenuModal)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <PageTitle activeMenu=\"Module Menu\" motherMenu=\"bootstrap-modules\" />\r\n\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n\r\n                    <Link to ={{\r\n                        pathname: \"/bootstrap-modules\",\r\n                        \r\n                    }}>\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2\"\r\n                            startIcon={<TiArrowBack size=\"10\"/>}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n                        </MatButton>\r\n                    </Link>\r\n\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2\"\r\n                            startIcon={<FaPlus size=\"10\"/>}\r\n                            onClick={()=>updateModuleMenuPosition(datasample)}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>New </span>\r\n                            &nbsp;&nbsp;\r\n                            <span style={{ textTransform: \"lowercase\" }}>Menu </span>\r\n                        </MatButton>\r\n\r\n                    <br />\r\n\r\n                    <br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={moduleName}\r\n                columns={[\r\n                    //{ title: \"Id\", field: \"id\", filtering: false },\r\n                    { title: \"Name\", field: \"name\" },\r\n                    { title: \"Parent Menu\", field: \"parent_menu\", filtering: false },\r\n                    { title: \"Menu Link/Url\", field: \"url\", filtering: false },\r\n                    { title: \"Menu Icon\", field: \"icon\", filtering: false },\r\n                    { title: \"Sub Menu\", field: \"submenu\", filtering: false },\r\n                    { title: \"Menu Breadcrum\", field: \"breadcrum\", filtering: false },\r\n                    { title: \"Menu Tooltip\", field: \"tooltip\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={props.moduleMenuList.map((row) => ({\r\n                    //id: row.id,\r\n                    name: row.name,\r\n                    parent_menu: row.parentName!==null ? row.parentName : \"null\",\r\n                    url: row.url,\r\n                    icon: (<i className={row.icon} />),\r\n                    submenu: row.subs ? row.subs.length : \"none\",\r\n                    breadcrum: row.breadcrum,\r\n                    tooltip: row.tooltip,\r\n                    actions: (\r\n                        <div>\r\n                            {row.subs && row.subs.length ? (\r\n                                    <Link to={{pathname: \"/submenu\", state: {parent: row}}}>\r\n                                        <Label as='a' color='black' className=\"ms-1\" size='mini'>\r\n                                            <Icon name='eye'/> View\r\n                                        </Label>\r\n                                    </Link>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n                            <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() =>  editModuleMenu(row)}>\r\n                                <Icon name='pencil' /> Edit\r\n                            </Label>\r\n                            <Label as='a' color='red' onClick={() =>  deleteMenuModal(row.id, row.name)}  size='mini'>\r\n                                <Icon name='trash' /> Delete\r\n                            </Label>\r\n\r\n\r\n                        </div>\r\n                    ),\r\n                }))}\r\n                options={{\r\n                    headerStyle: {\r\n\r\n                        color: \"#000\",\r\n                    },\r\n\r\n                    searchFieldStyle: {\r\n                        width: \"150%\",\r\n                        margingLeft: \"150px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                }}\r\n            />\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={modal} >\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Menu</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Are you sure you want to delete Menu  <b>{menuName}</b></p>\r\n                    <br/>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"ms-2\"\r\n                        startIcon={<SaveIcon />}\r\n\r\n                        onClick={() => onDelete(menuId)}\r\n                    >\r\n                        Yes\r\n                    </MatButton>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        className={classes.button }\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Cancel\r\n                    </span>\r\n                    </MatButton>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n            <AddModuleMenu modalstatus={updateModuleMenuModal} togglestatus={togglesetUpdateModuleMenuModal} datasample={collectModal} loadModuleMenus={loadModuleMenus} />\r\n            <EditModuleMenu modalstatus={editModuleMenuModal} togglestatus={togglesetEditModuleMenuModal} datasample={collectModal} loadModuleMenus={loadModuleMenus} />\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    deleteModuleMenu: deleteModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(ModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Dashboard\\Home.js",["640","641","642","643","644","645","646","647","648","649","650","651","652","653","654"],"import React,{useState,useContext, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\n//Import\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport BestSellingTab from '../Ventic/Home/Tab/BestSellingTab';\r\nimport RecentEvenList from '../Ventic/Home/RecentEvenList';\r\nimport Latestsaleblog from '../Ventic/Home/Latestsaleblog';\r\nimport SalesRevenueTab from '../Ventic/Home/Revenue/SalesRevenueTab';\r\nimport UpcomingEventSection from '../Ventic/Home/UpcomingEventSection';\r\nimport landingPageImage from '../../../images/lamisPlus/emr-landingpage.jpg'\r\nimport avatar from \"../../../images/avatar/1.jpg\";\r\n\r\nconst TicketsLineApex = loadable(() =>\r\n\tpMinDelay(import(\"../Ventic/Home/TicketsLineApex\"), 1000)\r\n);\r\nconst RevenueLineApex = loadable(() =>\r\n\tpMinDelay(import(\"../Ventic/Home/RevenueLineApex\"), 1000)\r\n);\r\nconst SalesCanvas = loadable(() =>\r\n\tpMinDelay(import(\"../Ventic/Home/SalesCanvas\"), 1000)\r\n);\r\nconst Donut = loadable(() =>\r\n\tpMinDelay(import(\"../Ventic/Home/Donut\"), 1000)\r\n);\r\n\r\nconst Home = () => {\r\n\tconst { changeBackground, background } = useContext(ThemeContext);\r\n\t  useEffect(() => {\r\n\t\tchangeBackground({ value: \"light\", label: \"Light\" });\r\n\t}, []);\r\n\t\r\n\r\n\treturn(\r\n\t\t<>\r\n{/*\t\t\t<div className=\"form-head mb-4 d-flex flex-wrap align-items-center\">\r\n\t\t\t\t<div className=\"me-auto\">\r\n\t\t\t\t\t<h2 className=\"font-w600 mb-0\">Dashboard</h2>\r\n\t\t\t\t\t <p className=\"text-light\">Lorem ipsum  dolor sit amet </p>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</div>*/}\r\n\t\t\t\r\n\t\t\t<div className=\"row\" st>\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<img src={landingPageImage} width={10} alt=\"\" style={{width:'100%'}} />\r\n\r\n{/*\t\t\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6 \" >\r\n\t\t\t\t\t\t\t<div className=\"card\" style={{borderRadius:\"6px\"}}>\r\n\t\t\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"chart-num font-w600 mb-0\">60</h2>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"ms-2 primary-icon\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M2.00401 11.1924C0.222201 11.1924 -0.670134 9.0381 0.589795 7.77817L7.78218 0.585786C8.56323 -0.195262 9.82956 -0.195262 10.6106 0.585786L17.803 7.77817C19.0629 9.0381 18.1706 11.1924 16.3888 11.1924H2.00401Z\" fill=\"#0E8A74\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-black font-w500 mb-0\">Facilities</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body pt-0\">\r\n\t\t\t\t\t\t\t\t\t<SalesCanvas />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6 \">\r\n\t\t\t\t\t\t\t<div className=\"card\" style={{borderRadius:\"6px\"}}>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body pt-sm-4 pt-3 d-flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"me-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"chart-num font-w600 mb-0\">5</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-black font-w500 mb-3 mt-2\">Modules</h5>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-primary fs-14 mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2 primary-icon\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\t\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M2.00401 11.1924C0.222201 11.1924 -0.670134 9.0381 0.589795 7.77817L7.78218 0.585786C8.56323 -0.195262 9.82956 -0.195262 10.6106 0.585786L17.803 7.77817C19.0629 9.0381 18.1706 11.1924 16.3888 11.1924H2.00401Z\" fill=\"#0E8A74\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t8.9%\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"op-6 text-light\">Iactive</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block position-relative donut-chart-sale\">\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t{background.value === \"dark\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t  <Donut\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={90}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor=\"#FF6826\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor2=\"#F0F0F0\"\r\n\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t  <Donut value={66} backgroundColor=\"rgb(14, 138, 116,1)\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<small>66%</small>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t*/}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</div>\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserPage.js",["655"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport {  FaUserPlus } from \"react-icons/fa\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport UserList from \"./UserList\";\r\n//import FilteringTable from \"./FilteringTable/FilteringTable\"\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n//import UiModal from \"./modaltest\"\r\nimport { ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst UserPage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <ToastContainer autoClose={3000} hideProgressBar />\r\n      <PageTitle activeMenu=\"User List\" motherMenu=\"Users\" />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n            <Link to=\"/user-registration\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"me-2 float-end\"\r\n                startIcon={<FaUserPlus style={{color:'#fff'}} />}\r\n                style={{backgroundColor:'#014d88'}}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color:'#fff', fontWeight:'bolder' }}>New User</span>\r\n              </Button>\r\n            </Link>\r\n            <br />\r\n         \r\n          <br />\r\n          <UserList />\r\n      </CardContent>\r\n      </Card>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\FacilitiesPage.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\AddFacility.js",["656","657","658","659"],"import React, {useEffect, useState} from 'react';\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\nimport {Col, Form, FormGroup, Input, Label, Row, Spinner} from \"reactstrap\";\r\nimport {Card, CardContent,CardHeader} from \"@material-ui/core\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport {url} from \"../../../api\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n}));\r\nfunction AddFacility(props) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [states, setStates]=useState([])\r\n    const [lgas, setLGAs]=useState([])\r\n    const [facilities, setFacilities]=useState([])\r\n\r\n    const loadStates = () =>{\r\n        axios.get(`${url}organisation-units/parent-organisation-units/1`).then((response)=>{\r\n            if(response.data){\r\n                setStates(response.data);\r\n            }\r\n        }).catch((e)=>{\r\n            console.log(\"Fetch states error\"+e)\r\n        })\r\n    }\r\n\r\n    const loadLGA = (e) =>{\r\n        axios.get(`${url}organisation-units/parent-organisation-units/${e.target.value}`).then((response)=>{\r\n            if(response.data){\r\n                setLGAs(response.data);\r\n                setFacilities([]);\r\n            }\r\n        }).catch((e)=>{\r\n            console.log(\"Fetch LGA error\"+e)\r\n        })\r\n    }\r\n    const loadFacilities = (e) =>{\r\n        axios.get(`${url}organisation-units/parent-organisation-units/${e.target.value}`).then((response)=>{\r\n            if(response.data){\r\n                setFacilities(response.data)\r\n            }\r\n        }).catch((e)=>{\r\n            console.log(\"Fetch Facilities error\"+e)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadStates()\r\n\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <PageTitle activeMenu=\"Configuration\" motherMenu=\"Facility\" />\r\n\r\n            <Form >\r\n                <Col xl={12} lg={12} md={12}>\r\n                    <Card className={classes.cardBottom}>\r\n                        <CardContent>\r\n                            <Link to=\"/facility\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className=\" float-end ms-2\"\r\n                                    startIcon={<TiArrowBack />}\r\n                                    style={{backgroundColor:'#014d88'}}\r\n                                >\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                </Button>\r\n                            </Link>\r\n                            <br />\r\n\r\n                            <br />\r\n                                <Card>\r\n                                    <CardContent>\r\n                                        <Row>\r\n                                            <Col md={6}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>State</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"parentOrganisationUnitLevelId\"\r\n                                                        id=\"parentOrganisationUnitLevelId\"\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        required\r\n                                                        onChange={loadLGA}\r\n                                                    >\r\n                                                        <option>Select State</option>\r\n                                                        {states.map((state ) => (\r\n                                                            <option key={state.id} value={state.id}>\r\n                                                                {state.name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>LGA</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"parentOrganisationUnitLevelId\"\r\n                                                        id=\"parentOrganisationUnitLevelId\"\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        required\r\n                                                        onChange={loadFacilities}\r\n                                                    >\r\n                                                        <option>Select LGA</option>\r\n                                                        {lgas.map((lga ) => (\r\n                                                            <option key={lga.id} value={lga.id}>\r\n                                                                {lga.name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                                <Card style={{marginTop:'10px'}}>\r\n                                    <CardContent>\r\n                                        <Row>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Facility</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"parentOrganisationUnitLevelId\"\r\n                                                        id=\"parentOrganisationUnitLevelId\"\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        required\r\n                                                    >\r\n                                                        <option>Select Facility</option>\r\n                                                        {facilities.map((facility ) => (\r\n                                                            <option key={facility.id} value={facility.id}>\r\n                                                                {facility.name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>MFL Code</Label>\r\n                                                    <Input\r\n                                                        type=\"text\"\r\n                                                        name=\"name\"\r\n                                                        id=\"name\"\r\n                                                        disabled={true}\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        required\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Datim UID</Label>\r\n                                                    <Input\r\n                                                        type=\"text\"\r\n                                                        name=\"name\"\r\n                                                        id=\"name\"\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        required\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n\r\n\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={saving}\r\n                                style={{backgroundColor:'#014d88'}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\",color:'#fff' }}>Cancel</span>\r\n                            </MatButton>\r\n\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddFacility;","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\menu.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\NewBootstrapModule.js",["660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686"],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\index.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\api\\index.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\FaciltyConfig\\FacilitiesList.js",["687","688","689","690","691","692","693","694"],"import React, {forwardRef, useEffect, useState} from 'react';\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport MaterialTable from \"material-table\";\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdModeEdit, MdPerson} from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nfunction FacilitiesList(props) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [rolesList, setRolesList] = useState([]);\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                type:'link',\r\n                name:'View',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/edit-role\",\r\n                    state: { row: row }\r\n                }\r\n            },\r\n            {\r\n                type:'link',\r\n                name:'Edit',\r\n                icon:<MdPerson size=\"20\" color='#014d88' />,\r\n                to:{\r\n                    pathname: \"/edit-role\",\r\n                    state: { row: row }\r\n                }\r\n            },\r\n/*            {\r\n                type:'button',\r\n                name:'Delete',\r\n                icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                onClick:(() =>  deleteRoleModal(row.id))\r\n            }*/\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Facilities\"\r\n                columns={[\r\n                    { title: \"Id\", field: \"id\", filtering: false, hidden:true },\r\n                    { title: \"State\", field: \"state\",filtering: true  },\r\n                    { title: \"LGA\", field: \"lga\",filtering: true  },\r\n                    { title: \"Facility\", field: \"facility_name\",filtering: true  },\r\n                    { title: \"MFL Code\", field: \"mfl_code\",filtering: true  },\r\n                    { title: \"Datim UID\", field: \"datim_uid\",filtering: true },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={rolesList.map((row) => ({\r\n                    id: row.id,\r\n                    name: row.name,\r\n\r\n                    actions: (\r\n                        <div>\r\n                            <SplitActionButton actions={actionItems(row)} />\r\n                        </div>\r\n                    ),\r\n                }))}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'14px',\r\n                    },\r\n\r\n                    searchFieldStyle: {\r\n                        width: \"150%\",\r\n                        margingLeft: \"150px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FacilitiesList;","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\bootstrapModule.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Progress.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\Message.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\Header.js",["695","696","697","698","699","700"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport {url as baseUrl} from \"./../../../api\";\r\n/// Image\r\nimport avatar from \"../../../images/avatar/user-avatar-white.png\";\r\nimport LogoutPage from './Logout';\r\nimport {  toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { authentication } from \"./../../../_services/authentication\";\r\nimport * as ACTION_TYPES from \"./../../../actions/types\";\r\nimport store from \"./../../../store\";\r\n//import AssignFacilityModal from './../../components/Users/AssignFacilityModalFirst'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\n\r\nconst { dispatch } = store;\r\n\r\nconst Header = (props) => {\r\n    const [user, setUser] = useState(null);\r\n    //const [modal, setModal] = useState(false);\r\n    const [roles, setRoles] = useState([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            axios\r\n                .get(`${baseUrl}roles`)\r\n                .then((response) => {\r\n                    setRoles(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.name,\r\n                        }))\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n\r\n                });\r\n        }\r\n        getCharacters();\r\n    }, []);\r\n    const [assignFacilityModal, setAssignFacilityModal] = useState(false);\r\n    //TO ASSIGN FACILITIES\r\n    const toggleAssignModal = () => {\r\n        setAssignFacilityModal(!assignFacilityModal);\r\n    }\r\n    async function fetchMe() {\r\n        if( authentication.currentUserValue != null ) {\r\n            axios\r\n                .get(`${baseUrl}account`)\r\n                .then((response) => {\r\n                    setUser(response.data);\r\n                    // set user permissions in local storage for easy retrieval, when user logs out it will be removed from the local storage\r\n                    localStorage.setItem('currentUser_Permission', JSON.stringify(response.data.permissions));\r\n                    dispatch({\r\n                        type: ACTION_TYPES.FETCH_PERMISSIONS,\r\n                        payload: response.data.permissions,\r\n                    });\r\n\r\n                    if(response.data && response.data.currentOrganisationUnitId === null ){\r\n                        toggleAssignModal()\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    authentication.logout();\r\n                    // console.log(error);\r\n                });\r\n        }\r\n    }\r\n\r\n    async function switchFacility (facility) {\r\n        console.log(facility)\r\n        await axios.post(`${baseUrl}users/organisationUnit/${facility}`, {})\r\n            .then(response => {\r\n                toast.success('Facility switched successfully!');\r\n                fetchMe();\r\n                //toggleAssignFacilityModal();\r\n            }) .catch((error) => {\r\n                toast.error('An error occurred, could not switch facility.');\r\n            });\r\n\r\n    }\r\n\r\n    const currentUser = authentication.getCurrentUser();\r\n    useEffect(() => {\r\n        fetchMe();\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        /*<div className=\"header\" style={{ backgroundColor: '#303f9f', height:'55px' }}>*/\r\n        <div className=\"header\" style={{ backgroundColor: '#014d88', height:'65px' }}>\r\n            <div className=\"header-content\" style={{borderLeft: \"solid 1px #fff\"}}>\r\n                <nav className=\"navbar navbar-expand\">\r\n                    <div className=\"collapse navbar-collapse justify-content-between\">\r\n                        <div className=\"header-left\">\r\n                            <div className=\"input-group search-area d-xl-inline-flex d-none\" style={{color:'#d9fbff',fontSize:'18px', fontWeight:'bold',width:'auto'}}>\r\n                                {/* Content can go here */}\r\n                                {user && user.currentOrganisationUnitName?\r\n                                    <div>\r\n                                        <span style={{color:'#d9fbff',fontSize:'18px', fontWeight:'bold'}}>{'Welcome to' } </span><\r\n                                        span>&nbsp;:</span>\r\n                                        <span>&nbsp;</span>\r\n                                        <span style={{color:'#fff',fontSize:'24px', fontWeight:'bold', marginLeft:'10px'}}>{user.currentOrganisationUnitName}</span>\r\n                                    </div>\r\n\r\n                                    :\"No Default Facility\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"navbar-nav header-right main-notification\">\r\n                            <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\r\n                                <Dropdown.Toggle variant=\"\" as=\"a\" className=\"nav-link i-false c-pointer\"\r\n                                                 role=\"button\" data-toggle=\"dropdown\"\r\n                                >\r\n                                    <div className=\"header-info me-3\">\r\n\r\n                                        <small className=\"text-end fs-14 font-w400\" style={{ color: '#ffffff' }}>{currentUser.name}</small>\r\n                                    </div>\r\n                                    <img src={avatar} alt=\"\" style={{height:'45px',width:'45px'}} />\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu align=\"right\" className=\"mt-2 dropdown-menu-end\">\r\n                                    <Link to=\"#\" className=\"dropdown-item ai-icon\" onClick={()=> window.open(\"https://datafinigeria.on.spiceworks.com/portal\", \"_blank\")}>\r\n                                        <i class=\"fa fa-bolt\" aria-hidden=\"true\"></i>\r\n                                        <span className=\"ms-2\">Help </span>\r\n                                    </Link>\r\n                                    <Link to={{pathname: \"/account\", state: { user: user, defRole: roles  }}} className=\"dropdown-item ai-icon\">\r\n                                        <svg\r\n                                            id=\"icon-user1\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-primary\"\r\n                                            width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                            stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\"strokeLinejoin=\"round\"\r\n                                        >\r\n                                            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                                            <circle cx={12} cy={7} r={4} />\r\n                                        </svg>\r\n                                        <span className=\"ms-2\">Account </span>\r\n                                    </Link>\r\n\r\n\r\n\r\n\r\n                                    <React.Fragment>\r\n                                        <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center',marginLeft:'5px' }}>\r\n                                            <Tooltip title=\"Account settings\">\r\n                                                <IconButton\r\n                                                    onClick={handleClick}\r\n                                                    size=\"small\"\r\n                                                    sx={{ ml: 2 }}\r\n                                                    aria-controls={open ? 'account-menu' : undefined}\r\n                                                    aria-haspopup=\"true\"\r\n                                                    aria-expanded={open ? 'true' : undefined}\r\n                                                >\r\n                                                    <i className=\"fa fa-bolt\" style={{color:'#992E62'}} aria-hidden=\"true\"></i>\r\n                                                    <span className=\"ms-2\" style={{color:'#992E62'}}>Switch Facility</span>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <Menu\r\n                                            anchorEl={anchorEl}\r\n                                            id=\"account-menu\"\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                            onClick={handleClose}\r\n                                            PaperProps={{\r\n                                                elevation: 0,\r\n                                                sx: {\r\n                                                    overflow: 'visible',\r\n                                                    filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                                    mt: 1.5,\r\n                                                    '& .MuiAvatar-root': {\r\n                                                        width: 32,\r\n                                                        height: 32,\r\n                                                        ml: -0.5,\r\n                                                        mr: 1,\r\n                                                    },\r\n                                                    '&:before': {\r\n                                                        content: '\"\"',\r\n                                                        display: 'block',\r\n                                                        position: 'absolute',\r\n                                                        top: 0,\r\n                                                        right: 14,\r\n                                                        width: 10,\r\n                                                        height: 10,\r\n                                                        bgcolor: 'background.paper',\r\n                                                        transform: 'translateY(-50%) rotate(45deg)',\r\n                                                        zIndex: 0,\r\n                                                    },\r\n                                                },\r\n                                            }}\r\n                                            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                                            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                                        >\r\n                                            {user && user.applicationUserOrganisationUnits.length > 0 ?\r\n                                                user.applicationUserOrganisationUnits.map((organisation, index) => (\r\n                                                    <MenuItem style={{color:'#014d88', fontWeight:'400',fontFamily:`'poppins', sans-serif`}} onClick={()=>switchFacility(organisation.organisationUnitId)}>\r\n                                                        <i className=\"fa fa-hospital-o\" aria-hidden=\"true\" style={{color:'#992E62',marginRight:'5px'}}></i>\r\n                                                        {organisation.organisationUnitName}\r\n                                                    </MenuItem>\r\n                                                ))\r\n                                                :''}\r\n                                        </Menu>\r\n                                    </React.Fragment>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    <LogoutPage />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            {/* <AssignFacilityModal showModal={assignFacilityModal} toggleModal={() => setAssignFacilityModal(!assignFacilityModal)} user={user}/> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\NavHader.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\SideBar.js",["701","702","703","704","705","706","707","708","709","710","711","712","713"],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Button\\SplitActionButton.js",["714","715","716","717","718"],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = () => {\r\n        //console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\r\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                    1\r\n                </Divider>\r\n                <Button\r\n                    size=\"medium\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}\r\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                >\r\n                    <FaCaretDown size='24' />\r\n                </Button>\r\n            </ButtonGroup>\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                style={{ zIndex:'10000' }}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            zIndex:'1000'\r\n                        }}\r\n                    >\r\n                        {/*width: 130,*/}\r\n                        <Paper sx={{ width:'150px', marginTop:'2px', zIndex:'1000' }}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                    {props.actions.slice(1).map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={Math.random()}\r\n                                            {...(option.type==='button'&& {onClick:option.onClick})}\r\n                                        >\r\n                                            <Link\r\n                                                to={option.type==='link'?option.to:'#'}\r\n                                                style={{width:'100%'}}\r\n                                            >\r\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                            </Link>\r\n\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserList.js",["719","720","721","722","723"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers, deleteUser } from \"./../../../actions/user\";\r\nimport \"./UserList.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {  Badge} from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport AssignFacilityModal from \"./AssignFacilityModal\";\r\nimport { forwardRef } from 'react';\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport {  Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { Button} from \"react-bootstrap\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {FaEye} from \"react-icons/fa\";\r\nimport {MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nlet userId = 0;\r\nlet currentUser = {};\r\n\r\nconst UserList = (props) => {\r\n    let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n  const [assignFacilityModal, setAssignFacilityModal] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchUsers()\r\n  }, []);\r\n    const handleClose = () => setModal(false);\r\n  const fetchUsers = ()=> {\r\n    const onSuccess = () => {\r\n      setLoading(false);\r\n    };\r\n    const onError = () => {\r\n      setLoading(false);\r\n    };\r\n    props.fetchAllUsers(onSuccess, onError);\r\n  }\r\n  /* Get list of Roles from the server */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}roles`)\r\n        .then((response) => {\r\n          setRoles(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.name,\r\n              value: value.name,\r\n            }))\r\n          );\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n\r\n  const deleteUserModal = (id) => {\r\n    userId = id;\r\n    setModal(!modal);\r\n\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    const onSuccess = () => {\r\n      fetchUsers()\r\n      toast.success(\"User Deleted Successfully\");\r\n      setModal(false)\r\n      history.push(\"/users\")\r\n      return;\r\n    };\r\n    const onError = () => {\r\n      //toast.error(\"Something went wrong\");\r\n      return;\r\n    };\r\n    props.deleteUser(id, onSuccess,onError);  \r\n      \r\n      \r\n  };\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                type:'link',\r\n                name:'View',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/edit-user\",\r\n                    state: { user: row, defRole: roles  }\r\n                }\r\n            },\r\n            {\r\n                type:'link',\r\n                name:'Edit',\r\n                icon:<MdPerson size=\"20\" color='#014d88' />,\r\n                to:{\r\n                    pathname: \"/edit-user\",\r\n                    state: { user: row, defRole: roles  }\r\n                }\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Delete',\r\n                icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                onClick:(() => deleteUserModal( row.id))\r\n            }\r\n        ]\r\n    }\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <MaterialTable\r\n      icons={tableIcons}\r\n        title=\"Users\"\r\n        columns={[\r\n          { title: \"Name\", field: \"name\" },\r\n          { title: \"Username\", field: \"userName\", filtering: false },\r\n          //{ title: \"Gender\", field: \"gender\", filtering: false },\r\n          { title: \"Designation\", field: \"designation\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={props.usersList.map((row) => ({\r\n          name: row.firstName + \" \" + row.lastName,\r\n          userName: row.userName,\r\n          //gender: row.gender,\r\n          designation: ( <Badge variant=\"primary badge-xs light\">{row.designation}</Badge>),\r\n          actions: (\r\n            <div>\r\n                <SplitActionButton actions={actionItems(row)} />\r\n{/*                <Link to={{pathname: \"/edit-user\", state: { user: row, defRole: roles  }}}\r\n                >\r\n                <Label as='a' color='blue' className=\"ms-1\" size='mini'>\r\n                    <Icon name='pencil' /> Edit\r\n                </Label>\r\n                </Link>\r\n                <Label as='a' color='red' onClick={() => deleteUserModal( row.id)} size='mini'>\r\n                    <Icon name='trash' /> Delete\r\n                </Label>*/}\r\n\r\n             \r\n            </div>\r\n\r\n          ),\r\n        }))}\r\n        options={{\r\n            headerStyle: {\r\n                zIndex:'3',\r\n                backgroundColor: \"#014d88\",\r\n                color: \"#fff\",\r\n                fontSize:'16px',\r\n                padding:'10px'\r\n            },\r\n          searchFieldStyle: {\r\n            width: \"300%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n        }}\r\n      />\r\n       <Modal show={modal}>\r\n\r\n          <Modal.Header>\r\n              <Modal.Title>Delete User</Modal.Title>\r\n              <Button\r\n                  variant=\"\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModal(false)}\r\n              >\r\n\r\n              </Button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Are you sure you want to delete User</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              \r\n              onClick={() => onDelete(userId)}\r\n            >\r\n            Yes\r\n            </MatButton>\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={() => setModal(false)}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Modal.Footer>\r\n          </Modal>\r\n      <AssignFacilityModal\r\n          showModal={assignFacilityModal} toggleModal={() => setAssignFacilityModal(!assignFacilityModal)} user={currentUser}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersList: state.users.list,\r\n    //usersList: [],\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchAllUsers: fetchUsers,\r\n  //updateUserRole: updateUserRole,\r\n  deleteUser: deleteUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(UserList);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\SalesCanvas.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\RevenueLineApex.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Donut.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\TicketsLineApex.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\UpcomingEventSection.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesRevenueTab.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Latestsaleblog.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\RecentEvenList.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\BestSellingTab.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\EditModuleMenu.js",["724","725","726","727","728","729","730","731","732","733","734","735","736","737"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { getModuleMenus,  editModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] = useState(props.datasample);\r\n    //console.log(details)\r\n    useEffect(() => {\r\n        setDetails(props.datasample)\r\n    }, [props.datasample]);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus?withChild=true`)\r\n                .then((response) => {\r\n                    //console.log(response.data)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, [props.datasample]);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const EditMenu = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n\r\n            }\r\n            props.editModuleMenu(details.id, details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Edit Module Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">{datasample.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                                <h5 className=\"card-title\">Module Menu </h5>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>\r\n                                                                Choose...\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value}>\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Menu Type(Position)</label>\r\n                                                        <select\r\n                                                            value={details.type}\r\n                                                            id=\"type\"\r\n                                                            name=\"type\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        >\r\n                                                            <option value=\"\" >Choose...</option>\r\n                                                            <option value=\"sidebar\" >Sidebar</option>\r\n                                                            <option value=\"component\" >Component</option>\r\n                                                            <option value=\"both\" >Both</option>\r\n                                                        </select>\r\n                                                        {errors.type !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.type}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"code\"\r\n                                                            id=\"code\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.code}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Breadcrumb</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"breadcrumb\"\r\n                                                            id=\"breadcrumb\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.breadcrumb}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label>Tooltip</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"tooltip\"\r\n                                                            id=\"tooltip\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.tooltip}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={EditMenu}\r\n\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon />}>\r\n                                                    <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    editModuleMenu: editModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\menu.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Functions\\LoadMenu.js",["738","739","740"],"import { useState, useEffect  } from 'react'\r\n//import useFunctions from './../../components/Functions/LoadMenu'\r\nimport {fetchAll, fetchUserPermission} from \"../../../actions/menu\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst LoadMenus = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n        fetchExternalMenu2()\r\n        }, [])\r\n\r\n        const fetchExternalMenu2 = () => {\r\n            const onSuccess = () => {\r\n            }\r\n            const onError = () => {\r\n            }\r\n            props.fetchAllExternalModulesMenu(onSuccess, onError);\r\n        };\r\n\r\n    const menuItems = props.menuList;\r\n\r\n    return {\r\n        fetchExternalMenu2,\r\n        menuItems\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        menuList: state.menu.list\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    fetchAllExternalModulesMenu: fetchAll\r\n};\r\n\r\nexport  default connect(mapStateToProps, mapActionToProps)(LoadMenus);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\layouts\\nav\\Logout.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\AssignFacilityModal.js",["741","742","743"],"import React, {useState, useEffect} from 'react';\r\nimport {  Modal, ModalHeader, ModalBody, Form,Row,Col,FormGroup,Label,Input,Card,CardBody} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { createWard, updateWard } from './../../../actions/applicationCodeset';\r\nimport { Spinner } from 'reactstrap';\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"./../../../api\";\r\nimport Select from \"react-select\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst AssignFacilityModal = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {name:\"\"};\r\n    const currentUser = props.user;\r\n    const [formData, setFormData] = useState( defaultValues)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [lgas, setLgas] = useState([]);\r\n    const [selectedFacilities, setSelectedFacilities] = useState( [] );\r\n    const classes = useStyles()\r\n\r\n    const onFacilitySelect = (selectedValues) => {\r\n        setSelectedFacilities(selectedValues);\r\n    };\r\n\r\n    const getStateByCountry = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 2, setStates);\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    };\r\n\r\n    const getLgaByState = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 3, setLgas);\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    }\r\n\r\n    const getFacilities = (data) => {\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    }\r\n\r\n    const fetchCountries = () => {\r\n        axios\r\n            .get(`${baseUrl}organisation-unit-levels/v2/1/organisation-units`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n                setCountries(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const fetchFacilityByParentId = (parentId, levelId) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/hierarchy/${parentId}/${levelId}`)\r\n            .then((response) => {\r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const fetchOrgUnitByParentId = (parentId, levelId, setData) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/hierarchy/${parentId}/${levelId}`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n               // const d = c.push({label:'Select one', value:''});\r\n\r\n               setData(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        //for application codeset edit, load form data\r\n        setFormData(props.formData ? props.formData : defaultValues);\r\n    }, [props.formData]);\r\n\r\n    useEffect(() => {\r\n        const y = props.user && props.user.applicationUserOrganisationUnits\r\n            ? props.user.applicationUserOrganisationUnits.map((x) => (x.organisationUnitId)) : [];\r\n        setSelectedFacilities(y);\r\n    }, [props.user]);\r\n\r\n    /* Get list of Facilities from the server - id is 4 \r\n    old endpoint organisation-units/organisation-unit-level/4\r\n    */\r\n\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            axios\r\n                .get(`${baseUrl}organisation-unit-levels/v2/4/organisation-units`)\r\n                .then((response) => {\r\n                    setFacilities(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        getCharacters();\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    const handleInputChange = e => {\r\n        setFormData ({ ...formData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const create = e => {\r\n        e.preventDefault()\r\n        setLoading(true);\r\n\r\n        const data = selectedFacilities.map(x =>\r\n        {\r\n            return {applicationUserId: currentUser.id , organisationUnitId : x} });\r\n        console.log(data);\r\n        const onSuccess = () => {\r\n            setLoading(false);\r\n            toast.success(\"Facility assigned successfully!\")\r\n\r\n            props.toggleModal()\r\n            window.location.reload(false);\r\n        }\r\n        const onError = () => {\r\n            setLoading(false);\r\n            toast.error(\"Something went wrong, please contact administration\");\r\n            //props.toggleModal()\r\n        }\r\n\r\n        axios\r\n            .post(`${baseUrl}application_user_organisation_unit`, data)\r\n            .then((response) => {\r\n                onSuccess();\r\n            })\r\n            .catch((error) => {\r\n                onError();\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div >\r\n            <ToastContainer />\r\n            <Modal isOpen={props.showModal} toggle={props.toggleModal} size=\"lg\">\r\n\r\n                <Form onSubmit={create}>\r\n                    <ModalHeader toggle={props.toggleModal}> {props.formData && props.formData.id ? 'Reassign' : 'Assign'} user to a facility </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label>Country</Label>\r\n                                            <Select\r\n                                                required\r\n                                                isMulti={false}\r\n                                                isClearable={true}\r\n                                                onChange={getStateByCountry}\r\n                                                options={countries.map((x) => ({\r\n                                                    label: x.name,\r\n                                                    value: x,\r\n                                                }))}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label>State</Label>\r\n                                            <Select\r\n                                                required\r\n                                                isMulti={false}\r\n                                                isClearable={true}\r\n                                                onChange={getLgaByState}\r\n                                                options={states.map((x) => ({\r\n                                                    label: x.name,\r\n                                                    value: x,\r\n                                                }))}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label>LGA</Label>\r\n                                            <Select\r\n                                                required\r\n                                                isMulti={false}\r\n                                                isClearable={true}\r\n                                                onChange={getFacilities}\r\n                                                options={lgas.map((x) => ({\r\n                                                    label: x.name,\r\n                                                    value: x,\r\n                                                }))}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"Facility\">Assign Facilities</Label>\r\n                                            <DualListBox\r\n                                                canFilter\r\n                                                options={facilities}\r\n                                                onChange={onFacilitySelect}\r\n                                                selected={selectedFacilities}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    disabled={loading}\r\n                                >\r\n                                    Save  {loading ? <Spinner /> : \"\"}\r\n                                </MatButton>\r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={props.toggleModal}\r\n                                    startIcon={<CancelIcon />}\r\n                                >\r\n                                    Cancel\r\n                                </MatButton>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </ModalBody>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default connect(null, { createWard , updateWard})(AssignFacilityModal);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\user.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart3.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart2.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Tab\\DountApexChart.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\applicationCodeset.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart3.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart2.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Ventic\\Home\\Revenue\\SalesApexChart1.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\AddModuleMenu.js",["744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { getModuleMenus, updateModuleMenu, addModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const defaultValues = { }\r\n    const menuItems = { parentId: \"\", name:\"\", url:\"\", breadcrumb: \"\", code:\"\", tooltip:\"\", icon:\"\", type:\"\", level:\"\",state:\"\", disabled: true,}\r\n    const [details, setDetails] = useState(menuItems);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus`)\r\n                .then((response) => {\r\n                    //console.log(response.data)\r\n                    //console.log(datasample)\r\n                    //const filterMenuId=response.data.filter((x)=> x.moduleId!==props.datasample.id)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, []);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddMenu = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            details[\"moduleId\"] = datasample.id\r\n\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n            }\r\n            props.addModuleMenu(details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Add Module Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">{datasample.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                                <h5 className=\"card-title\">Module Menu </h5>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>\r\n                                                                Choose...\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value}>\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Menu Type(Position)</label>\r\n                                                        <select\r\n                                                            value={details.type}\r\n                                                            id=\"type\"\r\n                                                            name=\"type\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        >\r\n                                                            <option value=\"\" >Choose...</option>\r\n                                                            <option value=\"sidebar\" >Sidebar</option>\r\n                                                            <option value=\"component\" >Component</option>\r\n                                                            <option value=\"both\" >Both</option>\r\n                                                        </select>\r\n                                                        {errors.type !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.type}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"code\"\r\n                                                            id=\"code\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.code}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Breadcrumb</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"breadcrumb\"\r\n                                                            id=\"breadcrumb\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.breadcrumb}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label>Tooltip</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"tooltip\"\r\n                                                            id=\"tooltip\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.tooltip}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={AddMenu}\r\n\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon />}>\r\n                                                    <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    addModuleMenu: addModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleMenuPosition.js",["760","761","762","763","764","765","766","767","768","769","770"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {fetchAllBootstrapModule, getModuleMenus, updateModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const defaultValues = { }\r\n    const menuItems = { parentId: \"\", name:\"\", url:\"\", breadcrumb: \"\", tootip:\"\", icon:\"\"}\r\n    //const defaultDetailValuesOtherDetails = { name: \"\", email:\"\", address:\"\", phone:\"\"}\r\n    //const [otherDetailFields, setOtherDetailFields] = useState(false);\r\n    //const [locationList, setLocationList] = useState({ stateName:\"\", lga:\"\"})\r\n    const [otherDetails, setOtherDetails] = useState(datasample);\r\n    const [details, setDetails] = useState(menuItems);\r\n    //const [otherDetailsFields, setOtherDetailsFields] = useState(defaultDetailValuesOtherDetails);\r\n    const [relativesLocation, setRelativesLocation] = useState([]);\r\n    const [locationListArray2, setLocationListArray2] = useState()\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menu`)\r\n                .then((response) => {\r\n                    //console.log(response)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, []);\r\n    useEffect(() => {\r\n        loadModuleMenus()\r\n    }, [datasample.id]); //props.moduleMenuList //componentDidMount to get module menus\r\n    //Method to load module menus\r\n    const loadModuleMenus =()=>{\r\n        const onSuccess = () => {\r\n            setRelativesLocation(props.moduleMenuList)\r\n        }\r\n        const onError = () => {}\r\n        props.getModuleMenus(datasample.id,onSuccess,onError );\r\n    }\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const addLocations2 = e => {\r\n        if(validate()){\r\n\r\n            //details['parentOrganisationUnitId']= otherfields.parentOrganisationUnitId\r\n            details['details']= otherDetails\r\n            //parentOrganisationUnitId\r\n            const allRelativesLocation = [...relativesLocation, details];\r\n            setRelativesLocation(allRelativesLocation);\r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n\r\n    /* Remove Relative Location function **/\r\n    const removeRelativeLocation = index => {\r\n        console.log(relativesLocation)\r\n        relativesLocation.splice(index, 1);\r\n        setRelativesLocation(relativesLocation);\r\n        console.log(relativesLocation)\r\n    };\r\n    /* Edit Relative Location function **/\r\n    const editRelativeLocation = (index, relative) => {\r\n\r\n        setDetails(relative);\r\n        relativesLocation.splice(index, 1);\r\n        setRelativesLocation([...relativesLocation]);\r\n\r\n\r\n    };\r\n    //Assign menuList to MenuObj\r\n    menuobj = menList\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const UpdateModuleMenu = e => {\r\n        e.preventDefault()\r\n        if(relativesLocation.length >0 && validate()){\r\n            //const parentOrganisationUnitId = otherfields.parentOrganisationUnitId\r\n            // const orgUnitIDParam = props.orgUnitID.id\r\n            // console.log(orgUnitIDParam)\r\n            // console.log(parentOrganisationUnitId)\r\n            // console.log(relativesLocation)\r\n\r\n            setLoading(true);\r\n            // const onSuccess = () => {\r\n            //     props.loadOrgUnit()\r\n            //     setLoading(false)\r\n            //     setDetails(defaultDetailValues)\r\n            //     setOtherDetails(defaultValues)\r\n            //     setLocationListArray2([])\r\n            //     props.togglestatus()\r\n            //\r\n            //     resetForm()\r\n            //\r\n            // }\r\n            // const onError = () => {\r\n            //     setLoading(false)\r\n            //     setOtherDetails(defaultValues)\r\n            //     setDetails(defaultDetailValues)\r\n            //     setLocationListArray2([])\r\n            //     props.togglestatus()\r\n            // }\r\n            //props.createOrgUnitLevel(relativesLocation,parentOrganisationUnitId,orgUnitIDParam, onSuccess, onError);\r\n            return\r\n\r\n        }else if(!validate()){\r\n            return\r\n        }else{\r\n            toast.error(\"Organisation Unit can't be empty\")\r\n        }\r\n\r\n    }\r\n    // console.log(props.moduleMenuList)\r\n    // console.log(relativesLocation)\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Update Module Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">{datasample.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                                <h5 className=\"card-title\">Module Menu </h5>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>\r\n                                                                Choose...\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value}>\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Breadcrumb</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"breadcrumb\"\r\n                                                            id=\"breadcrumb\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.breadcrumb}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"iconvalue\"\r\n                                                            name=\"iconvalue\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label>Tooltip</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"tooltip\"\r\n                                                            id=\"tooltip\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.tooltip}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group col-md-2\">\r\n\r\n                                                        <LabelSui as='a' color='black'  onClick={addLocations2} size='' style={{ marginTop:35}}>\r\n                                                            <Icon name='plus' /> Add\r\n                                                        </LabelSui>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            {/*    array addition list when click on the Add button*/}\r\n                                                <Col md={12}>\r\n                                                    <div className=\"\">\r\n                                                        {relativesLocation.length >0\r\n                                                            ?\r\n                                                            <List>\r\n                                                                <Table  striped responsive>\r\n                                                                    <thead >\r\n                                                                    <tr>\r\n                                                                        <th>Parent Menu</th>\r\n                                                                        <th>Menu Name</th>\r\n                                                                        <th >Menu Link</th>\r\n                                                                        <th>Menu Icon</th>\r\n                                                                        <th>Menu Breadcrumb</th>\r\n                                                                        <th >Menu Tooltip</th>\r\n                                                                    </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                    {relativesLocation.map((relative, index) => (\r\n\r\n                                                                        <RelativeList\r\n                                                                            key={index}\r\n                                                                            index={index}\r\n                                                                            relative={relative}\r\n                                                                            removeRelativeLocation={removeRelativeLocation}\r\n                                                                            editRelativeLocation={editRelativeLocation}\r\n                                                                        />\r\n                                                                    ))}\r\n                                                                    </tbody>\r\n                                                                </Table>\r\n                                                            </List>\r\n                                                            :\r\n                                                            \"\"\r\n                                                        }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            {/*End of the Menu List Array */}\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={UpdateModuleMenu}\r\n\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon />}>\r\n                                                    <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RelativeList({\r\n                          relative,\r\n                          index,\r\n                          removeRelativeLocation,\r\n                          editRelativeLocation,\r\n                      }) {\r\n\r\n    function ParentName (parentID){\r\n        if(parentID!==\"\") {\r\n            const getactualmenu = menuobj.filter(x => x.value === parseInt(parentID))\r\n\r\n            //return getactualmenu[0].label\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th>{ParentName(relative.parentId!==null ? relative.parentId :\" \")}</th>\r\n            <th>{relative.name}</th>\r\n            <th>{relative.url}</th>\r\n            <th><i className={relative.icon} /></th>\r\n            <th>{relative.breadcrumb}</th>\r\n            <th>{relative.tooltip}</th>\r\n            <th >\r\n                <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>editRelativeLocation(index, relative)}>\r\n                    <SaveIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n                <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                    <DeleteIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n\r\n            </th>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    updateModuleMenu: updateModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UpdateModuleInformation.js",["771","772"],"import React, {useState,useEffect}   from 'react';\r\nimport {  Row,Col,Card,CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateModuleDetail } from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst UpdateModuleInformation = (props) => {\r\n    let history = useHistory();\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [moduleInformation, setModuleInformation]= useState({})\r\n\r\n    useEffect (()=>{\r\n        //Getting the module information from props\r\n        setModuleInformation(props.datasample ? props.datasample : {})\r\n    },[props.datasample]);\r\n\r\n    //Handle input change of the fields value\r\n    const handleOtherFieldInputChange = e => {\r\n        setModuleInformation ({ ...moduleInformation, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const updateInformation = (e) => {\r\n        e.preventDefault();\r\n        const onError = () => {}\r\n        const onSuccess = () => {\r\n            props.loadModules()\r\n            props.togglestatus()\r\n        }\r\n        props.updateModuleDetail(moduleInformation.id, moduleInformation, onSuccess, onError);\r\n\r\n        //history.push(`/bootstrap-modules`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* <ModalViewResult ref={componentRef} /> */}\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Update Module Information</Modal.Title>\r\n\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <form>\r\n                            <div className=\"basic-form\">\r\n                            \r\n                            <Row style={{ marginTop: '20px'}}>\r\n                                <Col xs=\"12\">\r\n                                    <div className=\"card-body p-0 pb-3\">\r\n                                        <ul className=\"list-group list-group-flush\">\r\n\r\n                                            <li className=\"list-group-item\">\r\n                                                <span className=\"mb-0 title\">Module Name</span> :\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control input-rounded\"\r\n                                                        name={\"name\"}\r\n                                                        onChange={handleOtherFieldInputChange}\r\n                                                        value={moduleInformation.name}\r\n                                                        disabled\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </li>\r\n                                            <li className=\"list-group-item\">\r\n                                                <span className=\"mb-0 title\">Description</span> :\r\n\r\n                                                <span className=\"text-black ms-2\">\r\n                                                  <div className=\"form-group\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control input-rounded\"\r\n                                                        name={\"description\"}\r\n                                                        onChange={handleOtherFieldInputChange}\r\n                                                        value={moduleInformation.description}\r\n                                                    />\r\n                                                </div>\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className=\"list-group-item\">\r\n                                                <span className=\"mb-0 title\">Module Base Package</span> :\r\n                                                <span className=\"text-black ms-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control input-rounded\"\r\n                                                            name={\"basePackage\"}\r\n                                                            value={moduleInformation.basePackage}\r\n                                                            disabled\r\n                                                        />\r\n                                                      </div>\r\n\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </Col>\r\n                                <br/>\r\n\r\n                                <br/>\r\n                            </Row>\r\n                            <br/>\r\n                            <MatButton\r\n                                type='submit'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                //className={classes.button}\r\n                                onClick={updateInformation}\r\n                                className=\" float-right ms-2\"\r\n\r\n                            >\r\n                                Save\r\n                            </MatButton>\r\n                            <MatButton\r\n                                variant='contained'\r\n                                color='default'\r\n                                onClick={props.togglestatus}\r\n                                //className={classes.button}\r\n                                className=\" float-right ms-2\"\r\n                            >\r\n                                Cancel\r\n                            </MatButton>\r\n                          </div>\r\n                          </form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, {updateModuleDetail })(UpdateModuleInformation);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ViewModule.js",["773"],"import React   from 'react';\r\nimport {  Row,Col,Card,CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\n\r\n\r\nconst VieweModule = (props) => {\r\n\r\n    const datasample = props.datasample ? props.datasample : {};\r\n\r\n\r\n  return (      \r\n      <div >\r\n          {/* <ModalViewResult ref={componentRef} /> */}\r\n          \r\n              <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                  <Modal.Header toggle={props.togglestatus}>\r\n                      <Modal.Title>View Module</Modal.Title>\r\n                  <Button\r\n                      variant=\"\"\r\n                      className=\"btn-close\"\r\n                      onClick={props.togglestatus}\r\n                    ></Button>\r\n                  </Modal.Header>\r\n                      <Modal.Body>\r\n                          <Card>\r\n                            <CardBody>\r\n                                <Row style={{ marginTop: '20px'}}>\r\n                                    <Col xs=\"12\">\r\n                                    <div className=\"card-body p-0 pb-3\">\r\n                                      <ul className=\"list-group list-group-flush\">\r\n                                      <li className=\"list-group-item\">\r\n                                              <span className=\"mb-0 title\">Module Name</span> :\r\n                                              <span className=\"text-black \"><h3>{datasample.name}</h3></span>\r\n                                          </li>\r\n                                          <li className=\"list-group-item\">\r\n                                              <span className=\"mb-0 title\">Description</span> :\r\n                                              <span className=\"text-black ms-2\"><b>{datasample.description}</b></span>\r\n                                          </li>\r\n                                          <li className=\"list-group-item\">\r\n                                              <span className=\"mb-0 title\">Module Base Package</span> :\r\n                                              <span className=\"text-black ms-2\"><b>{datasample.basePackage}</b></span>\r\n                                          </li>\r\n                                          <li className=\"list-group-item\">\r\n                                              <span className=\"mb-0 title\">Build Time</span> :\r\n                                              <span className=\"text-black ms-2\"><b>{datasample.buildTime}</b></span>\r\n                                          </li>\r\n                                          \r\n                                          <li className=\"list-group-item\">\r\n                                          \r\n                                              <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Veriosn {datasample.version}</Badge>\r\n                                              <span className=\"mb-0 title\">Status</span> :\r\n                                              <span className=\"text-black desc-text ms-2\">\r\n                                              <Badge variant={datasample.active===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> {datasample.active===true? \"Active\": \"Inactive\"}</Badge>\r\n                                                  \r\n                                              </span>\r\n                                          </li>\r\n                                      </ul>\r\n                                  </div>\r\n                                    </Col>\r\n                                    <br/>\r\n                                    \r\n                                    <br/>\r\n                                </Row>\r\n                            <br/>\r\n\r\n                      </CardBody>\r\n                </Card>\r\n          </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  \r\n  export default VieweModule;\r\n  ","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\ActivateModule.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\DeactivateModule.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\BootstrapModules\\UnInstallModule.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\generalUserDashboardReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\organizationalUnitReducer.js",["774"],"import * as ACTION_TYPES from '../actions/types'\r\n\r\nconst initialState = {\r\n  list: [],\r\n\r\n}\r\n\r\nconst organizationalUnitReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL_ORGANIZATIONAL_UNIT_MODULE:\r\n      return { ...state, list: [...action.payload] }\r\n    \r\n    case ACTION_TYPES.FETCH_ALL_PARENT_ORGANIZATIONAL_UNIT:\r\n      return { ...state, list: [...action.payload] }\r\n    case ACTION_TYPES.FETCH_ALL_PARENT_ORGANIZATIONAL_UNIT_LEVEL:\r\n      return { ...state, list: [...action.payload] }\r\n    case ACTION_TYPES.DELETE_ORGANISATION_UNIT:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id != action.payload),\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default organizationalUnitReducer\r\n\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\rolesReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\SystemInfoReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\bootstrapReducer.js",["775"],"import * as ACTION_TYPES from '../actions/types'\r\n\r\nconst initialState = {\r\n  list: [],\r\n  moduleList:[],\r\n  moduleMenuList:[]\r\n\r\n}\r\n\r\nconst bootstrapModuleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL_BOOTSTRAP_MODULE:\r\n      return { ...state, list: [...action.payload] }\r\n    case ACTION_TYPES.GET_MODULE_MENU:\r\n      return { ...state, moduleMenuList: action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst bootstrapModuleBYBacthNumberReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL_BOOTSTRAP_MODULE_BY_BATCH_NUM:\r\n      return { ...state, moduleList: [...action.payload] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default bootstrapModuleReducer\r\n\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\applicationCodesetReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\userReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\registrationReducer.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\reducers\\patientReducer.js",["776","777"],"import * as ACTION_TYPES from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  status: 0,\r\n  vitalSigns: {},\r\n  vitalSignsList: [],\r\n  allergies: [],\r\n  patient: {},\r\n  previousMedications: [],\r\n  encounters: [],\r\n  exclusiveEncounters: [],\r\n  previousTestOrders: [],\r\n  checkedInPatientList: [],\r\n  consultationHistory: [],\r\n  appointments: [],\r\n  previousRadiologyOrders: [],\r\n  patientCount: []\r\n};\r\n\r\nconst patientReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.PATIENTS_FETCH_ALL:\r\n      return { ...state, list: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENTS_FETCH_BY_ID:\r\n      return { ...state, patient: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENTS_CREATE:\r\n      return { ...state, status: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENTS_ERROR:\r\n      return { ...state, errormsg: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENTS_UPDATE:\r\n      return { ...state, updated: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.patientId != action.payload),\r\n      };\r\n\r\n    case ACTION_TYPES.PATIENT_VITAL_SIGNS:\r\n      return { ...state, vitalSignsList: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_LATEST_VITAL_SIGNS:\r\n      return { ...state, vitalSigns: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_ALLERGIES:\r\n      return { ...state, allergies: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_LATEST_MEDICATION_LIST:\r\n      return { ...state, previousMedications: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_ENCOUNTER_LIST:\r\n      return { ...state, encounters: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_EXCLUSIVE_ENCOUNTER_LIST:\r\n      return { ...state, exclusiveEncounters: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_LAB_ORDERS:\r\n      return { ...state, previousTestOrders: action.payload };\r\n\r\n    case ACTION_TYPES.CHECKEDIN_PATIENT_FETCH_ALL:\r\n      return { ...state, checkedInPatientList: action.payload };\r\n\r\n    case ACTION_TYPES.FETCH_COUNTRIES:\r\n      return { ...state, countries: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x._id == action.payload._id ? action.payload : x\r\n        ),\r\n      };\r\n    case ACTION_TYPES.PATIENT_CONSULTATION_HISTORY:\r\n      return { ...state, consultationHistory: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_APPOINTMENTS:\r\n      return { ...state, appointments: action.payload };\r\n\r\n    case ACTION_TYPES.PATIENT_RADIOLOGY_ORDERS:\r\n      return { ...state, previousRadiologyOrders: action.payload };\r\n    \r\n    case ACTION_TYPES.TOTAL_PATIENTS:\r\n      return { ...state, patientCount: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default patientReducer;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\SubMenuList.js",["778","779","780","781","782","783","784","785","786","787","788","789"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {  getSubMenus, deleteModuleMenu} from '../../../actions/menu';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {FaEye, FaPlus} from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport AddSubMenu from \"./AddSubMenu\";\r\nimport EditSubMenu from './EditSubMenu';\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nlet menuId = 0;\r\nlet menuName=\"\"\r\n\r\nconst SubMenuList = (props) => {\r\n    let history = useHistory();\r\n    console.log(props)\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const classes = useStyles();\r\n    const [updateModuleMenuModal, setUpdateModuleMenuModal] = useState(false) //New Module Menu  Modal\r\n    const togglesetUpdateModuleMenuModal = () => setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    const [editModuleMenuModal, setEditModuleMenuModal] = useState(false) //Edit Module Menu  Modal\r\n    const togglesetEditModuleMenuModal = () => setEditModuleMenuModal(!editModuleMenuModal)\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n    const parent = props.location && props.location.state? props.location.state.parent : [];\r\n    menuName= parent.name && parent.name!=='undefined' ? parent.name : \" \" + \" Submenu List\"\r\n    useEffect(() => {\r\n        loadSubMenus()\r\n    }, [parent.id]); //componentDidMount to get module menus\r\n    //Method to load module menus\r\n    const loadSubMenus =()=>{\r\n        const onSuccess = () => {\r\n            setLoading(false)\r\n        }\r\n        const onError = () => {}\r\n        props.getSubMenus(parent.id, onSuccess,onError );\r\n    }\r\n\r\n    const deleteMenuModal = (id, name) => {\r\n        menuId = id;\r\n        menuName= name\r\n        setModal(!modal);\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const onSuccess = () => {\r\n            setModal(false)\r\n            loadSubMenus()\r\n        };\r\n        const onError = () => {\r\n            toast.error(\"Something went wrong\");\r\n            //return;\r\n        };\r\n        props.deleteModuleMenu(id, onSuccess,onError);\r\n    };\r\n    const updateModuleMenuPosition = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    }\r\n    const editModuleMenu = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setEditModuleMenuModal(!editModuleMenuModal)\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                type:'link',\r\n                name:'View',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/submenu\",\r\n                    state: {parent: row}\r\n                }\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Edit',\r\n                icon:<MdPerson size=\"20\" color='#014d88' />,\r\n                onClick:(() =>  editModuleMenu(row))\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Delete',\r\n                icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                onClick:(() =>  deleteMenuModal(row.id, row.name))\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <PageTitle activeMenu=\"Submenu List\" motherMenu=\"Menu Management \" />\r\n\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-end ms-2\"\r\n                        startIcon={<FaPlus size=\"10\"/>}\r\n                        onClick={()=>updateModuleMenuPosition(parent)}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                    >\r\n                        <span style={{ textTransform: \"capitalize\" }}>New </span>\r\n                        &nbsp;&nbsp;\r\n                        <span style={{ textTransform: \"lowercase\" }}>Menu </span>\r\n                    </MatButton>\r\n                    {/*<Link to={\"/menu\"} >*/}\r\n                    {/*    <MatButton*/}\r\n                    {/*        variant=\"contained\"*/}\r\n                    {/*        color=\"primary\"*/}\r\n                    {/*        className=\" float-end ms-2\"*/}\r\n                    {/*        //startIcon={<FaUserPlus size=\"10\"/>}*/}\r\n\r\n                    {/*    >*/}\r\n                    {/*        <span style={{ textTransform: \"capitalize\" }}>Back</span>*/}\r\n                    {/*    </MatButton>*/}\r\n                    {/*</Link>*/}\r\n                    <Link to={\"/menu\"} >\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"float-end ms-2\"\r\n                            style={{backgroundColor:'#04C4D9',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </MatButton>\r\n                    </Link>\r\n\r\n                    <br/><br/>\r\n                    <MaterialTable\r\n                        icons={tableIcons}\r\n                        title={menuName}\r\n                        columns={[\r\n                            //{ title: \"Id\", field: \"id\", filtering: false },\r\n                            { title: \"Name\", field: \"name\" },\r\n                            { title: \"Parent Menu\", field: \"parent_menu\", filtering: false },\r\n                            //{ title: \"Menu Link/Url\", field: \"url\", filtering: false },\r\n                            { title: \"Menu Icon\", field: \"icon\", filtering: false },\r\n                            { title: \"Children\", field: \"sub_menu\", filtering: false },\r\n                            //{ title: \"Menu Tooltip\", field: \"tooltip\", filtering: false },\r\n                            { title: \"Actions\", field: \"actions\", filtering: false },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={props.submenuItem.map((row) => ({\r\n                            //id: row.id,\r\n                            name: row.name,\r\n                            parent_menu: row.parentName ===null ? \"null\" : row.parentName,\r\n                            sub_menu: row.subs ? row.subs.length : \"none\",\r\n                            icon: row.icon!==null ? (<i className={row.icon} />): \"null\",\r\n                            breadcrum: row.breadcrum,\r\n                            tooltip: row.tooltip,\r\n                            actions: (\r\n                                <div>\r\n                                    <SplitActionButton actions={actionItems(row)} />\r\n{/*\r\n                                    {row.subs && row.subs.length ? (\r\n                                            <Link to={{pathname: \"/submenu\", state: {parent: row}}}>\r\n                                                <Label as='a' color='black' className=\"ms-1\" size='mini'>\r\n                                                    <Icon name='eye'/> View\r\n                                                </Label>\r\n                                            </Link>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() =>  editModuleMenu(row)}>\r\n                                        <Icon name='pencil' /> Edit\r\n                                    </Label>\r\n                                    <Label as='a' color='red' onClick={() =>  deleteMenuModal(row.id, row.name)}  size='mini'>\r\n                                        <Icon name='trash' /> Delete\r\n                                    </Label>\r\n*/}\r\n\r\n\r\n                                </div>\r\n                            ),\r\n                        }))}\r\n                        options={{\r\n                            headerStyle: {\r\n\r\n                                color: \"#000\",\r\n                            },\r\n\r\n                            searchFieldStyle: {\r\n                                width: \"150%\",\r\n                                margingLeft: \"150px\",\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: \"left\",\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={modal} >\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Menu</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Are you sure you want to delete Menu  <b>{menuName}</b></p>\r\n                    <br/>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"ms-2\"\r\n                        startIcon={<SaveIcon />}\r\n\r\n                        onClick={() => onDelete(menuId)}\r\n                    >\r\n                        Yes\r\n                    </MatButton>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        className={classes.button }\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Cancel\r\n                    </span>\r\n                    </MatButton>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n            <AddSubMenu modalstatus={updateModuleMenuModal} togglestatus={togglesetUpdateModuleMenuModal} datasample={collectModal} loadModuleMenus={loadSubMenus} parentObj={parent}/>\r\n            <EditSubMenu modalstatus={editModuleMenuModal} togglestatus={togglesetEditModuleMenuModal} datasample={collectModal} loadModuleMenus={loadSubMenus} />\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        submenuItem: state.menu.submenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getSubMenus: getSubMenus,\r\n    deleteModuleMenu:deleteModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(SubMenuList);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\MenuList.js",["790","791","792","793","794","795","796","797","798","799","800"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {  fetchAll, deleteModuleMenu} from '../../../actions/menu';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\n// import { MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport AddMenu from \"./AddMenu\";\r\nimport EditMenu from './EditMenu';\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nlet menuId = 0;\r\nlet menuName=\"\"\r\n\r\nconst MainMenuList = (props) => {\r\n    let history = useHistory();\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const classes = useStyles();\r\n    const [updateModuleMenuModal, setUpdateModuleMenuModal] = useState(false) //New Module Menu  Modal\r\n    const togglesetUpdateModuleMenuModal = () => setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    const [editModuleMenuModal, setEditModuleMenuModal] = useState(false) //Edit Module Menu  Modal\r\n    const togglesetEditModuleMenuModal = () => setEditModuleMenuModal(!editModuleMenuModal)\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n    const datasample = props.location && props.location.state? props.location.state.datasample : {};\r\n    const moduleName=  \" Menu List\"\r\n    useEffect(() => {\r\n        loadModuleMenus()\r\n    }, []); //componentDidMount to get module menus\r\n    //Method to load module menus\r\n    const loadModuleMenus =()=>{\r\n        const onSuccess = () => {\r\n            setLoading(false)\r\n        }\r\n        const onError = () => {}\r\n        props.getMenus(onSuccess,onError );\r\n    }\r\n\r\n    const deleteMenuModal = (id, name) => {\r\n        menuId = id;\r\n        menuName= name\r\n        setModal(!modal);\r\n\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const onSuccess = () => {\r\n            setModal(false)\r\n            loadModuleMenus()\r\n        };\r\n        const onError = () => {\r\n            toast.error(\"Something went wrong\");\r\n            //return;\r\n        };\r\n        props.deleteModuleMenu(id, onSuccess,onError);\r\n    };\r\n    const updateModuleMenuPosition = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setUpdateModuleMenuModal(!updateModuleMenuModal)\r\n    }\r\n    const editModuleMenu = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setEditModuleMenuModal(!editModuleMenuModal)\r\n    }\r\n\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                type:'link',\r\n                name:'View',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/submenu\",\r\n                    state: {parent: row}\r\n                }\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Edit',\r\n                icon:<MdPerson size=\"20\" color='#014d88' />,\r\n                onClick:(() =>  editModuleMenu(row))\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Delete',\r\n                icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                onClick:(() =>  deleteMenuModal(row.id, row.name))\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <PageTitle activeMenu=\"Menu List\" motherMenu=\"Menu Management \" />\r\n\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2\"\r\n                            startIcon={<FaPlus size=\"10\"/>}\r\n                            onClick={()=>updateModuleMenuPosition(datasample)}\r\n                            style={{backgroundColor:'#014d88 '}}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>New  Menu </span>\r\n                        </MatButton>\r\n\r\n                    <br />\r\n\r\n                    <br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={moduleName}\r\n                columns={[\r\n                    //{ title: \"Id\", field: \"id\", filtering: false },\r\n                    { title: \"Name\", field: \"name\" },\r\n                    { title: \"Parent Menu\", field: \"parent_menu\", filtering: false },\r\n                    { title: \"Children\", field: \"sub_menu\", filtering: false },\r\n\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={props.moduleItem.map((row) => ({\r\n                    //id: row.id,\r\n                    name: row.name,\r\n                    parent_menu: row.parentName ===null ? \"null\" : row.parentName,\r\n                    sub_menu: row.subs ? row.subs.length : \"none\",\r\n                    //icon: (<i className={row.icon} />),\r\n                    breadcrum: row.breadcrum,\r\n                    tooltip: row.tooltip,\r\n                    actions: (\r\n                        <div>\r\n                            <SplitActionButton actions={actionItems(row)} />\r\n{/*\r\n                            {row.subs && row.subs.length ? (\r\n                                    <Link to={{pathname: \"/submenu\", state: {parent: row}}}>\r\n                                        <Label as='a' color='black' className=\"ms-1\" size='mini'>\r\n                                            <Icon name='eye'/> View\r\n                                        </Label>\r\n                                    </Link>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n                            <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() =>  editModuleMenu(row)}>\r\n                                <Icon name='pencil' /> Edit\r\n                            </Label>\r\n\r\n                            <Label as='a' color='red' onClick={() =>  deleteMenuModal(row.id, row.name)}  size='mini'>\r\n                                <Icon name='trash' /> Deletes\r\n                            </Label>\r\n*/}\r\n\r\n\r\n                        </div>\r\n                    ),\r\n                }))}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                        fontSize:'16px',\r\n                        padding:'10px'\r\n                    },\r\n\r\n                    searchFieldStyle: {\r\n                        width: \"150%\",\r\n                        margingLeft: \"150px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                }}\r\n            />\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={modal} >\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Menu</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Are you sure you want to delete Menu  <b>{menuName}</b></p>\r\n                    <br/>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"ms-2\"\r\n                        startIcon={<SaveIcon />}\r\n\r\n                        onClick={() => onDelete(menuId)}\r\n                    >\r\n                        Yes\r\n                    </MatButton>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        className={classes.button }\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Cancel\r\n                    </span>\r\n                    </MatButton>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n            <AddMenu modalstatus={updateModuleMenuModal} togglestatus={togglesetUpdateModuleMenuModal} datasample={collectModal} loadModuleMenus={loadModuleMenus} />\r\n            <EditMenu modalstatus={editModuleMenuModal} togglestatus={togglesetEditModuleMenuModal} datasample={collectModal} loadModuleMenus={loadModuleMenus} />\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleItem: state.menu.list,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getMenus: fetchAll,\r\n    deleteModuleMenu:deleteModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(MainMenuList);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js",["801","802","803","804","805","806","807","808"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\n// import { MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport AddBiometricDevice from \"./AddBiometric\";\r\nimport EditBiometric from './EditBiometric';\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst BiometricList = (props) => {\r\n    let history = useHistory();\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const classes = useStyles();\r\n    const [addNewDeviceModal, setAddNewDeviceModal] = useState(false) //New Device   Modal\r\n    const togglesetAddNewDeviceModal = () => setAddNewDeviceModal(!addNewDeviceModal)\r\n    const [editDeviceModal, setEditDeviceModal] = useState(false) //Edit Module Menu  Modal\r\n    const togglesetEditDeviceModal = () => setEditDeviceModal(!editDeviceModal)\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //loadModuleMenus()\r\n    }, []); //componentDidMount to get module menus\r\n    //Method to load module menus\r\n    // const loadModuleMenus =()=>{\r\n    //     const onSuccess = () => {\r\n    //         setLoading(false)\r\n    //     }\r\n    //     const onError = () => {}\r\n    //     props.getMenus(onSuccess,onError );\r\n    // }\r\n\r\n    const deleteModal = (id, name) => {\r\n        // menuId = id;\r\n        // menuName= name\r\n        setModal(!modal);\r\n\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const onSuccess = () => {\r\n            setModal(false)\r\n            //loadModuleMenus()\r\n        };\r\n        const onError = () => {\r\n            toast.error(\"Something went wrong\");\r\n            //return;\r\n        };\r\n        //props.deleteModuleMenu(id, onSuccess,onError);\r\n    };\r\n    const loadNewDeviceModal = (row) => {\r\n        setAddNewDeviceModal(!addNewDeviceModal)\r\n    }\r\n    const editDevice = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setEditDeviceModal(!editDeviceModal)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <PageTitle activeMenu=\"Biometric List\" motherMenu=\"Biometric Setup \" />\r\n\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2\"\r\n                            startIcon={<FaPlus size=\"10\"/>}\r\n                            onClick={()=>loadNewDeviceModal()}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>New </span>\r\n                            &nbsp;&nbsp;\r\n                            <span style={{ textTransform: \"lowercase\" }}> Device</span>\r\n                        </MatButton>\r\n\r\n                    <br />\r\n\r\n                    <br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Biometric List\"\r\n                columns={[\r\n                    //{ title: \"Id\", field: \"id\", filtering: false },\r\n                    { title: \"Name\", field: \"name\" },\r\n                    { title: \"URL\", field: \"url\", filtering: false },\r\n                    { title: \"Type\", field: \"type\", filtering: false },\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={[].map((row) => ({\r\n                    //id: row.id,\r\n                    name: row.name,\r\n                    url: row.url,\r\n                    type: row.type,\r\n                    status: row.subs ? row.subs.length : \"none\",\r\n\r\n                    actions: (\r\n                        <div>\r\n                           \r\n                            <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() =>  editDevice(row)}>\r\n                                <Icon name='pencil' /> Edit\r\n                            </Label>\r\n\r\n                            <Label as='a' color='red' onClick={() =>  deleteModal(row.id, row.name)}  size='mini'>\r\n                                <Icon name='trash' /> Delete\r\n                            </Label>\r\n\r\n\r\n                        </div>\r\n                    ),\r\n                }))}\r\n                options={{\r\n                    headerStyle: {\r\n\r\n                        color: \"#000\",\r\n                    },\r\n\r\n                    searchFieldStyle: {\r\n                        width: \"150%\",\r\n                        margingLeft: \"150px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                }}\r\n            />\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={modal} >\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Menu</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Are you sure you want to delete Device   <b>{\"\"}</b></p>\r\n                    <br/>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"ms-2\"\r\n                        startIcon={<SaveIcon />}\r\n\r\n                        onClick={() => onDelete()}\r\n                    >\r\n                        Yes\r\n                    </MatButton>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        className={classes.button }\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Cancel\r\n                    </span>\r\n                    </MatButton>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n            <AddBiometricDevice modalstatus={addNewDeviceModal} togglestatus={togglesetAddNewDeviceModal}   />\r\n            <EditBiometric modalstatus={editDeviceModal} togglestatus={togglesetEditDeviceModal} datasample={collectModal}  />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default BiometricList;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\Index.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827"],"import React from 'react'\r\nimport {Card,} from 'reactstrap'\r\nimport { useState, useEffect} from 'react'\r\n//import {  Modal } from \"react-bootstrap\";\r\nimport {Button, Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n// import 'react-datepicker/dist/react-datepicker.css'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\nimport \"@reach/menu-button/styles.css\";\r\nimport MaterialTable from 'material-table';\r\nimport {FaEye, FaPlus} from 'react-icons/fa'\r\nimport DeleteOrgUnitLevel from \"./DeleteOrgUnitLevel\";\r\nimport CreateOrganizationUnitLevel from \"./CreateOrganizationUnitLevel\";\r\nimport UpdateOrganisationUnitLevel from \"./UpdateOrganisationUnitLevel\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  fetchAllOrganizationalUnit, Delete } from '../../../actions/organizationalUnit';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport CreateParentOrgUnit from \"./CreateParentOrgUnit\";\r\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\nimport { forwardRef } from 'react';\r\nimport  MButton from \"@material-ui/core/Button\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: 440\r\n    },\r\n    td: { borderBottom :'#fff'}\r\n})\r\n\r\n\r\n\r\n\r\n\r\n  const OrganizationUnit = (props) => {\r\n    const [basicModal, setBasicModal] = useState(false);\r\n    const [orgUnitID, setorgUnitID] = useState([])\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const [modal, setModal] = useState(false) // \r\n    const toggleModal = () => setModal(!modal)\r\n    const [modal2, setModal2] = useState(false) //\r\n    const toggleModal2 = () => setModal2(!modal2)\r\n    const [modal3, setModal3] = useState(false) //\r\n    const toggleModal3 = () => setModal3(!modal3)\r\n    const [modal4, setModal4] = useState(false) //\r\n    const toggleModal4 = () => setModal4(!modal4)\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState('')\r\n    const dispatch = useDispatch();\r\n    const listOfAllOrgUnit = useSelector(state => state.organizationalUnitReducer.list);\r\n\r\n    useEffect(() => {\r\n      loadAllOrgUnitLevel()\r\n\r\n    }, []); //componentDidMount\r\n    const loadAllOrgUnitLevel = () => {\r\n      setLoading(true);\r\n      const onSuccess = () => {\r\n          setLoading(false)\r\n          \r\n      }\r\n      const onError = () => {\r\n          setLoading(false)     \r\n      }\r\n        const fetchAllOrgUnit = dispatch(fetchAllOrganizationalUnit(onSuccess,onError ));\r\n    }\r\n    const deleteModule = (row) => {  \r\n      setcollectModal({...collectModal, ...row});\r\n      setModal(!modal) \r\n    }\r\n    const updateOrgUnitLevel = (row) => {  \r\n      setcollectModal({...collectModal, ...row});\r\n      setModal3(!modal3) \r\n    }\r\n    \r\n    const createOrgUnit = () => {  \r\n      setModal2(!modal2) \r\n    }\r\n    const createParentOrgUnit = (e) => {\r\n      setorgUnitID(e)  \r\n      setModal4(!modal4)\r\n       \r\n    }\r\n      function actionItems(row){\r\n          return  [\r\n              {\r\n                  type:'link',\r\n                  name:'View',\r\n                  icon:<FaEye  size=\"22\"/>,\r\n                  to:{\r\n                      pathname: \"/admin-parent-organization-unit\",\r\n                      state: { orgUnitLevel: row  }\r\n                  }\r\n              },\r\n              // {\r\n              //     type:'button',\r\n              //     name:'Edit',\r\n              //     icon:<MdPerson size=\"20\" color='#014d88' />,\r\n              //     onClick:(() => updateOrgUnitLevel(row))\r\n              // },\r\n              // {\r\n              //     type:'button',\r\n              //     name:'Delete',\r\n              //     icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n              //     onClick:(() => deleteModule( row))\r\n              // }\r\n          ]\r\n      }\r\nreturn (\r\n    <div >\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <PageTitle activeMenu=\"Organisational Unit Level \" motherMenu=\"Organisational Unit Level\" />\r\n\r\n        <Card body>\r\n                  \r\n            <br/>\r\n                <div className={\"d-flex justify-content-end pb-2\"}>\r\n                  {/*<MButton variant=\"contained\"*/}\r\n                  {/*        color=\"primary\"*/}\r\n                  {/*        startIcon={<FaPlus size=\"10\"/>}*/}\r\n                  {/*        onClick={() => createOrgUnit()}*/}\r\n                  {/*         style={{backgroundColor:'#014d88'}}*/}\r\n                  {/*>*/}\r\n\r\n                  {/*    <span style={{textTransform: 'capitalize'}}>New Org. Unit Level</span>*/}\r\n                  {/*</MButton>*/}\r\n\r\n                </div>\r\n                <MaterialTable\r\n                   icons={tableIcons}\r\n                   title=\"Organisational Unit Levels\"\r\n                    columns={[\r\n                    { title: ' Name', field: 'name' },\r\n                    { title: 'Description', field: 'description' },\r\n                    \r\n                    { title: 'Actions', field: 'actions'},\r\n                    \r\n                  ]}\r\n                  isLoading={loading}\r\n                    data={listOfAllOrgUnit.map((row) => ({\r\n                          name: row.name,  \r\n                          description: row. description,\r\n                        \r\n                        actions:\r\n                          <div>\r\n                              <SplitActionButton actions={actionItems(row)} />\r\n                              {/*<Link to={{pathname: \"/admin-parent-organization-unit\", state: { orgUnitLevel: row  }}}                              >*/}\r\n                              {/*    <Label as='a' color='black' className=\"ms-1\" size='mini'>*/}\r\n                              {/*        <Icon name='eye' /> View*/}\r\n                              {/*    </Label>*/}\r\n                              {/*</Link>*/}\r\n                              {/*<Label as='a' color='blue' onClick={() => updateOrgUnitLevel(row)}  size='mini'>*/}\r\n                              {/*    <Icon name='pencil' /> Edit*/}\r\n                              {/*</Label>*/}\r\n                              {/*<Label as='a' color='red' onClick={() => deleteModule( row)} size='mini'>*/}\r\n                              {/*    <Icon name='trash' /> Delete*/}\r\n                              {/*</Label>*/}\r\n\r\n                        </div>,\r\n                    }))}\r\n                  options={{\r\n                      headerStyle: {\r\n                          backgroundColor: \"#014d88\",\r\n                          color: \"#fff\",\r\n                          fontSize:'16px',\r\n                          padding:'10px',\r\n                          zIndex:'3'\r\n                      },\r\n                      searchFieldStyle: {\r\n                        width : '150%',\r\n                        margingLeft: '150px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    actionsColumnIndex: -1\r\n                    \r\n                  }}\r\n                />\r\n        </Card>\r\n          \r\n       <DeleteOrgUnitLevel modalstatus={modal} togglestatus={toggleModal} orgUnit={collectModal} loadAllOrgUnitLevel={loadAllOrgUnitLevel}/>\r\n       <CreateOrganizationUnitLevel modalstatus={modal2} togglestatus={toggleModal2}  loadAllOrgUnitLevel={loadAllOrgUnitLevel}/>\r\n       <UpdateOrganisationUnitLevel modalstatus={modal3} togglestatus={toggleModal3}  orgUnit={collectModal}/>\r\n       <CreateParentOrgUnit modalstatus={modal4} togglestatus={toggleModal4}   orgUnitID={orgUnitID}/>\r\n                       \r\n       \r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\nexport default OrganizationUnit","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\ParentOrganizationalUnit.js",["828","829","830","831","832","833","834","835","836","837","838","839","840","841","842"],"import React from 'react'\r\nimport {Card} from 'reactstrap'\r\nimport { useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\nimport MaterialTable from 'material-table';\r\nimport {MdDelete, MdModeEdit, MdPerson, MdRemoveRedEye} from \"react-icons/md\";\r\nimport DeleteOrgUnit from \"./DeleteOrgUnit\";\r\nimport UpdateOrganisationUnit from \"./UpdateOrganisationUnit\";\r\nimport CreateParentOrgUnit from \"./CreateParentOrgUnit\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  fetchAllParentOrganizationalUnitlevel } from '../../../actions/organizationalUnit';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {FaPlusCircle, FaPlus, FaEye} from 'react-icons/fa';\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { forwardRef } from 'react';\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {TiArrowBack} from \"react-icons/ti\";\r\n\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: 440\r\n    },\r\n    td: { borderBottom :'#fff'}\r\n})\r\n\r\n\r\n\r\n\r\n\r\n  const ParentOrganizationUnit = (props) => {\r\n    \r\n    const parentOrganisationUnitId = props.location.state && props.location.state.orgUnitLevel  ? props.location.state.orgUnitLevel : {};\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const [orgUnitID, setorgUnitID] = useState([])\r\n    const [modal, setModal] = useState(false) // \r\n    const toggleModal = () => setModal(!modal)\r\n    const [modal2, setModal2] = useState(false) //\r\n    const toggleModal2 = () => setModal2(!modal2)\r\n    const [modal3, setModal3] = useState(false) //\r\n    const toggleModal3 = () => setModal3(!modal3)\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState('')\r\n    const dispatch = useDispatch();\r\n    //const listOfAllParentOrgUnit = useSelector(state => state.organizationalUnitReducer.orgUnitLevelList);\r\n    useEffect(() => {\r\n      loadOrgUnitById()\r\n      \r\n  }, []); //componentDidMount\r\n  const loadOrgUnitById = () => {\r\n\r\n    setLoading(true);\r\n      const onSuccess = () => {\r\n          setLoading(false)\r\n          \r\n      }\r\n      const onError = () => {\r\n          setLoading(false)     \r\n      }\r\n      \r\n        props.fetchAllParentOrganizationalUnitlevel(parentOrganisationUnitId.id, onSuccess,onError );\r\n\r\n\r\n  }\r\n\r\n    const deleteModule = (row) => {  \r\n      setcollectModal({...collectModal, ...row});\r\n      setModal(!modal) \r\n    }\r\n\r\n    const updateOrgUnit = (row) => {  \r\n      setcollectModal({...collectModal, ...row});\r\n      console.log(parentOrganisationUnitId)\r\n      setorgUnitID(parentOrganisationUnitId) \r\n      setModal3(!modal3) \r\n    }\r\n\r\n    const createParentOrgUnit = () => {  \r\n\r\n      setorgUnitID(parentOrganisationUnitId)  \r\n      setModal2(!modal2) \r\n    }\r\n\r\n      function actionItems(row){\r\n          return  [\r\n              {\r\n                  type:'link',\r\n                  name:'View',\r\n                  icon:<FaEye  size=\"22\"/>,\r\n                  to:{\r\n                      pathname: \"#\",\r\n                  }\r\n              },\r\n              {\r\n                  type:'button',\r\n                  name:'Edit',\r\n                  icon:<MdPerson size=\"20\" color='#014d88' />,\r\n                  onClick:(() => updateOrgUnit(row))\r\n              },\r\n              {\r\n                  type:'button',\r\n                  name:'Delete',\r\n                  icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                  onClick:(() => deleteModule( row))\r\n              }\r\n          ]\r\n      }\r\n\r\nreturn (\r\n    <div >\r\n       <ToastContainer autoClose={3000} hideProgressBar />\r\n       \r\n\r\n                            <Card body>\r\n                            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                              <Link color=\"inherit\" to={{pathname: \"/organisation-unit\"}} style={{color:'#014d88', fontWeight:'bolder'}} >\r\n                                  Organisational Unit Level\r\n                              </Link>\r\n                              <Link color=\"inherit\" style={{color:'#014d88', fontWeight:'bolder'}}  >\r\n                                 Organisational Unit \r\n                              </Link>\r\n                              <Typography color=\"textPrimary\" style={{color:'#992E62', fontWeight:'bolder'}} >{parentOrganisationUnitId.name} </Typography>\r\n                             </Breadcrumbs>\r\n                              <br/>\r\n                                  <div className={\"d-flex justify-content-end pb-2\"}>\r\n                                      <Link to={\"/organisation-unit\"} >\r\n                                          <MatButton\r\n                                              variant=\"contained\"\r\n                                              color=\"primary\"\r\n                                              className=\"float-end ms-2\"\r\n                                              style={{backgroundColor:'#04C4D9',fontWeight:\"bolder\"}}\r\n                                              startIcon={<TiArrowBack />}\r\n                                          >\r\n                                              <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                                          </MatButton>\r\n                                      </Link>\r\n                                      {/*<Button variant=\"contained\"*/}\r\n                                      {/*        color=\"primary\"*/}\r\n                                      {/*        startIcon={<FaPlus />}*/}\r\n                                      {/*        onClick={() => createParentOrgUnit()}*/}\r\n                                      {/*        style={{backgroundColor:'#014d88',marginLeft:'5px'}}*/}\r\n                                      {/*>*/}\r\n                                      {/*    <span style={{textTransform: 'capitalize'}}>New Org. Unit</span>*/}\r\n                                      {/*</Button>*/}\r\n                               </div>\r\n                            <MaterialTable\r\n                            icons={tableIcons}\r\n                              title={parentOrganisationUnitId && parentOrganisationUnitId.name ? parentOrganisationUnitId.name : \" \"}\r\n                              columns={[\r\n                                { title: 'Name', field: 'name' },\r\n                               \r\n                                { title: 'Parent', field: 'ParentOrgUnitName' },\r\n                                /*{ title: 'Parent Org. Unit name', field: 'ParentName' },*/\r\n                                { title: 'Description', field: 'description' },\r\n                                \r\n                                // { title: 'Action', field: 'actions'},\r\n                              ]}\r\n                              isLoading={loading}\r\n                                data={props.fetchAllOrgUnitLevelDetail.map((row) => ({\r\n                                      name: row.name, \r\n                                      ParentOrgUnitName: row && row.parentParentOrganisationUnitName ? row.parentParentOrganisationUnitName : \"\",              \r\n                                      /*ParentName: row && row.parentOrganisationUnitName ? row.parentOrganisationUnitName : \"\", */\r\n                                      description: row. description,\r\n                                    \r\n//                                     actions: (\r\n//                                         <div>\r\n//                                             <SplitActionButton actions={actionItems(row)} />\r\n// {/*                                          <Label as='a' color='blue' onClick={() => updateOrgUnit(row)}  size='mini'>\r\n//                                               <Icon name='pencil' /> Edit\r\n//                                           </Label>\r\n//                                           <Label as='a' color='red' onClick={() => deleteModule( row)} size='mini'>\r\n//                                               <Icon name='trash' /> Delete\r\n//                                           </Label>*/}\r\n//                                         </div>\r\n//                                     )\r\n                                }))}\r\n                              options={{\r\n                                headerStyle: {\r\n                                  //backgroundColor: \"#9F9FA5\",\r\n                                  color: \"#000\",\r\n                                  margin: \"auto\"\r\n                                  },\r\n                                  searchFieldStyle: {\r\n                                    width : '200%',\r\n                                    margingLeft: '250px',\r\n                                },\r\n                                filtering: false,\r\n                                exportButton: false,\r\n                                searchFieldAlignment: 'left',\r\n                                actionsColumnIndex: -1\r\n                              }}\r\n                            />\r\n                            </Card>\r\n                   \r\n       <DeleteOrgUnit modalstatus={modal} togglestatus={toggleModal} orgUnit={collectModal}  loadOrgUnit={loadOrgUnitById}/>\r\n       <CreateParentOrgUnit modalstatus={modal2} togglestatus={toggleModal2} orgUnitID={orgUnitID} loadOrgUnit={loadOrgUnitById}/>\r\n       <UpdateOrganisationUnit modalstatus={modal3} togglestatus={toggleModal3} orgUnit={collectModal}  orgUnitID={orgUnitID} loadOrgUnit={loadOrgUnitById}/>\r\n       \r\n    </div>\r\n  )\r\n  \r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchAllOrgUnitLevelDetail: state && state.organizationalUnitReducer?state.organizationalUnitReducer.list:[],\r\n    //fetchAllOrgUnitLevel:[]\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchAllParentOrganizationalUnitlevel: fetchAllParentOrganizationalUnitlevel,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ParentOrganizationUnit)","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Modules\\Index.js",["843","844"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\r\n\r\nconst userToken = currentUserSubject && currentUserSubject.value ? currentUserSubject.value.id_token : \"\";\r\n\r\n\r\n\r\n\r\nexport default function ExternalModules(props) {\r\n\r\n  //let history = useHistory();\r\n  const src = props.location.state;\r\n  //const src = 'http://localhost:3001'\r\n  var myRequest = new Request(src);\r\n  console.log(src)\r\n\r\n  if(!src){\r\n    return (\r\n        <>\r\n          <span>Incorrect url</span>\r\n          \r\n        </>\r\n    )\r\n  }\r\n  return (\r\n\r\n      <>\r\n      {/* <iframe  style={{width:\"100%\", height:\"100%\", border:\"none\", margin:0, padding:0}} src={src + \"?jwt=\"+encodeURIComponent(userToken)} ></iframe> */}\r\n      <embed src={src+ \"?jwt=\"+encodeURIComponent(userToken)}\r\n      width=\"100%\"\r\n      height=\"1000\"\r\n             onLoad={\"Loading please wait...\"}\r\n      onerror=\"alert('URL invalid !!');\"\r\n      />\r\n      </>\r\n  );\r\n}\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\AssignFacility.js",["845","846","847","848","849","850","851","852","853","854","855","856"],"import React, {useState, useEffect} from 'react';\r\nimport {  Modal, ModalHeader, ModalBody, Form,Row,Col,FormGroup,Label,Input,Card,CardBody} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { createWard, updateWard } from './../../../actions/applicationCodeset';\r\nimport { Spinner } from 'reactstrap';\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"./../../../api\";\r\nimport Select from \"react-select\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nlet currentUser = {};\r\n\r\nconst AssignFacility = (props) => {\r\n  const [loading, setLoading] = useState(false)\r\n  console.log(props.location.state.user)\r\n    const defaultValues = {name:\"\"};\r\n    const currentUser = props.location && props.location.state.user ? props.location.state.user : {};\r\n    const [formData, setFormData] = useState( defaultValues)\r\n    const [facilities, setFacilities] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [lgas, setLgas] = useState([]);\r\n    const [selectedFacilities, setSelectedFacilities] = useState( [] );\r\n    const classes = useStyles()\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const onFacilitySelect = (selectedValues) => {\r\n        setSelectedFacilities(selectedValues);\r\n    };\r\n    useEffect(() => {\r\n        const y = props.location.state.user && props.location.state.user.applicationUserOrganisationUnits\r\n            ? props.location.state.user.applicationUserOrganisationUnits.map((x) => (x.organisationUnitId)) : [];\r\n\r\n            setSelectedFacilities(y);\r\n    }, [props.location.state.user]);\r\n\r\n    const getStateByCountry = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 2, setStates);\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    };\r\n\r\n    const getLgaByState = (data) => {\r\n        fetchOrgUnitByParentId(data.value.id, 3, setLgas);\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    }\r\n\r\n    const getFacilities = (data) => {\r\n        fetchFacilityByParentId(data.value.id, 4);\r\n    }\r\n\r\n    const fetchCountries = () => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/organisation-unit-level/1`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n                setCountries(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const fetchFacilityByParentId = (parentId, levelId) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/hierarchy/${parentId}/${levelId}`)\r\n            .then((response) => {\r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const fetchOrgUnitByParentId = (parentId, levelId, setData) => {\r\n        axios\r\n            .get(`${baseUrl}organisation-units/hierarchy/${parentId}/${levelId}`)\r\n            .then((response) => {\r\n                const c = response.data.map(x => ({\r\n                    ...x,\r\n                    label: x.name,\r\n                    value: x.id,\r\n                }));\r\n               // const d = c.push({label:'Select one', value:''});\r\n\r\n               setData(c);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        //for application codeset edit, load form data\r\n        setFormData(props.formData ? props.formData : defaultValues);\r\n    }, [props.formData]);\r\n\r\n\r\n\r\n    /* Get list of Facilities from the server - id is 4*/\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            axios\r\n                .get(`${baseUrl}organisation-units/organisation-unit-level/4`)\r\n                .then((response) => {\r\n                    setFacilities(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        getCharacters();\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    const handleInputChange = e => {\r\n        setFormData ({ ...formData, [e.target.name]: e.target.value});\r\n    }\r\n    const closeButton = e => {\r\n        props.history.push('/users')\r\n    }\r\n    const create = e => {\r\n        e.preventDefault()\r\n        setLoading(true);\r\n\r\n        const data = selectedFacilities.map(x =>\r\n        {\r\n            return {applicationUserId: currentUser.id , organisationUnitId : x} \r\n        });\r\n       \r\n        const onSuccess = () => {\r\n            setLoading(false);\r\n            toast.success(\"Facility assigned successfully!\")\r\n            props.history.push(\"/users\")\r\n        }\r\n        const onError = () => {\r\n            setLoading(false);\r\n            toast.error(\"Something went wrong, please contact administration\");\r\n            //props.toggleModal()\r\n        }\r\n        axios\r\n            .post(`${baseUrl}application_user_organisation_unit`, data)\r\n            .then((response) => {\r\n                onSuccess();\r\n            })\r\n            .catch((error) => {\r\n                onError();\r\n            });\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n        <PageTitle activeMenu=\"Edit Role\" motherMenu=\"Users\" />\r\n        <Link\r\n              to ={{\r\n                pathname: \"/users\",\r\n                state: 'users'\r\n              }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-1\"\r\n            startIcon={<TiArrowBack />}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n      \r\n      <br />\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      \r\n     <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">User Information</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={create}>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-12 col-md-12\">\r\n                    <Row >\r\n\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label>Country</Label>\r\n                                    <Select\r\n                                        required\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        onChange={getStateByCountry}\r\n                                        options={countries.map((x) => ({\r\n                                            label: x.name,\r\n                                            value: x,\r\n                                        }))}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label>State</Label>\r\n                                    <Select\r\n                                        required\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        onChange={getLgaByState}\r\n                                        options={states.map((x) => ({\r\n                                            label: x.name,\r\n                                            value: x,\r\n                                        }))}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label>LGA</Label>\r\n                                    <Select\r\n                                        required\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        onChange={getFacilities}\r\n                                        options={lgas.map((x) => ({\r\n                                            label: x.name,\r\n                                            value: x,\r\n                                        }))}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"Facility\">Assign Facilities</Label>\r\n                                    <DualListBox\r\n                                        canFilter\r\n                                        options={facilities}\r\n                                        onChange={onFacilitySelect}\r\n                                        selected={selectedFacilities}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            </Row>\r\n\r\n                            <MatButton\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            disabled={loading}\r\n                            >\r\n                            Save  {loading ? <Spinner /> : \"\"}\r\n                            </MatButton>\r\n                            <MatButton\r\n                            variant='contained'\r\n                            color='default'\r\n                            onClick={closeButton}\r\n                            startIcon={<CancelIcon />}\r\n                            >\r\n                            Cancel\r\n                            </MatButton>\r\n                    </div>\r\n\r\n                  </div>\r\n                   </form>\r\n                    </div>\r\n                    </div>\r\n                    \r\n          </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createWard , updateWard})(AssignFacility);","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\TestPage\\Index.js",["857"],"import React, {useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Row, Col, Card,  Tab, Tabs, Table,} from \"react-bootstrap\";\r\nimport PatientCard from './PatientCard'\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  radius:{\r\n    \r\n    fontSize: \"9 !important\"\r\n  }\r\n  \r\n}));\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 11,\r\n};\r\n\r\nconst Test = () => {\r\n    const [key, setKey] = useState('home');\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle activeMenu=\"Patients\" motherMenu=\"Patient\" pageContent=\"Patient Detail\" />\r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                    <Tab eventKey=\"home\" title=\"Patient Detail\">\r\n                    <Table striped bordered hover size=\"sm\">\r\n                      <PatientCard />\r\n                    </Table>\r\n                    </Tab>\r\n                    <Tab eventKey=\"properties\" title=\"History\">\r\n                    <p>History</p>\r\n                    </Tab>\r\n                    <Tab eventKey=\"environment\" title=\"All encounters\" >\r\n                    <p>All encounters</p>\r\n                    </Tab>\r\n                    <Tab eventKey=\"config\" title=\"Clinical\" >\r\n                    <p>Clinical</p>\r\n                    </Tab>\r\n                    \r\n                   \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationCodeset\\ApplicationCodesetSearch.js",["858","859","860","861","862","863","864","865","866"],"import React, {useEffect, forwardRef} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAll, deleteApplicationCodeset} from \"./../../../actions/applicationCodeset\";\r\nimport {\r\n    Card,\r\n    CardBody,  Spinner,\r\n} from 'reactstrap';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport {FaEye, FaPlus} from \"react-icons/fa\";\r\nimport NewApplicationCodeset from \"./NewApplicationCodeset\";\r\nimport SaveIcon from \"@material-ui/icons/Delete\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\nimport { Button, Modal} from \"react-bootstrap\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {Icon, Label} from \"semantic-ui-react\";\r\nimport {MdModeEdit, MdPerson, MdDelete} from \"react-icons/md\";\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\n// import EditIcon from \"@material-ui/icons/Edit\";\r\n// import DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}))\r\nconst ApplicationCodesetSearch = (props) => {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [deleting, setDeleting] = React.useState(false);\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [currentCodeset, setCurrentCodeset] = React.useState(null);\r\n    const toggleModal = () => setShowModal(!showModal)\r\n    const toggleDeleteModal = () => setShowDeleteModal(!showDeleteModal)\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        loadApplicationCodeset()\r\n    }, []); //componentDidMount\r\n\r\n const loadApplicationCodeset = () => {\r\n     const onSuccess = () => {\r\n         setLoading(false);\r\n     };\r\n     const onError = () => {\r\n         setLoading(false);\r\n     };\r\n     props.fetchAll(onSuccess, onError);\r\n    }\r\n\r\nconst processDelete = (id) => {\r\n     setDeleting(true);\r\n    const onSuccess = () => {\r\n        setDeleting(false);\r\n        toggleDeleteModal();\r\n        toast.success(\"Application codeset deleted successfully!\");\r\n        loadApplicationCodeset();\r\n    };\r\n    const onError = () => {\r\n        setDeleting(false);\r\n        toast.error(\"Something went wrong, please contact administration\");\r\n    };\r\n    props.delete(id, onSuccess, onError);\r\n    }\r\n    const openApplicationCodeset = (row) => {\r\n        setCurrentCodeset(row);\r\n        toggleModal();\r\n    }\r\n\r\n    const deleteApplicationCodeset = (row) => {\r\n        setCurrentCodeset(row);\r\n        toggleDeleteModal();\r\n    }\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                type:'link',\r\n                name:'View',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{}\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Edit',\r\n                icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n                onClick:(() => openApplicationCodeset(row))\r\n            },\r\n            {\r\n                type:'button',\r\n                name:'Delete',\r\n                icon:<MdDelete size=\"20\" color='#014d88' />,\r\n                onClick:(() => deleteApplicationCodeset( row))\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n        <PageTitle activeMenu=\"Application Codeset List\" motherMenu=\"Application Codeset\" />\r\n            <Card>\r\n                <ToastContainer />\r\n              <CardBody>\r\n                   <div className={\"d-flex justify-content-end pb-2\"}>\r\n                       \r\n                        <ButtonMui variant=\"contained\"\r\n                          color=\"primary\"\r\n                          startIcon={<FaPlus size=\"10\"/>}\r\n                          onClick={() => openApplicationCodeset(null)}\r\n                                   style={{backgroundColor:'#014d88'}}\r\n                        >\r\n                            <span style={{textTransform: 'capitalize'}}>Codeset</span>\r\n                        </ButtonMui>\r\n\r\n                    </div>\r\n                    <MaterialTable\r\n                    icons={tableIcons}\r\n                        title=\"Find Codeset\"\r\n                        columns={[\r\n                            {\r\n                                title: \"Group\",\r\n                                field: \"Group\",\r\n                            },\r\n                            { title: \"Value\", field: \"display\" },\r\n                            { title: \"Version\", field: \"version\" },\r\n                            { title: \"Language\", field: \"language\" },\r\n                            //{ title: \"Action\", field: \"action\" },\r\n                        ]}\r\n                        isLoading={loading}\r\n                        data={props.applicationCodesetList.map((row) => ({\r\n                            Group: row.codesetGroup,\r\n                            \r\n                            display: row.display,\r\n                            language: row.language,\r\n                            version: row.version,\r\n                            // action:\r\n                            // <div>\r\n                            //     <SplitActionButton actions={actionItems(row)} />\r\n                            //    <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() => openApplicationCodeset(row)}>\r\n                            //         <Icon name='pencil' /> Edit\r\n                            //     </Label>\r\n                            //\r\n                            //     <Label as='a' color='red' onClick={() => deleteApplicationCodeset( row)} size='mini'>\r\n                            //         <Icon name='trash' /> Delete\r\n                            //     </Label>\r\n                            //\r\n                            // </div>\r\n\r\n                        }))}\r\n\r\n                        \r\n                        //overriding action menu with props.actions\r\n                        components={props.actions}\r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px',\r\n                                zIndex:'3',\r\n                            },\r\n                            searchFieldStyle: {\r\n                                width : '250%',\r\n                                margingLeft: '250px',\r\n                            },\r\n                            filtering: false,\r\n                            exportButton: false,\r\n                            searchFieldAlignment: 'left',\r\n                            actionsColumnIndex: -1\r\n                        }}\r\n                    />\r\n            </CardBody>\r\n\r\n            <NewApplicationCodeset toggleModal={toggleModal} showModal={showModal} loadApplicationCodeset={loadApplicationCodeset} formData={currentCodeset}/>\r\n            <Modal show={showDeleteModal}  size=\"md\">\r\n                    <Modal.Header toggle={props.toggleDeleteModal}>\r\n\r\n                        <Modal.Title>Delete Global Variable -  {currentCodeset && currentCodeset.display ? currentCodeset.display : \"\"}</Modal.Title>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn-close\"\r\n                            onClick={toggleDeleteModal}\r\n                        >\r\n\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Are you sure you want to proceed ?</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <ButtonMui\r\n                        type='button'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        disabled={deleting}\r\n                        onClick={() => processDelete(currentCodeset.id)}\r\n                    >\r\n                        Delete  {deleting ? <Spinner /> : \"\"}\r\n                    </ButtonMui>\r\n                    <ButtonMui\r\n                        variant='contained'\r\n                        color='default'\r\n                        onClick={toggleDeleteModal}\r\n                        startIcon={<CancelIcon />}\r\n                    >\r\n                        Cancel\r\n                    </ButtonMui>\r\n                </Modal.Footer>\r\n        </Modal>\r\n        </Card>\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        applicationCodesetList: state.applicationCodesets.applicationCodesetList\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    fetchAll: fetchAll,\r\n    delete: deleteApplicationCodeset\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ApplicationCodesetSearch);","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\EditRole.js",["867","868","869","870","871"],"import axios from \"axios\";\r\n//import Page from \"components/Page\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateRole } from \"./../../../actions/role\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport useForm from \"./../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst AddRole = (props) => {\r\n  console.log(props.location.state.row)\r\n  const classes = useStyles();\r\n  const { values, setValues, handleInputChange, resetForm } = useForm({\r\n    name: props.location && props.location.state.row ? props.location.state.row.name : \"\",\r\n    permissions: props.location && props.location.state.row ? props.location.state.row.permission :[],\r\n    menus:props.location && props.location.state.row ? props.location.state.row.menu :[],\r\n  });\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [selectedPermissions, setselectedPermissions] = useState([]);\r\n  const [menList, setMenuList] = useState([])\r\n  const [selectedMenuList, setselectedMenuList] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n \r\n  useEffect(() => {\r\n        //Get list of permission selected\r\n        const y = props.location.state.row && props.location.state.row.permission\r\n        ? props.location.state.row.permission.map((x) => (x.name)) : [];\r\n        setselectedPermissions(y);\r\n        //Get list of selected menu items\r\n        const z = props.location.state.row && props.location.state.row.menu\r\n        ? props.location.state.row.menu.map((x) => (x.id)) : [];\r\n        setselectedMenuList(z);\r\n}, [props.location.state.row.permission, props.location.state.row.menu]);\r\n  /* Get list of Permissions from the server */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}permissions`)\r\n        .then((response) => {\r\n          console.log(Object.entries(response.data));\r\n          setPermissions(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.description,\r\n              value: value.name,\r\n            }))\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n  //Function to get list of  menu\r\n  useEffect(() => {\r\n    async function getMenus() {\r\n        axios\r\n            .get(`${baseUrl}menus?withChild=true`)\r\n            .then((response) => {\r\n                //console.log(response.data)\r\n                setMenuList(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n                //menuobj = menList\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n      }\r\n      getMenus();\r\n  }, []);\r\n\r\n  const onPermissionSelect = (selectedValues) => {\r\n    setselectedPermissions(selectedValues);\r\n  };\r\n  const onMenuItemSelect = (selectedValues) => {\r\n    setselectedMenuList(selectedValues);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let permissions = [];\r\n    selectedPermissions.map((p) => {\r\n      const permission = { name: null };\r\n      permission.name = p;\r\n      permissions.push(permission);\r\n    });\r\n    //values[\"permissions\"] = permissions;\r\n    //get list of selected Menu Items with the id\r\n    let menuItems = [];\r\n    selectedMenuList.map((item) => {\r\n      const menuId = { id: null };\r\n      menuId.id = item;\r\n      menuItems.push(menuId);\r\n    });\r\n    values[\"permissions\"] = permissions;\r\n    values[\"menus\"] = menuItems;\r\n    setSaving(true);\r\n    const onSuccess = () => {\r\n      setSaving(false);\r\n      //toast.success(\"Role Saved Successfully\");\r\n      resetForm();\r\n      props.history.push(\"/roles\")\r\n    };\r\n    const onError = () => {\r\n      setSaving(false);\r\n      //toast.error(\"Something went wrong\");\r\n    };\r\n    props.updateRole(props.location.state.row.id,values, onSuccess, onError);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <PageTitle activeMenu=\"Edit Role\" motherMenu=\"Role\" />\r\n        <Link to=\"/roles\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-2\"\r\n            startIcon={<TiArrowBack />}\r\n            style={{backgroundColor:'#014d88'}}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }} >Back </span>\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n     \r\n      <br />\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Alert color=\"primary\">\r\n        All Information with Asterisks(*) are compulsory\r\n      </Alert>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Col xl={12} lg={12} md={12}>\r\n          <Card className={classes.cardBottom}>\r\n            <CardContent>\r\n              {/* <Title>Add Role</Title> */}\r\n              <br />\r\n              <Row form>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"name\" style={{color:'#014d88',fontWeight:'bolder'}}>Name *</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={values.name}\r\n                      onChange={handleInputChange}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}>Permissions</Label>\r\n                    <DualListBox\r\n                        canFilter\r\n                      options={permissions}\r\n                      onChange={onPermissionSelect}\r\n                      selected={selectedPermissions}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <br/>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}><b>Menu Items</b></Label>\r\n                    <DualListBox\r\n                      canFilter\r\n                      options={menList}\r\n                      onChange={onMenuItemSelect}\r\n                      selected={selectedMenuList}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                style={{backgroundColor:'#014d88'}}\r\n                disabled={saving}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n              <Link to=\"/roles\">\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                onClick={resetForm}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Cancel</span>\r\n              </MatButton>\r\n              </Link>\r\n            </CardContent>\r\n          </Card>\r\n        </Col>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //role: state.roles.role,\r\n  role: [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateRole })(AddRole);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\EditPermission.js",["872","873","874","875","876","877","878","879","880","881","882","883","884"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\n// React Notification\r\n\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { fetchRoles, deleteRole, updateRole } from \"./../../../actions/role\";\r\nimport useForm from \"../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import { FaArrowLeft } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nlet currentUser = {};\r\n\r\nconst RoleList = (props) => {\r\n  const UserDetails= props.location && props.location.state.row ? props.location.state.row : {}\r\n  const userId = UserDetails && UserDetails.id !==null ? UserDetails.id : \"\" ;\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n  const [assignFacilityModal, setAssignFacilityModal] = useState(false);\r\n  const [roles, setRoles] = useState([]);\r\n  const [selectedRoles, setselectedRoles] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [basicModal, setBasicModal] = useState(false);\r\n  let { values, setValues, handleInputChange, resetForm } = useForm({});\r\n\r\n  useEffect(() => {\r\n    const onSuccess = () => {\r\n      setLoading(false);\r\n    };\r\n    const onError = () => {\r\n      setLoading(false);\r\n    };\r\n    props.fetchAllUsers(onSuccess, onError);\r\n    defaultUserRole()\r\n  }, []);\r\n\r\n  /* Get list of Roles from the server */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}roles`)\r\n        .then((response) => {\r\n          setRoles(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.name,\r\n              value: value.name,\r\n            }))\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n\r\n  const onRoleSelect = (selectedValues) => {\r\n    setselectedRoles(selectedValues);\r\n  };\r\n\r\n  const toggleAssignModal = (user) => {\r\n    console.log(user);\r\n    currentUser = user;\r\n    setAssignFacilityModal(!assignFacilityModal);\r\n    console.log(assignFacilityModal);\r\n  \r\n  }\r\n\r\n  const toggleEditRoles = () => {\r\n    props.history.push('/users')\r\n  };\r\n\r\n  const defaultUserRole = () => {\r\n    axios\r\n      .get(`${baseUrl}users/${userId}`)\r\n      .then((response) => {\r\n        setselectedRoles(\r\n          Object.entries(response.data.roles).map(\r\n            ([key, value]) => value\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n};\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    let roles = [];\r\n    selectedRoles.map((p) => {\r\n      const role = { name: null };\r\n      role.name = p;\r\n      roles.push(role);\r\n    });\r\n    values = roles;\r\n    setSaving(true);\r\n    const onSuccess = () => {\r\n      setSaving(false);\r\n      toast.success(\"User roles Updated Successfully\");\r\n      resetForm();\r\n      props.history.push('/users')\r\n    };\r\n    const onError = () => {\r\n      setSaving(false);\r\n      toast.error(\"Something went wrong\");\r\n    };\r\n    props.updateUserRole(userId, values, onSuccess, onError);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <PageTitle activeMenu=\"Edit Permission\" motherMenu=\"Permission\" />\r\n        <Link\r\n              to ={{\r\n                pathname: \"/roles\",\r\n                state: 'users'\r\n              }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-1\"\r\n            startIcon={<TiArrowBack />}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n      \r\n      <br />\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      \r\n     <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Permissions</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={handleEdit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-12 col-md-12\">\r\n                        <FormGroup>\r\n                                <Label for=\"roles\">Roles</Label>\r\n                                <DualListBox\r\n                                    canFilter\r\n                                options={roles}\r\n                                onChange={onRoleSelect}\r\n                                selected={selectedRoles}\r\n                                />\r\n                          </FormGroup>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                    <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            disabled={saving}\r\n                            \r\n                          >\r\n                            {!saving ? (\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                Save\r\n                              </span>\r\n                            ) : (\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                Saving...\r\n                              </span>\r\n                            )}\r\n                          </MatButton>\r\n                          <MatButton\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon />}\r\n                            onClick={toggleEditRoles}\r\n                          >\r\n                            <span style={{ textTransform: \"capitalize\" }}>\r\n                              Cancel\r\n                            </span>\r\n                          </MatButton>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                    \r\n          </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rolesList: state.roles.list,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchAllRoles: fetchRoles,\r\n  deleteRole: deleteRole,\r\n  updateRole: updateRole\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(RoleList);","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\RolesPage.js",["885"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport RoleList from \"./RolesList\";\r\n//import FilteringTable from \"./RoleTable/FilteringTable\"\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst RolePage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n       <PageTitle activeMenu=\"Role List\" motherMenu=\"Roles\" />\r\n\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n            <Link to=\"/add-role\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-2\"\r\n                startIcon={<FaPlus size=\"10\" style={{color:'#fff'}}/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Role </span>\r\n              </Button>\r\n            </Link>\r\n            <br />\r\n\r\n          <br />\r\n          <RoleList />\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\AddRole.js",["886","887","888","889","890"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRole } from \"./../../../actions/role\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport useForm from \"./../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst AddRole = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { values, setValues, handleInputChange, resetForm } = useForm({\r\n    name: \"\",\r\n    permissions: [],\r\n    menus: [],\r\n  });\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [selectedPermissions, setselectedPermissions] = useState([]);\r\n  const [menList, setMenuList] = useState([])\r\n  const [selectedMenuList, setselectedMenuList] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  /* Get list of Permissions from the server */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}permissions`)\r\n        .then((response) => {\r\n          //console.log(Object.entries(response.data));\r\n          setPermissions(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.description,\r\n              value: value.name,\r\n            }))\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n  //Function to get list of  menu\r\n  useEffect(() => {\r\n    async function getMenus() {\r\n        axios\r\n            .get(`${baseUrl}menus?withChild=true`)\r\n            .then((response) => {\r\n                //console.log(response.data)\r\n                setMenuList(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                    }))\r\n                );\r\n                //menuobj = menList\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    getMenus();\r\n}, []);\r\n\r\n  const onPermissionSelect = (selectedValues) => {\r\n    setselectedPermissions(selectedValues);\r\n  };\r\n  const onMenuItemSelect = (selectedValues) => {\r\n    setselectedMenuList(selectedValues);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //get list of selected permissions with the name\r\n    let permissions = [];\r\n    selectedPermissions.map((p) => {\r\n      const permission = { name: null };\r\n      permission.name = p;\r\n      permissions.push(permission);\r\n    });\r\n    //get list of selected Menu Items with the id\r\n    let menuItems = [];\r\n    selectedMenuList.map((item) => {\r\n      const menuId = { id: null };\r\n      menuId.id = item;\r\n      menuItems.push(menuId);\r\n    });\r\n    values[\"permissions\"] = permissions;\r\n    values[\"menus\"] = menuItems;\r\n    setSaving(true);\r\n    const onSuccess = () => {\r\n      setSaving(false);\r\n      resetForm();\r\n      history.push(\"/roles\")\r\n    };\r\n    const onError = () => {\r\n      setSaving(false);\r\n\r\n    };\r\n    props.addRole(values, onSuccess, onError);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <PageTitle activeMenu=\"New Role\" motherMenu=\"Role\" />\r\n        <Link to=\"/roles\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-2\"\r\n            startIcon={<TiArrowBack />}\r\n            style={{backgroundColor:'#014d88'}}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n          </Button>\r\n        </Link>\r\n        <br />\r\n     \r\n      <br />\r\n\r\n      <Alert color=\"primary\">\r\n        All Information with Asterisks(*) are compulsory\r\n      </Alert>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Col xl={12} lg={12} md={12}>\r\n          <Card className={classes.cardBottom}>\r\n            <CardContent>\r\n              {/* <Title>Add Role</Title> */}\r\n              <br />\r\n              <Row form>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"name\" style={{color:'#014d88',fontWeight:'bolder'}}>Name *</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={values.name}\r\n                      onChange={handleInputChange}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}><b>Permissions</b></Label>\r\n                    <DualListBox\r\n                      canFilter\r\n                      options={permissions}\r\n                      onChange={onPermissionSelect}\r\n                      selected={selectedPermissions}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <br/>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}><b>Menu Items</b></Label>\r\n                    <DualListBox\r\n                      canFilter\r\n                      options={menList}\r\n                      onChange={onMenuItemSelect}\r\n                      selected={selectedMenuList}\r\n                      style={{backgroundColor:'#014d88'}}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                disabled={saving}\r\n                style={{backgroundColor:'#014d88'}}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n              \r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                style={{backgroundColor:'#992E62'}}\r\n                onClick={resetForm}\r\n\r\n              >\r\n                <span style={{ textTransform: \"capitalize\",color:'#fff' }}>Cancel</span>\r\n              </MatButton>\r\n              \r\n            </CardContent>\r\n          </Card>\r\n        </Col>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //role: state.roles.role,\r\n  role: [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addRole })(AddRole);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\index.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\EditUser.js",["891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\n// React Notification\r\n\r\nimport { register, update } from \"./../../../actions/user\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { initialfieldState_userRegistration } from \"./../../../_helpers/initialFieldState_UserRegistration\";\r\nimport useForm from \"../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import { FaArrowLeft } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n//import Select from \"react-select\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport _ from \"lodash\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\nlet  arrVal = [];\r\n\r\nconst UserRegistration = (props) => {\r\n   //\r\n  const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n  const [currentUser, setCurrentUser]=useState(null)\r\n  const rolesDef = props.location && props.location.state ? props.location.state.defRole : null;\r\n  const classes = useStyles();\r\n  const { values, setValues, handleInputChange, resetForm } = useForm(\r\n    props.location && props.location.state ? props.location.state.user :  initialfieldState_userRegistration \r\n  );\r\n  const [gender, setGender] = useState([]);\r\n  const [role, setRole] = useState([]);\r\n  const [confirm, setConfirm] = useState(null);\r\n  const [matchingPassword, setMatchingPassword] = useState(false);\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [matchingPasswordClass, setMatchingPasswordClass] = useState(\"\");\r\n  const [validPasswordClass, setValidPasswordClass] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(props.location.state.user.roles);\r\n  const [setArr, setSetArr] = useState([]);\r\n  const [designation, setDesignation] = useState([]);\r\n  const [allOrganisations, setAllorganisations]=useState([]);\r\n  const [organisations,setOrganisations] = useState([]);\r\n  const [selectedOrganisations,setSelectedOrganisations] = useState([ \"CHC ZUNGERU\" ]);\r\n  const [passwordStrength, setPasswordStrength] = useState(\"#E6E6E6\");\r\n  const [passwordTextColor, setPasswordTextColor] = useState(\"#2D2D2D\");\r\n  const [passwordFeedback, setPasswordFeedback] = useState('Minimum 6 characters, one uppercase and lowercase letter and one number');\r\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n  const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n\r\n\r\n\r\n  const fetchOrganisation=()=>{\r\n    axios\r\n        .get(`${baseUrl}organisation-unit-levels/v2/4/organisation-units`)\r\n        .then((response) => {\r\n          setAllorganisations(response.data);\r\n          setOrganisations(\r\n              Object.entries(response.data).map(([key, value]) => ({\r\n                label: value.name,\r\n                value: value.name,\r\n              }))\r\n          );\r\n          setSelectedOrganisations(\r\n              _.uniq(_.map(userDetail.applicationUserOrganisationUnits, 'organisationUnitName'))\r\n          )\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n  }\r\n  useEffect(() => {\r\n\r\n    async function getCharacters() {\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/DESIGNATION`)\r\n      .then((response) => {\r\n        \r\n        setDesignation(\r\n          Object.entries(response.data).map(([key, value]) => ({\r\n            label: value.display,\r\n            value: value.display,\r\n          }))\r\n        );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n    fetchOrganisation();\r\n  }, []);\r\n\r\n  \r\n  /* Get list of Role parameter from the endpoint */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n          .get(`${baseUrl}account/roles`)\r\n          .then((response) => {\r\n            setRole(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                  label: value.name,\r\n                  value: value.name,\r\n                }))\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n\r\n      axios\r\n          .get(`${baseUrl}account`)\r\n          .then((response) => {\r\n            setCurrentUser(response.data)\r\n            setMatchingPassword(true);\r\n            setValidPassword(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n\r\n\r\n  const onPermissionSelect = (selectedValues) => {\r\n    setSelectedOption(selectedValues);\r\n  };\r\n  const onOrganisationSelect = (selectedValues) => {\r\n    setSelectedOrganisations(selectedValues);\r\n  };\r\n\r\n  // check if password and confirm password match\r\n  const handleConfirmPassword = (e, setConfirmPassword = true) => {\r\n    if(strongRegex.test(e.target.value)) {\r\n      setPasswordStrength(\"#DDFFEE\");\r\n      setPasswordTextColor(\"#01C864\");\r\n      setPasswordFeedback('Password Strength: Strong')\r\n    } else if(mediumRegex.test(e.target.value)) {\r\n      setPasswordStrength(\"#FFF3D0\");\r\n      setPasswordTextColor(\"#FFD55A\");\r\n      setPasswordFeedback('Password Strength: Medium')\r\n    } else {\r\n      setPasswordStrength(\"#E6E6E6\");\r\n      setPasswordTextColor(\"#2D2D2D\");\r\n      setPasswordFeedback('Minimum 6 characters, one uppercase and lowercase letter and one number')\r\n    }\r\n\r\n    if (setConfirmPassword) setConfirm(e.target.value);\r\n    if (e.target.value === values.password || e.target.value === confirm) {\r\n      setMatchingPassword(true);\r\n      setMatchingPasswordClass(\"is-valid\");\r\n    } else {\r\n      setMatchingPassword(false);\r\n      setMatchingPasswordClass(\"is-invalid\");\r\n    }\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    handleInputChange(e);\r\n    // validate password\r\n    if (e.target.value.length > 5) {\r\n      setValidPassword(true);\r\n      setValidPasswordClass(\"is-valid\");\r\n    } else {\r\n      setValidPassword(false);\r\n      setValidPasswordClass(\"is-invalid\");\r\n    }\r\n    // check if password and confirm password match\r\n    handleConfirmPassword(e, false);\r\n\r\n  };\r\n\r\n\r\n\r\n/*  async function switchFacility (facility) {\r\n    console.log(facility)\r\n    await axios.post(`${baseUrl}users/organisationUnit/${facility}`, {})\r\n        .then(response => {\r\n          toast.success('Facility switched successfully!');\r\n          //toggleAssignFacilityModal();\r\n        }) .catch((error) => {\r\n          toast.error('An error occurred, could not switch facility.');\r\n        });\r\n\r\n  }*/\r\n\r\n  const updateUserOrganisations=()=>{\r\n    if(selectedOrganisations.length >0){\r\n      //First delete all current organisations\r\n/*      var defaultFacility= _.find(allOrganisations, {name:selectedOrganisations[0]});\r\n      switchFacility(defaultFacility.id);*/\r\n      if(userDetail.applicationUserOrganisationUnits.length >0){\r\n        userDetail.applicationUserOrganisationUnits.map((organisation) =>{\r\n          var orgDetails = _.find(allOrganisations, {id:organisation.organisationUnitId});\r\n          axios.delete(`${baseUrl}application_user_organisation_unit/${orgDetails.id}`, )\r\n              .then(response => {\r\n                toast.success(`successfully added`);\r\n              }) .catch((error) => {\r\n            toast.error(`An error occurred, adding facility`);\r\n          });\r\n        });\r\n\r\n\r\n      }\r\n      console.log()\r\n      //Add Organisations\r\n      let facilityDetails = [];\r\n      selectedOrganisations.map((organisation) =>{\r\n        var orgDetails = _.find(allOrganisations, {name:organisation});\r\n        facilityDetails.push({\r\n          \"applicationUserId\": userDetail.id,\r\n          \"organisationUnitId\": orgDetails.id\r\n        })\r\n\r\n      });\r\n      axios.post(`${baseUrl}application_user_organisation_unit`, facilityDetails)\r\n          .then(response => {\r\n            toast.success(`successfully added`);\r\n          }) .catch((error) => {\r\n        toast.error(`An error occurred, adding facility`);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    updateUserOrganisations();\r\n\r\n    const dateOfBirth = moment(values.dateOfBirth).format(\"YYYY-MM-DD\");\r\n    values[\"dateOfBirth\"] = dateOfBirth;\r\n    values[\"roles\"] = selectedOption\r\n    setSaving(true);\r\n    const onSuccess = () => {\r\n      setSaving(false);\r\n      toast.success(\"User Updated Successful\");\r\n      resetForm();\r\n      props.history.push(\"/users\")\r\n    };\r\n    const onError = () => {\r\n      setSaving(false);\r\n      toast.error(\"Something went wrong\");\r\n    };\r\n\r\n    \r\n    props.update(userDetail.id,values, onSuccess, onError);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <ToastContainer autoClose={3000} hideProgressBar />\r\n        <PageTitle activeMenu={userDetail===null ? \"User Registration\" : \"Edit User\"} motherMenu=\"Users\" />\r\n        <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n            <Link\r\n                  to ={{\r\n                    pathname: \"/users\",\r\n                    state: 'users'\r\n                  }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end ms-1\"\r\n                startIcon={<TiArrowBack style={{color:'#fff'}} />}\r\n                style={{backgroundColor:'#014d88'}}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n              </Button>\r\n            </Link>\r\n            <br />\r\n          \r\n          <br />\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      \r\n      <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\" style={{color:'#014d88',fontWeight:'bolder'}}>{userDetail===null ? \"User Information\" : \"Edit User Information\"}</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"firstName\" style={{color:'#014d88',fontWeight:'bolder'}}>First Name *</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      value={values.firstName}\r\n                      onChange={handleInputChange}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"lastName\" style={{color:'#014d88',fontWeight:'bolder'}}>Last Name * </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      onChange={handleInputChange}\r\n                      value={values.lastName}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"userName\" style={{color:'#014d88',fontWeight:'bolder'}}>Username *</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      id=\"userName\"\r\n                      onChange={handleInputChange}\r\n                      value={values.userName}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                    <Label for=\"email\" style={{color:'#014d88',fontWeight:'bolder'}}>Email *</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      onChange={handleInputChange}\r\n                      value={values.email}\r\n                      style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                   \r\n                    </div>\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"role\">Role *</Label>\r\n                      \r\n                      <Select\r\n                            onChange={setSelectedOption}\r\n                            value={selectedOption}\r\n                            options={role}\r\n                            isMulti=\"true\"\r\n                            noOptionsMessage=\"true\"\r\n                      />\r\n                    </FormGroup>                   \r\n                    </div> */}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                      <Label for=\"gender\" style={{color:'#014d88',fontWeight:'bolder'}}>Designation </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"designation\"\r\n                        id=\"designation\"\r\n                        value={values.designation}\r\n                        onChange={handleInputChange}\r\n                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                        required\r\n                      >\r\n                       \r\n                        {designation.map(({ label, value }) => (\r\n                          <option key={value} value={value}>\r\n                            {label}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>                  \r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                      <Label for=\"phoneNumber\" style={{color:'#014d88',fontWeight:'bolder'}}>Phone Number *</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        onChange={handleInputChange}\r\n                        value={values.phoneNumber}\r\n                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                        required\r\n                      />\r\n                      </FormGroup>                                     \r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"password\" style={{color:'#014d88',fontWeight:'bolder'}}>Password</Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={handlePassword}\r\n                            value={values.password}\r\n                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px',backgroundColor:`${passwordStrength}`}}\r\n                            className={validPasswordClass}\r\n                            autoComplete=\"new-password\"\r\n                          />\r\n                          <div style={{color:`${passwordTextColor}`,opacity:'1'}}>\r\n                            {passwordFeedback}\r\n                          </div>\r\n{/*                        <FormFeedback>\r\n                          Password must be atleast 6 characters\r\n                        </FormFeedback>*/}\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                      <Label for=\"confirm\" style={{color:'#014d88',fontWeight:'bolder'}}>Confirm Password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"confirm\"\r\n                        id=\"confirm\"\r\n                        onChange={handleConfirmPassword}\r\n                        value={confirm}\r\n                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                        className={matchingPasswordClass}\r\n                        autoComplete=\"new-password\"\r\n                      />\r\n                      <FormFeedback>Passwords do not match</FormFeedback>\r\n                      </FormGroup> \r\n                    </div>\r\n\r\n                  </div>\r\n\r\n\r\n\r\n                  <div className=\"form-group mb-12 col-md-12\" >\r\n                    <FormGroup>\r\n                      <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}>Facility*</Label>\r\n                      <DualListBox\r\n                          canFilter\r\n                          options={organisations}\r\n                          onChange={onOrganisationSelect}\r\n                          selected={selectedOrganisations}\r\n                          required\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n\r\n                  <div className=\"form-group mb-12 col-md-12\" style={{paddingTop:'20px'}}>\r\n                      <FormGroup>\r\n                        <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}>Role*</Label>\r\n                        <DualListBox\r\n                          canFilter\r\n                          options={role}\r\n                          onChange={onPermissionSelect}\r\n                          selected={selectedOption}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                \r\n                  {saving ? <Spinner /> : \"\"}\r\n              <br />\r\n              {userDetail ===null ? (\r\n\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={saving || !(validPassword && matchingPassword)}\r\n                  style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                  )}\r\n                </MatButton>\r\n              )\r\n              :\r\n              (\r\n                <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                disabled={!(validPassword && matchingPassword)}\r\n                style={{backgroundColor:'#014d88',color:'#fff'}}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n              )\r\n            }\r\n                  {\" \"}<Link\r\n                        to ={{\r\n                          pathname: \"/users\",\r\n                          state: 'users'\r\n                        }}\r\n                    >\r\n                          <MatButton\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                            style={{backgroundColor:'#992E62'}}\r\n                          >\r\n                            <span style={{ textTransform: \"capitalize\",color:'#fff' }}>Cancel</span>\r\n                          </MatButton>\r\n                </Link>\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        </CardContent>\r\n        </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //status: state.users.status,\r\n  status: [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, update })(UserRegistration);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserAccount.js",["907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\n// React Notification\r\n\r\nimport { register, update } from \"../../../actions/user\";\r\nimport { url as baseUrl } from \"../../../api\";\r\nimport { initialfieldState_userRegistration } from \"../../../_helpers/initialFieldState_UserRegistration\";\r\nimport useForm from \"../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import { FaArrowLeft } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport Select from \"react-select\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\nlet  arrVal = [];\r\n\r\nconst UserRegistration = (props) => {\r\n   //\r\n  const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n  console.log(userDetail)\r\n  const rolesDef = props.location && props.location.state ? props.location.state.defRole : null;\r\n  const classes = useStyles();\r\n  const { values, setValues, handleInputChange, resetForm } = useForm(\r\n    props.location && props.location.state ? props.location.state.user :  initialfieldState_userRegistration \r\n  );\r\n  const [gender, setGender] = useState([]);\r\n  const [role, setRole] = useState([]);\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [matchingPassword, setMatchingPassword] = useState(false);\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [matchingPasswordClass, setMatchingPasswordClass] = useState(\"\");\r\n  const [validPasswordClass, setValidPasswordClass] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [setArr, setSetArr] = useState([]);  \r\n\r\n\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/codesetGroup?codesetGroup=GENDER`)\r\n        .then((response) => {\r\n          \r\n          setGender(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.display,\r\n              value: value.display,\r\n            }))\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n\r\n  /* Get list of Role parameter from the endpoint */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n        .get(`${baseUrl}roles`)\r\n        .then((response) => {\r\n          \r\n          setRole(\r\n            Object.entries(response.data).map(([key, value]) => ({\r\n              label: value.name,\r\n              value: value.name,\r\n            }))\r\n          );\r\n          //setSelectedOption(role.filter(x => x.value in(props.location.state.user.roles)))\r\n          props.location.state.user.roles.forEach(function (value, index, array) {\r\n            for(var i=0; i<rolesDef.length; i++){\r\n              if (rolesDef[i].label===value ){\r\n              \r\n              arrVal.push(rolesDef[i])\r\n              }\r\n                          \r\n            }\r\n            \r\n        });\r\n        setSelectedOption(arrVal)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n \r\n\r\n  // check if password and confirm password match\r\n  const handleConfirmPassword = (e, setConfirmPassword = true) => {\r\n    if (setConfirmPassword) setConfirm(e.target.value);\r\n    if (e.target.value === values.password || e.target.value === confirm) {\r\n      setMatchingPassword(true);\r\n      setMatchingPasswordClass(\"is-valid\");\r\n    } else {\r\n      setMatchingPassword(false);\r\n      setMatchingPasswordClass(\"is-invalid\");\r\n    }\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    handleInputChange(e);\r\n    // validate password\r\n    if (e.target.value.length > 5) {\r\n      setValidPassword(true);\r\n      setValidPasswordClass(\"is-valid\");\r\n    } else {\r\n      setValidPassword(false);\r\n      setValidPasswordClass(\"is-invalid\");\r\n    }\r\n    // check if password and confirm password match\r\n    handleConfirmPassword(e, false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const dateOfBirth = moment(values.dateOfBirth).format(\"YYYY-MM-DD\");\r\n    values[\"dateOfBirth\"] = dateOfBirth;\r\n    //values[\"roles\"] = [values[\"role\"]]\r\n    let roleArr = []\r\n    const newRoleList =selectedOption.forEach(function (value, index, array) {\r\n      roleArr.push(value['label'])\r\n    })\r\n    values[\"roles\"] = roleArr\r\n    setSaving(true);\r\n    const onSuccess = () => {\r\n      setSaving(false);\r\n      toast.success(\"User Updated Successful\");\r\n      resetForm();\r\n      props.history.push(\"/users\")\r\n    };\r\n    const onError = () => {\r\n      setSaving(false);\r\n      toast.error(\"Something went wrong\");\r\n    };\r\n\r\n    \r\n    props.update(userDetail.id,values, onSuccess, onError);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <ToastContainer autoClose={3000} hideProgressBar />\r\n        <PageTitle activeMenu=\"Account\" motherMenu=\"Users\" />\r\n        <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n            <Link\r\n                  to ={{\r\n                    pathname: \"/users\",\r\n                    state: 'users'\r\n                  }}\r\n            >\r\n              \r\n            </Link>\r\n            <br />\r\n          \r\n          <br />\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      \r\n      <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">User Information</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"basic-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"mb-3 col-md-6\">\r\n                    \r\n                    <Label for=\"firstName\">First Name  :  <b>{values.firstName}</b></Label>\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <Label for=\"lastName\">Last Name :  <b>{values.lastName}</b></Label>\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <Label for=\"userName\">Username : <b>{values.userName}</b></Label>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                    <Label for=\"email\">Email :  <b>{values.email}</b></Label>\r\n                   \r\n                    </div>\r\n                    <div className=\" mb-3 col-md-6\">                  \r\n                    <Label for=\"role\">Role  : <b>{values.roles.toString()}</b></Label>          \r\n                    </div>                   \r\n                   \r\n                    <div className=\" mb-3 col-md-6\">\r\n                    <Label for=\"phoneNumber\">Phone Number :<b>{values.phoneNumber}</b></Label>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                \r\n                  {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        </CardContent>\r\n        </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //status: state.users.status,\r\n  status: [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, update })(UserRegistration);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Users\\UserRegistration.js",["928","929","930","931","932","933","934","935","936","937","938"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {\r\n\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\n// React Notification\r\n\r\nimport { register, update } from \"./../../../actions/user\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { initialfieldState_userRegistration } from \"./../../../_helpers/initialFieldState_UserRegistration\";\r\nimport useForm from \"../Functions/UseForm\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import { FaArrowLeft } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport PageTitle from \"./../../layouts/PageTitle\";\r\n//import Select from \"react-select\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport _ from \"lodash\";\r\nimport {authentication} from \"../../../_services/authentication\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .form-control.is-valid': {\r\n      borderColor: '#f72b50 !important',\r\n      borderRight: '0px !important'\r\n    },\r\n    '& .form-control.is-invalid': {\r\n      borderColor: '#f72b50e !important',\r\n      borderRight: '0px !important'\r\n    },\r\n    /*    \"& .react-dual-listbox button, .react-dual-listbox select\":{\r\n          border:'1px solid #E6E6E6'\r\n        }*/\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n\r\n}));\r\n//let  arrVal = [];\r\n\r\nconst UserRegistration = (props) => {\r\n  const history = useHistory();\r\n  const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n  //const rolesDef = props.location && props.location.state ? props.location.state.defRole : null;\r\n  const classes = useStyles();\r\n  const { values, setValues, handleInputChange, resetForm } = useForm(\r\n      props.location && props.location.state ? props.location.state.user :  initialfieldState_userRegistration\r\n  );\r\n  //const [gender, setGender] = useState([]);\r\n  const [role, setRole] = useState([]);\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [matchingPassword, setMatchingPassword] = useState(false);\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [matchingPasswordClass, setMatchingPasswordClass] = useState(\"\");\r\n  const [validPasswordClass, setValidPasswordClass] = useState(\"\");\r\n  const [saving, setSaving] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [designation, setDesignation] = useState([]);\r\n  const [allOrganisations, setAllorganisations]=useState([]);\r\n  const [organisations,setOrganisations] = useState([]);\r\n  const [selectedOrganisations,setSelectedOrganisations] = useState([]);\r\n  const [passwordStrength, setPasswordStrength] = useState(\"#E6E6E6\");\r\n  const [passwordTextColor, setPasswordTextColor] = useState(\"#2D2D2D\");\r\n  const [passwordFeedback, setPasswordFeedback] = useState('Minimum 6 characters, one uppercase and lowercase letter and one number');\r\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n  const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchOrganisation=()=>{\r\n    axios\r\n        .get(`${baseUrl}organisation-unit-levels/v2/4/organisation-units`)\r\n        .then((response) => {\r\n          setAllorganisations(response.data);\r\n          // setOrganisations(\r\n          //     Object.entries(response.data).map(([key, value]) => ({\r\n          //       label: value.name,\r\n          //       value: value.name,\r\n          //     }))\r\n          // );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n          .get(`${baseUrl}application-codesets/v2/DESIGNATION`)\r\n          .then((response) => {\r\n\r\n            setDesignation(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                  label: value.display,\r\n                  value: value.display,\r\n                }))\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n    getCharacters();\r\n    fetchOrganisation();\r\n    fetchMe();\r\n  }, []);\r\n\r\n  /* Get list of Role parameter from the endpoint */\r\n  useEffect(() => {\r\n    async function getCharacters() {\r\n      axios\r\n          .get(`${baseUrl}account/roles`)\r\n          .then((response) => {\r\n            //console.log(response.data)\r\n            setRole(\r\n                Object.entries(response.data).map(([key, value]) => ({\r\n                  label: value.name,\r\n                  value: value.name,\r\n                }))\r\n            );\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n    getCharacters();\r\n  }, []);\r\n  async function fetchMe() {\r\n    if( authentication.currentUserValue != null ) {\r\n      axios\r\n          .get(`${baseUrl}account`)\r\n          .then((response) => {\r\n            setUser(response.data);\r\n            //console.log(response.data)\r\n            setOrganisations(\r\n                Object.entries(response.data.applicationUserOrganisationUnits).map(([key, value]) => ({\r\n                  label: value.organisationUnitName,\r\n                  value: value.organisationUnitId,\r\n                }))\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            //authentication.logout();\r\n            // console.log(error);\r\n          });\r\n    }\r\n  }\r\n  //console.log(user)\r\n  // check if password and confirm password match\r\n  const handleConfirmPassword = (e, setConfirmPassword = true) => {\r\n    if(strongRegex.test(e.target.value)) {\r\n      setPasswordStrength(\"#DDFFEE\");\r\n      setPasswordTextColor(\"#01C864\");\r\n      setPasswordFeedback('Password Strength: Strong')\r\n    } else if(mediumRegex.test(e.target.value)) {\r\n      setPasswordStrength(\"#FFF3D0\");\r\n      setPasswordTextColor(\"#FFD55A\");\r\n      setPasswordFeedback('Password Strength: Medium')\r\n    } else {\r\n      setPasswordStrength(\"#E6E6E6\");\r\n      setPasswordTextColor(\"#2D2D2D\");\r\n      setPasswordFeedback('Minimum 6 characters, one uppercase and lowercase letter and one number')\r\n    }\r\n\r\n\r\n    if (setConfirmPassword) setConfirm(e.target.value);\r\n    if (e.target.value === values.password || e.target.value === confirm) {\r\n      setMatchingPassword(true);\r\n      setMatchingPasswordClass(\"is-valid\");\r\n    } else {\r\n      setMatchingPassword(false);\r\n      setMatchingPasswordClass(\"is-invalid\");\r\n    }\r\n  };\r\n\r\n  const handlePassword = (e) => {\r\n    handleInputChange(e);\r\n    // validate password\r\n    if (e.target.value.length > 5) {\r\n      setValidPassword(true);\r\n      setValidPasswordClass(\"is-valid\");\r\n    } else {\r\n      setValidPassword(false);\r\n      setValidPasswordClass(\"is-invalid\");\r\n    }\r\n    // check if password and confirm password match\r\n    handleConfirmPassword(e, false);\r\n  };\r\n  // const updateUserOrganisations=(userId)=>{\r\n  //   if(selectedOrganisations.length >0){\r\n  //     //Add Organisations\r\n  //     let facilityDetails = [];\r\n  //     selectedOrganisations.map((organisation) =>{\r\n  //       var orgDetails = _.find(allOrganisations, {name:organisation});\r\n  //       facilityDetails.push({\r\n  //         \"applicationUserId\": userId,\r\n  //         \"organisationUnitId\": orgDetails.id\r\n  //       })\r\n\r\n  //     });\r\n  //     axios.post(`${baseUrl}application_user_organisation_unit`, facilityDetails)\r\n  //         .then(response => {\r\n  //           toast.success(`successfully added`);\r\n  //         }) .catch((error) => {\r\n  //       toast.error(`An error occurred, adding facility`);\r\n  //     });\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const dateOfBirth = moment(values.dateOfBirth).format(\"YYYY-MM-DD\");\r\n    values[\"dateOfBirth\"] = dateOfBirth;\r\n    values[\"roles\"] = selectedOption\r\n    setSaving();\r\n\r\n    axios.post(`${baseUrl}users`, values)\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success(`successfully added`);\r\n          //console.log(response.data)\r\n          history.push({\r\n            pathname: '/users',\r\n          });\r\n        }) .catch((error) => {\r\n      setSaving(false);\r\n      toast.error(`An error occurred, adding facility`);\r\n    });\r\n    //updateUserOrganisations();\r\n  };\r\n\r\n  const onPermissionSelect = (selectedValues) => {\r\n    setSelectedOption(selectedValues);\r\n  };\r\n  const onOrganisationSelect = (selectedValues) => {\r\n    setSelectedOrganisations(selectedValues);\r\n  };\r\n  const checkNINLimit=(e)=>{\r\n    const limit = 11;        \r\n    const acceptedNumber= e.slice(0, limit)\r\n    return  acceptedNumber   \r\n}\r\n  const handleInputChangePhoneNumber=(e, inputName)=>{\r\n    const limit = 11;\r\n    const acceptedNumber= e.target.value.slice(0, limit)\r\n    setValues({...values, ['phoneNumber']: acceptedNumber})\r\n      return  acceptedNumber\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <PageTitle activeMenu={userDetail===null ? \"User Registration\" : \"Edit User\"} motherMenu=\"Users\" />\r\n        <Card className={classes.cardBottom}>\r\n          <CardContent>\r\n            <Link\r\n                to ={{\r\n                  pathname: \"/users\",\r\n                  state: 'users'\r\n                }}\r\n            >\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\" float-end ms-1\"\r\n                  startIcon={<TiArrowBack style={{color:'#fff'}} />}\r\n                  style={{backgroundColor:'#014d88'}}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\r\n              </Button>\r\n            </Link>\r\n            <br />\r\n\r\n            <br />\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n            <div  className={classes.root} >\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h4 className=\"card-title\" style={{color:'#014d88',fontWeight:'bolder'}}>{userDetail===null ? \"User Information\" : \"Edit User Information\"}</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <form onSubmit={handleSubmit}>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"firstName\" style={{color:'#014d88',fontWeight:'bolder'}}>First Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                id=\"firstName\"\r\n                                value={values.firstName}\r\n                                onChange={handleInputChange}\r\n                                //style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"lastName\" style={{color:'#014d88',fontWeight:'bolder'}}>Last Name <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                id=\"lastName\"\r\n                                onChange={handleInputChange}\r\n                                value={values.lastName}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"userName\" style={{color:'#014d88',fontWeight:'bolder'}}>Username <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"userName\"\r\n                                id=\"userName\"\r\n                                onChange={handleInputChange}\r\n                                value={values.userName}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"email\" style={{color:'#014d88',fontWeight:'bolder'}}>Email <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                onChange={handleInputChange}\r\n                                value={values.email}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                          </FormGroup>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"role\" style={{color:'#014d88',fontWeight:'bolder'}}>Designation <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"designation\"\r\n                                id=\"designation\"\r\n                                value={values.designation}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {designation.map(({ label, value }) => (\r\n                                  <option key={value} value={value}>\r\n                                    {label}\r\n                                  </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"phoneNumber\" style={{color:'#014d88',fontWeight:'bolder'}}>Phone Number <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"phoneNumber\"\r\n                                id=\"phoneNumber\"\r\n                                onChange={handleInputChangePhoneNumber}\r\n                                value={values.phoneNumber}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                            />\r\n                          </FormGroup>\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"password\" style={{color:'#014d88',fontWeight:'bolder'}}>Password <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                onChange={handlePassword}\r\n                                value={values.password}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                className={validPasswordClass}\r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <div style={{color:`${passwordTextColor}`,opacity:'1'}}>\r\n                              {values.password!==\"\" ? passwordFeedback : \"\"}\r\n                            </div>\r\n                            {/*                   <FormFeedback>\r\n                      {passwordFeedback}\r\n                    </FormFeedback>*/}\r\n                          </FormGroup>\r\n\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label for=\"confirm\" style={{color:'#014d88',fontWeight:'bolder'}}>Confirm Password <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"confirm\"\r\n                                id=\"confirm\"\r\n                                onChange={handleConfirmPassword}\r\n                                value={confirm}\r\n                                style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                required\r\n                                className={matchingPasswordClass}\r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <FormFeedback>Passwords do not match</FormFeedback>\r\n                          </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-12 col-md-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}>Facility <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <DualListBox\r\n                                //canFilter\r\n                                options={organisations}\r\n                                onChange={onOrganisationSelect}\r\n                                selected={selectedOrganisations}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-12 col-md-12\">\r\n                          <FormGroup>\r\n                            <Label for=\"permissions\" style={{color:'#014d88',fontWeight:'bolder'}}>Role <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <DualListBox\r\n                                //canFilter\r\n                                options={role}\r\n                                onChange={onPermissionSelect}\r\n                                selected={selectedOption}\r\n                                sx={{border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      {saving ? <Spinner /> : \"\"}\r\n                      <br />\r\n                      {userDetail ===null ? (\r\n\r\n                              <MatButton\r\n                                  type=\"submit\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  startIcon={<SaveIcon />}\r\n                                  disabled={saving || !(validPassword && matchingPassword)}\r\n                                  style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                              >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                              </MatButton>\r\n                          )\r\n                          :\r\n                          (\r\n                              <MatButton\r\n                                  type=\"submit\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  startIcon={<SaveIcon />}\r\n                                  disabled={!(validPassword && matchingPassword)}\r\n                                  style={{backgroundColor:'#014d88',color:'#fff'}}\r\n                              >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                              </MatButton>\r\n                          )\r\n                      }\r\n                      {\" \"}<Link\r\n                        to ={{\r\n                          pathname: \"/users\",\r\n                          state: 'users'\r\n                        }}\r\n                    >\r\n                      <MatButton\r\n                          variant=\"contained\"\r\n                          className={classes.button}\r\n                          startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                          style={{backgroundColor:'#992E62'}}\r\n                      >\r\n                        <span style={{ textTransform: \"capitalize\",color:'#fff' }}>Cancel</span>\r\n                      </MatButton>\r\n                    </Link>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //status: state.users.status,\r\n  status: [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, update })(UserRegistration);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\LogConfiguration\\Index.js",["939"],"import React, {useEffect } from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Row, Col, Card,  Badge, Table,} from \"react-bootstrap\";\r\nimport { Link} from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  BiRefresh } from \"react-icons/bi\";\r\nimport { connect } from \"react-redux\";\r\nimport {loggers} from \"./../../../actions/systemInfo\";\r\n\r\nlet newConfigList\r\n\r\nconst LogConfig = (props) => {\r\n  useEffect(() => {\r\n    fetchSystemEnv()\r\n  }, []);\r\nconst fetchSystemEnv =()=>{\r\n  const onSuccess = () => {\r\n\r\n  };\r\n  const onError = () => {\r\n\r\n  };\r\n  props.fetchLog(onSuccess, onError);\r\n}\r\n  const systemProperties = props.SystemInfo && props.SystemInfo.loggers ? props.SystemInfo.loggers : []\r\n  //console.log(systemProperties)\r\n  newConfigList=Object.entries(systemProperties).map(([key, value]) => ({\r\n    label: key,\r\n    value: value,\r\n  }))\r\n\r\n  console.log(newConfigList)\r\n\r\n  return (\r\n    <>\r\n                    \r\n      <PageTitle activeMenu=\"Log Configuration\" motherMenu=\"Administration\" pageContent=\"Log Configuration\" />\r\n      <Link to=\"/health-check\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"me-2 float-end\"\r\n                startIcon={<BiRefresh />}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Refresh</span>\r\n              </Button>\r\n            </Link>\r\n            <br />\r\n        \r\n          <br />\r\n     \r\n      <Row>\r\n      \r\n        <Col xl={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>Log Configuration \r\n                \r\n      </Card.Title>\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Name</th>\r\n                        <th>Configure Level</th>\r\n                        <th>Efective Level</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { newConfigList.map((row) => (\r\n                              <tr>\r\n                              <td>{row.label}</td>\r\n                              <td><Badge variant=\"success \">{row.value.configuredLevel}</Badge></td>\r\n                              <td> <Badge variant=\"success \">{row.value.effectiveLevel}</Badge></td>\r\n                              </tr>\r\n                          ))}\r\n                        \r\n                    </tbody>\r\n                    </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      SystemInfo: state.SystemInfo.list,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchLog: loggers,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(LogConfig);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\Index.js",["940"],"import React, {useState, Fragment } from \"react\";\r\n\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Row, Col, Card,  Tab, Tabs, Table,} from \"react-bootstrap\";\r\nimport SystemConfig from \"./SystemConfig\";\r\nimport ApplicationConfig from './ApplicationConfig'\r\nimport SystemEnv from \"./SystemEnv\";\r\nimport SystemProperty from \"./SystemProperty\";\r\n\r\nconst UiTab = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle activeMenu=\"System Configurations\" motherMenu=\"Administration\" pageContent=\"System Configurations\" />\r\n      <Row>\r\n       \r\n        <Col xl={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>SYSTEM CONFIGURATION</Card.Title>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                    >\r\n                    <Tab eventKey=\"home\" title=\"Spring configuration\">\r\n                      <SystemConfig />\r\n                    </Tab>\r\n                    <Tab eventKey=\"properties\" title=\"System Properties\">\r\n                    <SystemProperty />\r\n                    </Tab>\r\n                    <Tab eventKey=\"environment\" title=\"System Environment\" >\r\n                    <SystemEnv />\r\n                    </Tab>\r\n                    <Tab eventKey=\"config\" title=\"Application Config\" >\r\n                    <ApplicationConfig />\r\n                    </Tab>\r\n                    \r\n                   \r\n                    </Tabs>\r\n\r\n\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UiTab;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationMatrics\\Index.js",["941","942","943"],"import React, {useEffect } from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Row, Col, Card,  Badge, Table,} from \"react-bootstrap\";\r\nimport { Link} from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  BiRefresh } from \"react-icons/bi\";\r\nimport { connect } from \"react-redux\";\r\nimport {metrics} from \"./../../../actions/systemInfo\";\r\n\r\nlet newConfigList\r\n\r\nconst ApplicationMatrics = (props) => {\r\n  useEffect(() => {\r\n    fetchSystemEnv()\r\n  }, []);\r\nconst fetchSystemEnv =()=>{\r\n  const onSuccess = () => {\r\n\r\n  };\r\n  const onError = () => {\r\n\r\n  };\r\n  props.fetchMetrics(onSuccess, onError);\r\n}\r\n\r\nconst refresh = ()=>{\r\n  fetchSystemEnv()\r\n}\r\n  const systemProperties = props.SystemInfo && props.SystemInfo.names ? props.SystemInfo.names : []\r\n  \r\n  newConfigList=Object.entries(systemProperties).map(([key, value]) => ({\r\n          label: key,\r\n          value: value,\r\n        }))\r\n\r\n\r\n  return (\r\n    <>\r\n                    \r\n      <PageTitle activeMenu=\"Application Matrics\" motherMenu=\"Administration\" pageContent=\"Application Matrics\" />\r\n  \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"me-2 float-end\"\r\n                startIcon={<BiRefresh />}\r\n                onClick={()=>refresh()}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Refresh</span>\r\n              </Button>\r\n        \r\n            <br />\r\n        \r\n          <br />\r\n     \r\n      <Row>\r\n      \r\n        <Col xl={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>Application Matrics\r\n                \r\n      </Card.Title>\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                       \r\n                        <th>Deatils</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       \r\n                         { newConfigList.map((row) => (\r\n                              <tr>\r\n                              <td>{row.label}</td>\r\n                              <td>{row.value}</td>\r\n                             \r\n                              </tr>\r\n                          ))}\r\n                        \r\n                    </tbody>\r\n                    </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      SystemInfo: state.SystemInfo.list,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchMetrics: metrics,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ApplicationMatrics);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\HealthCheck\\Index.js",["944","945"],"import React, {useEffect } from \"react\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Row, Col, Card,  Badge, Table,} from \"react-bootstrap\";\r\nimport { Link} from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  BiRefresh } from \"react-icons/bi\";\r\nimport { connect } from \"react-redux\";\r\nimport {health} from \"./../../../actions/systemInfo\";\r\n\r\nlet newConfigList\r\n\r\nconst HealthCheck = (props) => {\r\n  useEffect(() => {\r\n    fetchSystemEnv()\r\n  }, []);\r\nconst fetchSystemEnv =()=>{\r\n  const onSuccess = () => {\r\n\r\n  };\r\n  const onError = () => {\r\n\r\n  };\r\n  props.fetchHealth(onSuccess, onError);\r\n}\r\n  const systemProperties = props.SystemInfo && props.SystemInfo.components ? props.SystemInfo.components : []\r\n  \r\n  newConfigList=Object.entries(systemProperties).map(([key, value]) => ({\r\n          label: key,\r\n          value: value,\r\n        }))\r\n\r\n  const refresh = ()=>{\r\n    fetchSystemEnv()\r\n  }\r\n\r\n  return (\r\n    <>\r\n                    \r\n      <PageTitle activeMenu=\"Health Check\" motherMenu=\"Administration\" pageContent=\"Health Check\" />\r\n    \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"me-2 float-end\"\r\n                startIcon={<BiRefresh />}\r\n                onClick={()=>refresh()}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\" }}>Refresh</span>\r\n              </Button>\r\n           \r\n            <br />\r\n        \r\n          <br />\r\n     \r\n      <Row>\r\n      \r\n        <Col xl={12}>\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>Health Check \r\n                \r\n      </Card.Title>\r\n            </Card.Header>\r\n\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Service Name</th>\r\n                        <th>Status</th>\r\n                        <th>Detail</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       \r\n                         { newConfigList.map((row) => (\r\n                              <tr>\r\n                              <td>{row.label}</td>\r\n                              <td><Badge variant=\"success \">{row.value.status}</Badge></td>\r\n                              <td> <i className=\"fa fa-eye color-info float-center\"></i></td>\r\n                              </tr>\r\n                          ))}\r\n                        \r\n                    </tbody>\r\n                    </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      SystemInfo: state.SystemInfo.list,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchHealth: health,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(HealthCheck);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\EditSubMenu.js",["946","947","948","949","950","951","952","953","954","955","956","957","958","959"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { getModuleMenus,  editModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] = useState(props.datasample);\r\n    //console.log(details)\r\n    useEffect(() => {\r\n        setDetails(props.datasample)\r\n    }, [props.datasample]);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus?withChild=true`)\r\n                .then((response) => {\r\n                    //console.log(response)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, [props.datasample]);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const EditMenu = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n\r\n            }\r\n            props.editModuleMenu(details.id, details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>Edit  Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body style={{padding:'10px'}}>\r\n                    <Card>\r\n                        <CardBody style={{padding:'0px'}}>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\" style={{padding:'0px'}} >\r\n                                    <div className=\"card-header\" >\r\n                                        <h5 className=\"card-title\" style={{color:'#014d88',fontWeight:'bolder'}}>{datasample.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\" >\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n\r\n                                                <br/>\r\n                                                <div className=\"row\" style={{paddingBottom:\"35px\"}}>\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n\r\n                                                        >\r\n                                                            <option value=\"null\" disabled>\r\n                                                                Choose...\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value} >\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                                                    {/*    <label>Menu Type(Position)</label>*/}\r\n                                                    {/*    <select*/}\r\n                                                    {/*        value={details.type}*/}\r\n                                                    {/*        id=\"type\"*/}\r\n                                                    {/*        name=\"type\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    >*/}\r\n                                                    {/*        <option value=\"\" >Choose...</option>*/}\r\n                                                    {/*        <option value=\"sidebar\" >Sidebar</option>*/}\r\n                                                    {/*        <option value=\"component\" >Component</option>*/}\r\n                                                    {/*        <option value=\"both\" >Both</option>*/}\r\n                                                    {/*    </select>*/}\r\n                                                    {/*    {errors.type !==\"\" ? (*/}\r\n                                                    {/*        <span className={classes.error}>{errors.type}</span>*/}\r\n                                                    {/*    ) : \"\" }*/}\r\n                                                    {/*</div>*/}\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"menuCode\"\r\n                                                            id=\"menuCode\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.menuCode}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n                                                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                                                    {/*    <label>Breadcrumb</label>*/}\r\n                                                    {/*    <input*/}\r\n                                                    {/*        type=\"text\"*/}\r\n                                                    {/*        name=\"breadcrumb\"*/}\r\n                                                    {/*        id=\"breadcrumb\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        value={details.breadcrumb}*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    />*/}\r\n                                                    {/*</div>*/}\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                    </div>\r\n                                                    {/*<div className=\"form-group col-md-3\">*/}\r\n                                                    {/*    <label>Tooltip</label>*/}\r\n                                                    {/*    <input*/}\r\n                                                    {/*        type=\"text\"*/}\r\n                                                    {/*        name=\"tooltip\"*/}\r\n                                                    {/*        id=\"tooltip\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        value={details.tooltip}*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    />*/}\r\n                                                    {/*</div>*/}\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={EditMenu}\r\n                                                    style={{backgroundColor:'#014d88'}}\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                                    style={{backgroundColor:'#992E62'}}\r\n                                                >\r\n                                                    <span style={{textTransform: 'capitalize', color:'#fff'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    editModuleMenu: editModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\AddSubMenu.js",["960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {  addMenu} from '../../../actions/menu';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const defaultValues = { }\r\n    const menuItems = { parentId: props.parentObj.id, name:\"\", url:\"\", code:\"\", breadcrumb: \"\", tooltip:\"\", icon:\"\", type:\"\", level:\"\",state:\"\", disabled: true,}\r\n    const [details, setDetails] = useState(menuItems);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus`)\r\n                .then((response) => {\r\n                    //console.log(response)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, []);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.code = details.code ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddMenu = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            //details[\"moduleId\"] = datasample.id\r\n\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n            }\r\n            props.addMenu(details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Add  Menu - {props.parentObj && props.parentObj.name!==\"\"? props.parentObj.name : \" \"}</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                                <h5 className=\"card-title\">Module Menu </h5>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label>Parent Menu</label>\r\n\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"parentId\"\r\n                                                            id=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            value={props.parentObj.name}\r\n                                                            disabled={true}\r\n                                                            //onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"code\"\r\n                                                            id=\"code\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.code}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={AddMenu}\r\n\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon />}>\r\n                                                    <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     return {\r\n//         moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n//\r\n//     };\r\n// };\r\n\r\nconst mapActionToProps = {\r\n    addMenu: addMenu\r\n};\r\nexport default connect(null, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\organizationalUnit.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreateParentOrgUnit.js",["976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994"],"import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport {  Row,Col,Form,FormGroup,Label,Input,Card,CardBody, Table,} from 'reactstrap';\r\nimport {  Button, Modal, } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux'\r\nimport MatButton from '@material-ui/core/Button'\r\n//import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport Select from \"react-select\";\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport { url  } from \"./../../../api\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n///import DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n//import List from \"@material-ui/core/List\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport {createOrgUnitLevel} from './../../../actions/organizationalUnit'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\nconst filterOptions = createFilterOptions({\r\n    matchFrom: 'start',\r\n    stringify: (option) => option.title,\r\n  });\r\n\r\n\r\nconst CreateOrgUnit = (props) => {\r\n    let history = useHistory();\r\n    \r\n    const defaultValues = {name:\"\",id:\"\" }\r\n    const [loading, setLoading] = useState(false)\r\n    const [hiddeDetail, setHiddeDetail] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const defaultDetailValues = { name: \"\", description:\"\", parentOrganisationUnitId:\"\", details:{}}\r\n    const defaultDetailValuesOtherDetails = { name: \"\", email:\"\", address:\"\", phone:\"\"}\r\n    const classes = useStyles()\r\n    const [errors, setErrors] = useState({});\r\n    const [otherDetailFields, setOtherDetailFields] = useState(false);\r\n    const [locationList, setLocationList] = useState({ stateName:\"\", lga:\"\"})\r\n    const [otherDetails, setOtherDetails] = useState(defaultValues);\r\n    const [details, setDetails] = useState(defaultDetailValues);\r\n    const [otherDetailsFields, setOtherDetailsFields] = useState(defaultDetailValuesOtherDetails);\r\n    const [relativesLocation, setRelativesLocation] = useState([]);\r\n    const [locationListArray2, setLocationListArray2] = useState([])\r\n\r\n    const orgUnitIDParam = props.orgUnitID ? props.orgUnitID :{};\r\n    const [otherfields, setOtherFields] = useState({parentOrganisationUnitId:\"\", name:\"\", description:\"\", organisationUnitLevelId:\"\"});\r\n    \r\n    const [formData, setFormData] = useState(defaultValues)\r\n    const [pcrOptions, setOptionPcr] = useState([]);\r\n    const [orgUnitLevel, setOrgUnitLevel] = useState([]);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //loadCboProjectList()\r\n        setOtherDetails(props.formData ? props.formData : defaultValues);\r\n        \r\n    }, [props.formData]); //componentDidMount\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  \r\n  useEffect(() => {\r\n      async function getCharacters() {\r\n          try {\r\n              const response = await axios(\r\n                  url + `organisation-unit-levels/v2/parent-organisation-unit-level/${orgUnitIDParam.id}/organisation-units`+'?size=3000'\r\n              );\r\n              const body = response.data && response.data !==null ? response.data : {};\r\n              setOptionPcr(\r\n                   body.map(({ name, id, parentOrganisationUnitName }) => ({ title: name +\" -  \" + parentOrganisationUnitName, value: id }))\r\n               );\r\n          } catch (error) {\r\n          }\r\n      }\r\n      getCharacters();\r\n  }, [orgUnitIDParam.parentOrganisationUnitLevelId]);\r\n  \r\n  const handleInputChangeOrgUnit = (e)=> {\r\n      const orgUnitID = e && e.value ? e.value : \"\"\r\n     \r\n      async function getCharacters() {\r\n          const response = await axios.get(`${url}organisation-units/organisation-unit-level/v2`+orgUnitID);\r\n          //\r\n          setOrgUnitLevel(\r\n              Object.entries(response.data).map(([key, value]) => ({\r\n                  label: value.name + \" -  \" + value.parentOrganisationUnitName,\r\n                  value: value.id,\r\n                }))\r\n             \r\n              \r\n              );\r\n    }\r\n      getCharacters();\r\n\r\n  }\r\n\r\n\r\n    const handleInputChange = e => {\r\n        //setDetails ({...details,  [e.target.name]: e.target.value});\r\n        setOtherFields({ ...otherfields, [e.target.name]: parseInt(e.target.value) })\r\n    }\r\n    const handleOtherDetailFields = e => {\r\n        setOtherDetailsFields ({...otherDetailsFields,  [e.target.name]: e.target.value});\r\n    }\r\n    \r\n    const addLocations2 = e => { \r\n            if(validate()){\r\n            //details['parentOrganisationUnitId']= otherfields.parentOrganisationUnitId\r\n            details['details']= otherDetailsFields \r\n            //parentOrganisationUnitId   \r\n            const allRelativesLocation = [...relativesLocation, details];\r\n            setRelativesLocation(allRelativesLocation);\r\n            }else{\r\n                return;\r\n            }\r\n   }\r\n\r\n    /* Remove Relative Location function **/\r\n    const removeRelativeLocation = index => {       \r\n        relativesLocation.splice(index, 1);\r\n        setRelativesLocation([...relativesLocation]);\r\n       \r\n    };\r\n    const resetForm = () => {\r\n        setOtherDetails(defaultValues)\r\n        setRelativesLocation({state: \"\", lga:\"\"})  \r\n    }\r\n\r\n    const organisationUnitIds = []\r\n    const createOrgUnittSetup = e => {\r\n        e.preventDefault()\r\n        if(relativesLocation.length >0 && validate()){\r\n        const parentOrganisationUnitId = otherfields.parentOrganisationUnitId\r\n        const orgUnitIDParam = props.orgUnitID.id\r\n        console.log(orgUnitIDParam)\r\n        console.log(parentOrganisationUnitId)\r\n        console.log(relativesLocation)\r\n        \r\n        setLoading(true);\r\n        const onSuccess = () => {\r\n            props.loadOrgUnit() \r\n            setLoading(false)\r\n            setDetails(defaultDetailValues)\r\n            setOtherDetails(defaultValues)  \r\n            setLocationListArray2([]) \r\n            props.togglestatus() \r\n            \r\n            resetForm()\r\n                  \r\n        }\r\n        const onError = () => {\r\n            setLoading(false)  \r\n            setOtherDetails(defaultValues) \r\n            setDetails(defaultDetailValues) \r\n            setLocationListArray2([])\r\n            props.togglestatus() \r\n        }       \r\n        props.createOrgUnitLevel(relativesLocation,parentOrganisationUnitId,orgUnitIDParam, onSuccess, onError);      \r\n        return\r\n\r\n    }else if(!validate()){\r\n        return\r\n    }else{\r\n        toast.error(\"Organisation Unit can't be empty\")\r\n    }\r\n \r\n    }\r\n    const showDetailFields = e => {\r\n        setHiddeDetail(!hiddeDetail);\r\n        \r\n    }\r\n    const closeModal = ()=>{\r\n        resetForm()\r\n        props.togglestatus()\r\n        setDetails(defaultDetailValues) \r\n        setErrors({}) \r\n    }\r\nconsole.log(otherfields)\r\n    return (\r\n\r\n        <div >\r\n        <ToastContainer />\r\n            <Modal show={props.modalstatus}   size=\"xl\"  backdrop={true} >\r\n                <Form >\r\n                    <Modal.Header >\r\n                        <Modal.Title>Create Org. Unit - {orgUnitIDParam.name} </Modal.Title>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn-close\"\r\n                            onClick={closeModal}\r\n                        >\r\n                        </Button>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body >\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                \r\n                                <Col md={6}>\r\n                                <FormGroup>\r\n                                              <Label for=\"\">Parent Organisation  Unit</Label>\r\n\r\n                                                  <Autocomplete\r\n                                                    id=\"filter-orgUnit\"\r\n                                                    options={pcrOptions}\r\n                                                    getOptionLabel={(option) => option.title}\r\n                                                    filterOptions={filterOptions}\r\n                                                    size=\"small\"\r\n                                                    onChange={(e, i) => {\r\n                                                        handleInputChangeOrgUnit(i)\r\n                                                        setOtherFields({ ...otherfields, parentOrganisationUnitId: i.value });\r\n                                                    }}\r\n                                                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n                                                    />\r\n                                          </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                   \r\n                                    <Col md={12}>\r\n                                        <hr/>\r\n                                        <h5>Organisation Unit Level </h5>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={5}>\r\n                                        <FormGroup>\r\n                                            <Label >Name</Label>\r\n                                            <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"name\"\r\n                                                  id=\"name\"\r\n                                                  \r\n                                                  value={details.name}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  {...(errors.name && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                            {errors.name !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.name}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={5}>\r\n                                                <FormGroup>\r\n                                                    <Label >Description </Label>\r\n                                                    <Input\r\n                                                        type=\"text\"\r\n                                                        name=\"description\"\r\n                                                        id=\"description\"\r\n                                                        \r\n                                                        value={details.description}\r\n                                                        onChange={handleOtherFieldInputChange}\r\n                                                        {...(errors.description && { invalid: true})}\r\n                                                        \r\n                                                        />\r\n                                                            {errors.description !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.description}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={2}>\r\n\r\n                                        <LabelSui as='a' color='black'  onClick={addLocations2}  size='tiny' style={{ marginTop:35}}>\r\n                                            <Icon name='plus' /> Add\r\n                                        </LabelSui>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup >\r\n                                            <Label   onClick={showDetailFields}>\r\n                                            \r\n                                                <span style={{color:'#892'}}><b>Other Detail</b> </span>\r\n                                            \r\n                                            </Label>\r\n                                        </FormGroup>\r\n                                        </Col>\r\n                                        {/* Other Detail Field for the Org. unit*/}\r\n                                                {hiddeDetail===true ? ( \r\n                                                <>\r\n                                                   \r\n                                                        <Col md={5}>\r\n                                                            <FormGroup>\r\n                                                                <Label >Name</Label>\r\n                                                                <Input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    id=\"name\"\r\n                                                                    \r\n                                                                    value={otherDetailsFields.name}\r\n                                                                    onChange={handleOtherDetailFields}\r\n                                                                    {...(errors.name && { invalid: true})}\r\n                                                                    \r\n                                                                />\r\n                                                            {errors.name !==\"\" ? (\r\n                                                                <span className={classes.error}>{errors.name}</span>\r\n                                                            ) : \"\" }\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    \r\n                                                <Col md={5}>\r\n                                                    <FormGroup>\r\n                                                        <Label >Email </Label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"email\"\r\n                                                            id=\"email\"\r\n                                                            \r\n                                                            value={otherDetailsFields.email}\r\n                                                            onChange={handleOtherDetailFields}\r\n                                                        \r\n                                                            />\r\n                                                            \r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md={2}></Col>\r\n                                                <Col md={5}>\r\n                                                    <FormGroup>\r\n                                                        <Label >Phone Number </Label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"phone\"\r\n                                                            id=\"phone\"\r\n                                                            \r\n                                                            value={otherDetailsFields.phone}\r\n                                                            onChange={handleOtherDetailFields}\r\n\r\n                                                            />\r\n                                                            \r\n                                                    </FormGroup>\r\n\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    <FormGroup>\r\n                                                        <Label >Address </Label>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"address\"\r\n                                                            id=\"address\"\r\n                                                            \r\n                                                            value={otherDetailsFields.address}\r\n                                                            onChange={handleOtherDetailFields}\r\n                                                        \r\n                                                            />\r\n                                                            \r\n                                                    </FormGroup>\r\n\r\n                                                </Col>\r\n                                                <Col md={2}></Col>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            \"\"\r\n                                            }\r\n                                            {/* End of the Other Detail Fields for the Org. Unit */}\r\n                                            <Col md={12}>\r\n                                                  <div className={classes.demo}>\r\n                                                  {relativesLocation.length >0 \r\n                                                    ?\r\n                                                      <List>\r\n                                                      <Table  striped responsive>\r\n                                                            <thead >\r\n                                                                <tr>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Description</th>\r\n                                                                    <th >Details</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                            {relativesLocation.map((relative, index) => (\r\n\r\n                                                                <RelativeList\r\n                                                                    key={index}\r\n                                                                    index={index}\r\n                                                                    relative={relative}\r\n                                                                    removeRelativeLocation={removeRelativeLocation}\r\n                                                                />\r\n                                                          ))}\r\n                                                          </tbody>\r\n                                                        </Table>\r\n                                                      </List>\r\n                                                     :\r\n                                                     \"\"\r\n                                                  }               \r\n                                                  </div>\r\n                                            </Col>\r\n                                        \r\n                                </Row>\r\n\r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    disabled={loading}\r\n                                    onClick={createOrgUnittSetup}\r\n                                    \r\n                                    >\r\n                                    \r\n                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                </MatButton>\r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={closeModal}\r\n                                    startIcon={<CancelIcon />}>\r\n                                     <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                </MatButton>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Modal.Body>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RelativeList({\r\n    relative,\r\n    index,\r\n    removeRelativeLocation,\r\n  }) {\r\n    function displayDetail (detailObj){\r\n\r\n        return(\r\n            <>\r\n                  <List>\r\n                    {detailObj.name!==null && detailObj.name!==\"\" ? (\r\n                    <List.Item>\r\n                    <List.Icon name='user' />\r\n                    <List.Content>{detailObj.name}</List.Content>\r\n                    </List.Item>\r\n                    ) :\r\n                    \"\"\r\n                    }\r\n                    {detailObj.address!==null && detailObj.address!==\"\" ? (\r\n                    <List.Item>\r\n                    <List.Icon name='marker' />\r\n                    <List.Content> {detailObj.address}</List.Content>\r\n                    </List.Item>\r\n                    ) :\r\n                    \"\"\r\n                    }\r\n                    {detailObj.email!==null && detailObj.email!==\"\"? (\r\n                    <List.Item>\r\n                    <List.Icon name='mail' />\r\n                    <List.Content>\r\n                        {detailObj.email}\r\n                    </List.Content>\r\n                    </List.Item>\r\n                    ) :\r\n                    \"\"\r\n                    }\r\n                    {detailObj.phone!==null && detailObj.phone!==\"\"? (\r\n                    <List.Item>\r\n                    <List.Icon name='phone' />\r\n                    <List.Content>\r\n                        {detailObj.phone}\r\n                    </List.Content>\r\n                    </List.Item>\r\n                    ) :\r\n                    \"\"\r\n                    }\r\n                </List>  \r\n            </>\r\n        )\r\n    }\r\n    return (\r\n            <tr>\r\n                <th>{relative.name}</th>\r\n                <th>{relative.description}</th>\r\n                <th>{displayDetail(relative.details)}</th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\n\r\nexport default connect(null, { createOrgUnitLevel})(CreateOrgUnit);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\UpdateOrganisationUnit.js",["995","996","997","998","999","1000","1001","1002","1003","1004","1005"],"import React, { useState, useEffect }   from 'react';\r\nimport { Row,Col,FormGroup,Input,FormFeedback,Label,Card,CardBody,Form\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport {url} from '../../../api'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport {updateOrganisationUnit} from './../../../actions/organizationalUnit'\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal} from \"react-bootstrap\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst filterOptions = createFilterOptions({\r\n    matchFrom: 'start',\r\n    stringify: (option) => option.title,\r\n  });\r\n  \r\n\r\nconst CreateParentOrgUnit = (props) => {\r\n    const classes = useStyles()\r\n    const orgUnitIDParam = props.orgUnitID ? props.orgUnitID :{};\r\n    const orgUnitDetails= props.orgUnit\r\n    console.log(orgUnitDetails)\r\n    const [otherfields, setOtherFields] = useState({parentOrganisationUnitId:\"\", name:\"\", description:\"\", organisationUnitLevelId:\"\"});\r\n    const defaultValues = {name:\"\",id:\"\" }\r\n    const [formData, setFormData] = useState(defaultValues)\r\n    const [errors, setErrors] = useState({});\r\n    const [modal3, setModal3] = useState(false) //\r\n    const toggleModal3 = () => setModal3(!modal3)\r\n    const [pcrOptions, setOptionPcr] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const handleOtherFieldInputChange = e => {\r\n      setOtherFields ({ ...otherfields, [e.target.name]: e.target.value });\r\n\r\n  }\r\n  const validate = () => {\r\n      let temp = { ...errors }\r\n      temp.name = otherfields.name ? \"\" : \"This field is required\"\r\n      temp.parentOrganisationUnitId = otherfields.parentOrganisationUnitId ? \"\" : \"This field is required\"\r\n      temp.description = otherfields.description ? \"\" : \"This field is required\"\r\n      setErrors({\r\n          ...temp\r\n          })    \r\n      return Object.values(temp).every(x => x == \"\")\r\n}\r\n\r\nuseEffect(() => {\r\n    setOtherFields(orgUnitDetails)\r\n  }, [props])\r\n\r\nuseEffect(() => {\r\n    async function getCharacters() {\r\n        try {\r\n            const response = await axios(\r\n                url + \"organisation-units\"\r\n            );\r\n            const body = response.data && response.data !==null ? response.data : {};\r\n            \r\n            setOptionPcr(\r\n                 body.map(({ name, id }) => ({ title: name, value: id }))\r\n             );\r\n\r\n            const defaultOrgUnit = body.find(x => x.id === orgUnitDetails.organisationUnitLevelId);\r\n            console.log(defaultOrgUnit)\r\n            //     setValues({ ...values, countryId: defaultCountryId });\r\n        } catch (error) {\r\n        }\r\n    }\r\n    getCharacters();\r\n}, []);\r\n\r\n\r\nconst createOrgUnit = (e) => {\r\n    e.preventDefault();\r\n    setOtherFields({ ...otherfields, organisationUnitLevelId: props.orgUnitID });\r\n    otherfields['organisationUnitLevelId'] = props.orgUnitID.id\r\n    otherfields['parentOrganisationUnitId'] = props.orgUnitID.id ===1 ? 0 : otherfields.parentOrganisationUnitId\r\n   //check if the Org Unit Level ID is 1 which is country\r\n\r\n \r\n    const onSuccess = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n    const onError = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n\r\n    props.updateOrganisationUnit(otherfields.id, otherfields, onSuccess, onError);\r\n}\r\n\r\n  return (      \r\n      <div >\r\n              <Modal show={props.modalstatus} className={props.className} size=\"lg\">\r\n                  <Modal.Header toggle={props.togglestatus}>\r\n\r\n                      <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>Update Organization Unit</Modal.Title>\r\n                      <Button\r\n                          variant=\"\"\r\n                          className=\"btn-close\"\r\n                          onClick={props.togglestatus}\r\n                      >\r\n                      </Button>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                      <Row>\r\n                               {orgUnitIDParam.id!= 1 ? (\r\n                                    <Col md={6}>\r\n                                          <FormGroup>\r\n                                              <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Parent Organisation  Unit</Label>\r\n\r\n                                                  <Autocomplete\r\n                                                    id=\"filter-orgUnit\"\r\n                                                    options={pcrOptions}\r\n                                                    getOptionLabel={(option) => option.title}\r\n                                                    filterOptions={filterOptions}\r\n                                                    size=\"small\"\r\n                                                    style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                    onChange={(e, i) => {\r\n                                                        console.log(1)\r\n                                                        setOtherFields({ ...otherfields, parentOrganisationUnitId: i.value });\r\n                                                    }}\r\n                                                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\r\n                                                    />\r\n                                              </FormGroup>\r\n                                          </Col>\r\n                                   ):\r\n\r\n                                   \"\"\r\n                                 }\r\n                                  <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}> Name</Label>\r\n                                              <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"name\"\r\n                                                  id=\"name\"\r\n                                                  style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                  value={otherfields.name}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  {...(errors.name && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                                <FormFeedback>{errors.name}</FormFeedback>\r\n                                      </FormGroup>\r\n                                  </Col>\r\n                                  <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Description</Label>\r\n                                              <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"description\"\r\n                                                  id=\"description\"\r\n                                                  style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                  value={otherfields.description}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  {...(errors.description && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                                <FormFeedback>{errors.description}</FormFeedback>\r\n                                      </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n\r\n                    </Modal.Body>\r\n                   <Modal.Footer>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    disabled={loading}\r\n                                    onClick={createOrgUnit}\r\n                                >\r\n                                    Save\r\n                                </MatButton>\r\n                                <MatButton\r\n                                        variant='contained'\r\n                                        color='default'\r\n                                        onClick={props.togglestatus}\r\n                                        className={classes.button}\r\n\r\n                                    >\r\n                                        Cancel\r\n                                   </MatButton>\r\n\r\n                                    \r\n                            </Col>\r\n                            </Row>\r\n                        </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect(null, { updateOrganisationUnit })(\r\n    CreateParentOrgUnit\r\n);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\UpdateOrganisationUnitLevel.js",["1006","1007","1008","1009","1010","1011","1012","1013"],"import React, { useState, useEffect }   from 'react';\r\nimport { Form, ModalHeader, ModalBody,Row,Col,FormGroup,Input,FormFeedback,Label,Card,CardBody, Alert\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreatOrgUnitByUpload from \"./CreatOrgUnitByUpload\";\r\nimport {updateOrganisationUnitLevel} from './../../../actions/organizationalUnit'\r\nimport { connect } from \"react-redux\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst UpdateOrgUnit = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const orgUnitDetails= props.orgUnit\r\n    const [otherfields, setOtherFields] = useState({name:\"\", description:\"\", status:\"\"});\r\n\r\n    useEffect(() => {\r\n        setOtherFields(orgUnitDetails)\r\n    }, [props])\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal3, setModal3] = useState(false) //\r\n    const toggleModal3 = () => setModal3(!modal3)\r\n\r\n    // console.log(orgUnitDetails)\r\n    // console.log(otherfields)\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n\r\n        if(e.target.checked){\r\n            setOtherFields ({ ...otherfields, status:0 });\r\n        }else{\r\n            setOtherFields ({ ...otherfields, status:1});\r\n        }\r\n        setOtherFields ({ ...otherfields, [e.target.name]: e.target.value });\r\n\r\n    }\r\n\r\n    const handleCheckedBox = e => {\r\n        console.log(e.target.checked)\r\n        var isChecked = e.target.checked;\r\n        setOtherFields ({ ...otherfields, status:e.target.checked ===true ? 0 : 1 });\r\n\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.name = otherfields.name ? \"\" : \"This field is required\"\r\n        temp.description = otherfields.description ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const createUploadBatch = () => {\r\n\r\n        props.togglestatus();\r\n        setModal3(!modal3)\r\n    }\r\n    const saveOrgName = (e) => {\r\n        e.preventDefault();\r\n        //const status = otherfields.status===true ?  otherfields.status=1 :  otherfields.status=0\r\n\r\n        if (validate()) {\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                setLoading(false);\r\n                props.togglestatus();\r\n            };\r\n            const onError = () => {\r\n                setLoading(false);\r\n                props.togglestatus();\r\n            };\r\n\r\n            props.updateOrganisationUnitLevel(otherfields.id, otherfields, onSuccess, onError);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <Modal show={props.modalstatus} className={props.className} size=\"lg\">\r\n                {/*                  <ModalHeader toggle={props.togglestatus} >\r\n                      <span style={{color:'#014d88',fontWeight:'bolder', fontSize:'18px'}}> Update Organization Unit Levels</span>\r\n                  </ModalHeader>*/}\r\n\r\n                <Form onSubmit={saveOrgName}>\r\n                    <Modal.Header toggle={props.togglestatus}>\r\n\r\n                        <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>Update Organization Unit</Modal.Title>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn-close\"\r\n                            onClick={props.togglestatus}\r\n                        >\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <br />\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Name</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                id=\"name\"\r\n                                                style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                value={otherfields.name}\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                {...(errors.name && { invalid: true})}\r\n\r\n                                            />\r\n                                            <FormFeedback>{errors.name}</FormFeedback>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Description</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"description\"\r\n                                                id=\"description\"\r\n                                                style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                value={otherfields.description}\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                {...(errors.description && { invalid: true})}\r\n\r\n                                            />\r\n                                            <FormFeedback>{errors.description}</FormFeedback>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup check>\r\n                                            <Label check style={{color:'#014d88',fontWeight:'bolder'}}>\r\n                                                <Input\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"status\"\r\n                                                    id=\"status\"\r\n                                                    style={{border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                    checked={otherfields.status === 0 ? true : false}\r\n\r\n                                                    onChange={handleCheckedBox}/>{' '}\r\n                                                Has no child\r\n                                                <br/>\r\n                                                <Alert color=\"primary\" style={{marginTop:\"10px\"}}>\r\n                                                    This organisational unit level has no lower level\r\n                                                </Alert>\r\n\r\n                                            </Label>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br/>\r\n                                <Row>\r\n                                    <Col sm={12}>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            disabled={loading}\r\n                                            className=\" float-right mr-1\"\r\n                                            startIcon={<SaveIcon />}\r\n                                            style={{backgroundColor:'#014d88'}}\r\n                                        >\r\n                                            Save\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={props.togglestatus}\r\n                                            className={classes.button}\r\n                                            startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                            style={{backgroundColor:'#992E62', marginLeft:'5px',color:'#fff'}}\r\n                                            className=\" float-right mr-2\"\r\n                                        >\r\n                                            Cancel\r\n                                        </MatButton>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Modal.Body>\r\n                </Form>\r\n            </Modal>\r\n            <CreatOrgUnitByUpload modalstatus={modal3} togglestatus={toggleModal3}  />\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default connect(null, { updateOrganisationUnitLevel })(\r\n    UpdateOrgUnit\r\n);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreateOrganizationUnitLevel.js",["1014","1015","1016","1017"],"import React, { useState, useEffect }   from 'react';\r\nimport { Form,FormGroup,Input,FormFeedback,Label,Card,CardBody, Alert \r\n} from 'reactstrap';\r\nimport { Row,  Col, Button, Modal, } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreatOrgUnitByUpload from \"./CreatOrgUnitByUpload\";\r\nimport {createOrganisationUnit} from './../../../actions/organizationalUnit'\r\nimport { connect } from \"react-redux\";\r\nimport { url  } from \"../../../api\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\n\r\nconst CreateOrgUnit = (props) => {\r\n    const classes = useStyles()\r\n    const [otherfields, setOtherFields] = useState({name:\"\", description: \"\", status:\"\", parentOrganisationUnitLevelId:\"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal3, setModal3] = useState(false) //\r\n    const toggleModal3 = () => setModal3(!modal3)\r\n    const [orgUnitLevel, setOrgUnitLevel] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getCharacters() {\r\n            try {\r\n                const response = await axios(\r\n                    url + \"organisation-unit-levels/v2?status=1\"\r\n                );\r\n                const body = response.data && response.data !==null ? response.data : {};\r\n                \r\n                setOrgUnitLevel(\r\n                     body.map(({ name, id }) => ({ title: name, value: id }))\r\n                 );\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getCharacters();\r\n    }, []);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n      \r\n      if(e.target.checked){\r\n        setOtherFields ({ ...otherfields, status:0 });  \r\n        }else{\r\n            setOtherFields ({ ...otherfields, status:1});\r\n        }\r\n        setOtherFields ({ ...otherfields, [e.target.name]: e.target.value });\r\n        \r\n  }\r\n\r\n  const handleCheckedBox = e => {\r\n      \r\n        var isChecked = e.target.checked;\r\n        setOtherFields ({ ...otherfields, status:isChecked });\r\n }\r\n  const validate = () => {\r\n      let temp = { ...errors }\r\n      temp.name = otherfields.name ? \"\" : \"This field is required\"\r\n      temp.description = otherfields.description ? \"\" : \"This field is required\"\r\n      \r\n      setErrors({\r\n          ...temp\r\n          })    \r\n      return Object.values(temp).every(x => x == \"\")\r\n}\r\n\r\nconst createUploadBatch = () => {\r\n\r\n    props.togglestatus();\r\n    setModal3(!modal3)\r\n}\r\nconst saveOrgName = (e) => {\r\n    e.preventDefault();\r\n    const status = otherfields.status===true ?  otherfields.status=1 :  otherfields.status=0\r\n    //return console.log(otherfields)\r\n    if (validate()) {\r\n        setLoading(true);        \r\n        const onSuccess = () => {\r\n            \r\n            setLoading(false);\r\n            props.loadAllOrgUnitLevel()\r\n            props.togglestatus();\r\n            \r\n        };\r\n        const onError = () => {\r\n            setLoading(false);\r\n            props.togglestatus();\r\n        };\r\n       \r\n        props.createOrganisationUnit(otherfields, onSuccess, onError);\r\n    }\r\n};\r\n\r\n  return (      \r\n      <div >\r\n              <Modal show={props.modalstatus} toggle={props.togglestatus}   className={props.className} size=\"lg\" zIndex={\"9999\"} backdrop={false}>\r\n              <Form onSubmit={saveOrgName}> \r\n                  <Modal.Header toggle={props.togglestatus}>\r\n                      \r\n                      <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>Create Organization Unit Level</Modal.Title>\r\n                    <Button\r\n                      variant=\"\"\r\n                      className=\"btn-close\"\r\n                      onClick={props.togglestatus}\r\n                    >\r\n                      \r\n                    </Button>\r\n                    </Modal.Header>\r\n                      <Modal.Body>\r\n                          <Card>\r\n                            <CardBody>\r\n                              <br />\r\n                              <Row>\r\n                              <Col md={6}>\r\n                                <FormGroup>\r\n                                              <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Parent Organisation  Unit Level</Label>\r\n\r\n                                              <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"parentOrganisationUnitLevelId\"\r\n                                                        id=\"parentOrganisationUnitLevelId\"\r\n                                                        value={otherfields.parentOrganisationUnitLevelId} \r\n                                                        onChange={handleOtherFieldInputChange}\r\n                                                        style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        required\r\n                                                        >\r\n                                                            <option ></option>\r\n                                                            {orgUnitLevel.map((row) => (\r\n                                                                <option key={row.id} value={row.value}>\r\n                                                                    {row.title}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                    </Input>\r\n                                          </FormGroup>\r\n                                    </Col>\r\n                              </Row>\r\n                                <Row>\r\n                                  <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Name</Label>\r\n                                              <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"name\"\r\n                                                  id=\"name\"\r\n                                                  \r\n                                                  value={otherfields.name}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                  {...(errors.name && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                                <FormFeedback>{errors.name}</FormFeedback>\r\n                                      </FormGroup>\r\n                                  </Col>\r\n\r\n                                  <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\" style={{color:'#014d88',fontWeight:'bolder'}}>Description</Label>\r\n                                              <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"description\"\r\n                                                  id=\"description\"\r\n                                                  \r\n                                                  value={otherfields.description}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                  {...(errors.description && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                                <FormFeedback>{errors.description}</FormFeedback>\r\n                                      </FormGroup>\r\n                                  </Col>\r\n                                <Col md={12}>\r\n                                <FormGroup check >\r\n                                        <Label check style={{color:'#014d88',fontWeight:'bolder'}}>\r\n                                        <Input \r\n                                        type=\"checkbox\"\r\n                                        name=\"status\"\r\n                                        id=\"status\" \r\n                                       \r\n                                        onChange={handleCheckedBox}/>{' '}\r\n                                            Has no sublevel\r\n                                            <br/>\r\n                                            <Alert color=\"primary\" style={{marginTop:'10px'}}>\r\n                                                 This organisational unit level has no lower level\r\n                                            </Alert>\r\n                                          \r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                    \r\n                                    \r\n                                   <MatButton\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        //className={classes.button}\r\n                                        disabled={loading}\r\n                                        className=\" float-left mr-1\"\r\n                                        startIcon={<SaveIcon />}\r\n                                        style={{backgroundColor:'#014d88'}}\r\n                                    >\r\n                                        <span style={{textTransform: 'capitalize'}}>Save</span> \r\n                                    </MatButton> { \" \"} { \" \"} { \" \"} { \" \"} { \" \"}\r\n                                    <MatButton\r\n                                        variant='contained'\r\n                                        color='default'\r\n                                        onClick={props.togglestatus}\r\n                                        //className={classes.button}\r\n                                        startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                        className=\" float-left mr-1\"\r\n                                    >\r\n                                        <span style={{textTransform: 'capitalize', color:'#fff'}}>Cancel</span>\r\n                                   </MatButton>\r\n                            </Col>\r\n                            </Row>\r\n                      </CardBody>\r\n                </Card>\r\n          </Modal.Body>\r\n          </Form>\r\n      </Modal>\r\n      <CreatOrgUnitByUpload modalstatus={modal3} togglestatus={toggleModal3}  />\r\n \r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, { createOrganisationUnit })(\r\n    CreateOrgUnit\r\n);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\DeleteOrgUnit.js",["1018","1019","1020"],"import React, { useState }   from 'react';\r\n\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {deleteOrgUnit} from './../../../actions/organizationalUnit'\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal} from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\n\r\nconst DeleteModule = (props) => {\r\n    const classes = useStyles()\r\n    const orgUnit = props.orgUnit ? props.orgUnit : {};\r\n    const [loading, setLoading] = useState(false)\r\n    console.log(orgUnit);\r\n\r\nconst DeleteOrgUnitLevel = () =>{\r\n\r\n    const onSuccess = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n    const onError = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n\r\n    props.createOrgUnitLevel(orgUnit.id,onSuccess, onError);\r\n}\r\n\r\n  return (      \r\n      <div >\r\n          {/* <ModalViewResult ref={componentRef} /> */}\r\n          \r\n              <Modal show={props.modalstatus} className={props.className} size=\"md\">\r\n                  <Modal.Header toggle={props.togglestatus}>\r\n                      <Modal.Title>Delete Organisation Unit</Modal.Title>\r\n                  <Button\r\n                      variant=\"\"\r\n                      className=\"btn-close\"\r\n                      onClick={props.togglestatus}\r\n                  >\r\n                  </Button>\r\n                  </Modal.Header>\r\n                      <Modal.Body>\r\n                          <p style={{ fontWeight: 'bold'}}>Are you sure you want to Delete {orgUnit.name} ?</p>\r\n\r\n                            <br/>\r\n                        </Modal.Body>\r\n                            <Modal.Footer>\r\n\r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    onClick={DeleteOrgUnitLevel}\r\n                                    className=\" float-right mr-1\"\r\n                                    disabled={loading}\r\n                                >\r\n                                    Yes\r\n                                </MatButton>\r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    color='default'\r\n                                    onClick={props.togglestatus}\r\n                                    className={classes.button}\r\n\r\n                                    className=\" float-right mr-1\"\r\n                                >\r\n                                    Cancel\r\n                                </MatButton>\r\n                            </Modal.Footer>\r\n                    </Modal>\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteOrgUnit })(\r\n    DeleteModule\r\n);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\EditMenu.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { getModuleMenus,  editModuleMenu} from '../../../actions/bootstrapModule';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] = useState(props.datasample);\r\n\r\n    useEffect(() => {\r\n        setDetails(props.datasample)\r\n    }, [props.datasample]);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus`)\r\n                .then((response) => {\r\n                    const filterMenuId=response.data.filter((x)=> x.id!==props.datasample.id)\r\n                    setMenuList(\r\n                        Object.entries(filterMenuId).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, [props.datasample]);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const EditMenu = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            setLoading(true);\r\n\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n\r\n            }\r\n            props.editModuleMenu(details.id, details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n    const CaretDownIcon = () => {\r\n        return <ArrowDropDownIcon/>;\r\n    };\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\" style={{padding:'0px'}}>\r\n                <Modal.Header toggle={props.togglestatus} >\r\n                    <Modal.Title style={{color:'#014d88', fontWeight:'bolder'}}>Edit  Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body style={{padding:'0.875rem'}}>\r\n                    <Card style={{padding:'0px'}}>\r\n                        <CardBody style={{padding:'0px'}}>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\" style={{padding:'0px'}}>\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\" style={{color:'#014d88',fontWeight:'bolder'}}>{datasample.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n\r\n                                                <br/>\r\n                                                <div className=\"row\" style={{paddingBottom:\"35px\"}}>\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        >\r\n                                                            <option value=\" \" >\r\n                                                                Choose...\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value} >\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                                                    {/*    <label>Menu Type(Position)</label>*/}\r\n                                                    {/*    <select*/}\r\n                                                    {/*        value={details.type}*/}\r\n                                                    {/*        id=\"type\"*/}\r\n                                                    {/*        name=\"type\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    >*/}\r\n                                                    {/*        <option value=\"\" >Choose...</option>*/}\r\n                                                    {/*        <option value=\"sidebar\" >Sidebar</option>*/}\r\n                                                    {/*        <option value=\"component\" >Component</option>*/}\r\n                                                    {/*        <option value=\"both\" >Both</option>*/}\r\n                                                    {/*    </select>*/}\r\n                                                    {/*    {errors.type !==\"\" ? (*/}\r\n                                                    {/*        <span className={classes.error}>{errors.type}</span>*/}\r\n                                                    {/*    ) : \"\" }*/}\r\n                                                    {/*</div>*/}\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"code\"\r\n                                                            id=\"code\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.code}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n                                                    {/*<div className=\"form-group mb-3 col-md-4\">*/}\r\n                                                    {/*    <label>Breadcrumb</label>*/}\r\n                                                    {/*    <input*/}\r\n                                                    {/*        type=\"text\"*/}\r\n                                                    {/*        name=\"breadcrumb\"*/}\r\n                                                    {/*        id=\"breadcrumb\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        value={details.breadcrumb}*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    />*/}\r\n                                                    {/*</div>*/}\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                        />\r\n                                                    </div>\r\n                                                    {/*<div className=\"form-group col-md-3\">*/}\r\n                                                    {/*    <label>Tooltip</label>*/}\r\n                                                    {/*    <input*/}\r\n                                                    {/*        type=\"text\"*/}\r\n                                                    {/*        name=\"tooltip\"*/}\r\n                                                    {/*        id=\"tooltip\"*/}\r\n                                                    {/*        className=\"form-control\"*/}\r\n                                                    {/*        value={details.tooltip}*/}\r\n                                                    {/*        onChange={handleOtherFieldInputChange}*/}\r\n                                                    {/*    />*/}\r\n                                                    {/*</div>*/}\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={EditMenu}\r\n                                                    style={{backgroundColor:'#014d88'}}\r\n\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                                    style={{backgroundColor:'#992E62'}}\r\n                                                >\r\n                                                    <span style={{textTransform: 'capitalize', color:'#fff'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n\r\n    };\r\n};\r\n\r\nconst mapActionToProps = {\r\n    getModuleMenus: getModuleMenus,\r\n    editModuleMenu: editModuleMenu\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js",["1036","1037","1038","1039"],"import React, { useState}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst AddBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const deviceItems = { type: \"\", name:\"\", url:\"\", }\r\n    const [details, setDetails] = useState(deviceItems);\r\n\r\n\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.type = details.type ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            details[\"moduleId\"] = datasample.id\r\n\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n            }\r\n            props.addMenu(details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Edit Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Device type</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"type\"\r\n                                                    id=\"type\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.type}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.type !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.type}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Update  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddBiometricDevice;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js",["1040","1041","1042","1043"],"import React, { useState}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst AddBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const deviceItems = { type: \"\", name:\"\", url:\"\", }\r\n    const [details, setDetails] = useState(deviceItems);\r\n\r\n\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.type = details.type ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            details[\"moduleId\"] = datasample.id\r\n\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n            }\r\n            props.addMenu(details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Add Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Device type</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"type\"\r\n                                                    id=\"type\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.type}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.type !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.type}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Test  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddBiometricDevice;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Menu\\AddMenu.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058"],"import React, {useEffect, useState}   from 'react';\r\nimport {\r\n    Row, Col, Card, CardBody, Table, Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { Badge} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {url as baseUrl} from \"../../../api\";\r\nimport {Icon, Label as LabelSui, List} from \"semantic-ui-react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {  addMenu} from '../../../actions/menu';\r\nimport { connect } from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet menuobj=[];\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst UpdateModuleMenu = (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [menList, setMenuList] = useState([])\r\n    const [errors, setErrors] = useState({});\r\n    const defaultValues = { }\r\n    const menuItems = { parentId: \"\", name:\"\", url:\"\", breadcrumb: \"\", code: \"\", tooltip:\"\", icon:\"\", type:\"\", level:\"\",state:\"\", disabled: true,}\r\n    const [details, setDetails] = useState(menuItems);\r\n\r\n    //Function to get list of module menu\r\n    useEffect(() => {\r\n        async function getMenus() {\r\n            axios\r\n                .get(`${baseUrl}menus`)\r\n                .then((response) => {\r\n                    //console.log(response)\r\n                    setMenuList(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                            label: value.name,\r\n                            value: value.id,\r\n                        }))\r\n                    );\r\n                    menuobj = menList\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n        getMenus();\r\n    }, []);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.code = details.code ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n        //setDetails(defaultDetailValues)\r\n        //setErrors({})\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddMenu = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            details[\"moduleId\"] = datasample.id\r\n\r\n            setLoading(true);\r\n            const onSuccess = () => {\r\n                props.loadModuleMenus()\r\n                props.togglestatus()\r\n                setLoading(false)\r\n            }\r\n            const onError = () => {\r\n                setLoading(false)\r\n            }\r\n            props.addMenu(details, onSuccess, onError);\r\n            return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"xl\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>Add  Menu </Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"basic-form\">\r\n                                            <form onSubmit={(e) => e.preventDefault()}>\r\n                                                <h5 className=\"card-title\" style={{color:'#014d88',fontWeight:'bolder'}}>Module Menu </h5>\r\n                                                <br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"form-group mb-3 col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Parent Menu</label>\r\n                                                        <select\r\n                                                            value={details.parentId}\r\n                                                            id=\"parentId\"\r\n                                                            name=\"parentId\"\r\n                                                            className=\"form-control\"\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                        >\r\n                                                            \r\n                                                            <option value=\"\" style={{fontWeight:'bolder'}}>\r\n                                                                Parent Menu\r\n                                                            </option>\r\n                                                            {menList.map(({ label, value }) => (\r\n                                                                <option key={value} value={value} style={{fontWeight:'bolder'}}>\r\n                                                                    {label}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.parentId !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.parentId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Name</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            id=\"name\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.name}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        />\r\n                                                        {errors.name !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.name}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Code</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"code\"\r\n                                                            id=\"code\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.code}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            required\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        />\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}>Menu Link/Url</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"url\"\r\n                                                            id=\"url\"\r\n                                                            className=\"form-control\"\r\n                                                            value={details.url}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        />\r\n                                                        {errors.url !==\"\" ? (\r\n                                                            <span className={classes.error}>{errors.url}</span>\r\n                                                        ) : \"\" }\r\n                                                    </div>\r\n\r\n                                                    {/*Second Row of the Field by Col */}\r\n\r\n                                                    <div className=\"form-group col-md-3\">\r\n                                                        <label style={{color:'#014d88',fontWeight:'bolder'}}> Icon</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"icon\"\r\n                                                            name=\"icon\"\r\n                                                            value={details.icon}\r\n                                                            onChange={handleOtherFieldInputChange}\r\n                                                            style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px'}}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <MatButton\r\n                                                    type='submit'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    className={classes.button}\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    disabled={loading}\r\n                                                    onClick={AddMenu}\r\n                                                    style={{backgroundColor:'#014d88'}}\r\n                                                >\r\n\r\n                                                    <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                                </MatButton>\r\n                                                <MatButton\r\n                                                    variant='contained'\r\n                                                    color='default'\r\n                                                    onClick={closeModal}\r\n                                                    startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                                    style={{backgroundColor:'#992E62'}}\r\n                                                >\r\n                                                    <span style={{textTransform: 'capitalize', color:'#fff'}}>Cancel</span>\r\n                                                </MatButton>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     return {\r\n//         moduleMenuList: state.boostrapmodule.moduleMenuList,\r\n//\r\n//     };\r\n// };\r\n\r\nconst mapActionToProps = {\r\n    addMenu: addMenu\r\n};\r\nexport default connect(null, mapActionToProps)(UpdateModuleMenu);;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\DeleteOrgUnitLevel.js",["1059","1060","1061","1062","1063"],"import React, { useState }   from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Row,Col,FormGroup,Label,Card,CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {deleteOrgUnitLevel} from './../../../actions/organizationalUnit'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\n\r\nconst DeleteModule = (props) => {\r\n    const classes = useStyles()\r\n    const orgUnit = props.orgUnit ? props.orgUnit : {};\r\n    const [loading, setLoading] = useState(false)\r\n    console.log(orgUnit);\r\n\r\nconst DeleteOrgUnitLevel = () =>{\r\n\r\n    const onSuccess = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n    const onError = () => {\r\n        setLoading(false);\r\n        props.togglestatus();\r\n    };\r\n\r\n    props.createOrgUnitLevel(orgUnit.id,onSuccess, onError);\r\n}\r\n\r\n  return (      \r\n      <div >\r\n          {/* <ModalViewResult ref={componentRef} /> */}\r\n          \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                  <ModalHeader toggle={props.togglestatus}>Delete Organisation Unit Level</ModalHeader>\r\n                      <ModalBody>\r\n                          <Card>\r\n                            <CardBody>\r\n                                <Row style={{ marginTop: '20px'}}>\r\n                                    <Col xs=\"12\">\r\n                                        <span style={{ fontWeight: 'bold'}}>Are you sure you want to Delete {orgUnit.name} ?</span>\r\n                                        <br/>\r\n                                    </Col>\r\n                                    <br/>\r\n                                    \r\n                                    <br/>\r\n                                </Row>\r\n                            <br/>\r\n                            <MatButton\r\n                              variant='contained'\r\n                              color='default'\r\n                              onClick={props.togglestatus}\r\n                              className={classes.button}\r\n                             \r\n                              className=\" float-right mr-1\"\r\n                            >\r\n                              Cancel\r\n                            </MatButton>\r\n                            <MatButton\r\n                                type='submit'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                className={classes.button}\r\n                                onClick={DeleteOrgUnitLevel}\r\n                                className=\" float-right mr-1\"\r\n                                disabled={loading}\r\n                            >\r\n                                Yes \r\n                            </MatButton>\r\n                            \r\n                      </CardBody>\r\n                </Card>\r\n          </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteOrgUnitLevel })(\r\n    DeleteModule\r\n);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\TestPage\\PatientCard.js",["1064","1065"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import Chip from '@material-ui/core/Chip';\r\nimport profile from \"./../../../images/profile/profile.png\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Dropdown, } from \"react-bootstrap\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport SubMenu from './../Patients/SubMenu'\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <SubMenu />\r\n      <ExpansionPanel defaultExpanded>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        \r\n        <div className=\"col-md-12\">\r\n          <div className=\"profile card card-body px-3 pt-3 pb-0\">\r\n            <div className=\"profile-head\">\r\n              \r\n              <div className=\"profile-info\">\r\n                <div className=\"profile-photo\">\r\n                  <img\r\n                    src={profile}\r\n                    className=\"img-fluid rounded-circle\"\r\n                    alt=\"profile\"\r\n                  />\r\n                </div>\r\n                <div className=\"profile-details\">\r\n                  <div className=\"profile-name px-3 pt-2\">\r\n                    <h6 className=\"text-primary mb-0\">Name: Amos M. Emeka</h6>\r\n                    \r\n                  </div>\r\n                  <div className=\"profile-email px-2 pt-2\">\r\n                    <h6 className=\"text-muted mb-0\" >Address:Waksur Street Wuse Zone 5, Abuja Nigeria</h6>\r\n                   \r\n                  </div>\r\n                  <div className=\"profile-email px-2 pt-2\">\r\n                    <h6 className=\"text-muted mb-0\">Phone:08172306578</h6>\r\n                   \r\n                  </div>\r\n                  <Dropdown className=\"dropdown ms-auto\">\r\n                    <Dropdown.Toggle\r\n                      variant=\"primary\"\r\n                      className=\"btn btn-primary light sharp i-false\"\r\n                      data-toggle=\"dropdown\"\r\n                      aria-expanded=\"true\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        //    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                        width=\"18px\"\r\n                        height=\"18px\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        version=\"1.1\"\r\n                      >\r\n                        <g\r\n                          stroke=\"none\"\r\n                          strokeWidth=\"1\"\r\n                          fill=\"none\"\r\n                          fillRule=\"evenodd\"\r\n                        >\r\n                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\r\n                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\"></circle>\r\n                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\"></circle>\r\n                        </g>\r\n                      </svg>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                      <Dropdown.Item className=\"dropdown-item\">\r\n                        <i className=\"fa fa-user-circle text-primary me-2\" />\r\n                        View profile\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item className=\"dropdown-item\">\r\n                        <i className=\"fa fa-users text-primary me-2\" />\r\n                        Add to close friends\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item className=\"dropdown-item\">\r\n                        <i className=\"fa fa-plus text-primary me-2\" />\r\n                        Add to group\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item className=\"dropdown-item\">\r\n                        <i className=\"fa fa-ban text-primary me-2\" />\r\n                        Block\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    \r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div className={classes.column} >\r\n            <Button\r\n                    color='red'\r\n                    content='BloodType'\r\n                    //icon='heart'\r\n                    label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    />\r\n                    \r\n            </div>\r\n          <div className={classes.column}>\r\n          <Button\r\n                    basic\r\n                    color='blue'\r\n                    content='Height'\r\n                    icon='fork'\r\n                    label={{\r\n                        as: 'a',\r\n                        basic: true,\r\n                        color: 'blue',\r\n                        pointing: 'left',\r\n                        content: '74.5 in',\r\n                    }}\r\n                    />\r\n          </div>\r\n          <div className={classes.column}>\r\n          <Button\r\n                    basic\r\n                    color='blue'\r\n                    content='Weight'\r\n                    icon='fork'\r\n                    label={{\r\n                        as: 'a',\r\n                        basic: true,\r\n                        color: 'blue',\r\n                        pointing: 'left',\r\n                        content: '74.5 in',\r\n                    }}\r\n                    />\r\n          </div>\r\n          <div className={classNames(classes.column, classes.helper)}>\r\n            <Typography variant=\"caption\">\r\n              Biometric Status\r\n              <br />\r\n              <a href=\"#sub-labels-and-columns\" className={classes.link}>\r\n                Patient Status\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        <Divider />\r\n        <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n          \r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\ApplicationCodeset\\NewApplicationCodeset.js",["1066"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row,Col,FormGroup,Label,Input,Card,CardBody} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport {  Modal,  Button } from \"react-bootstrap\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nimport { createApplicationCodeset, updateApplicationCodeset } from './../../../actions/applicationCodeset';\r\nimport { Spinner } from 'reactstrap';\r\nimport Select from \"react-select/creatable\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst ModalSample = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [showNewCodesetGroup, setShowNewCodesetGroup] = useState(false)\r\n    const defaultValues = {display:\"\", language:\"\", version:\"\", codesetGroup:\"\"};\r\n    const [formData, setFormData] = useState( defaultValues)\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        //for application codeset edit, load form data\r\n        setFormData(props.formData ? props.formData : defaultValues);\r\n        setShowNewCodesetGroup(false);\r\n    }, [props.formData,  props.showModal]);\r\n\r\n    const handleInputChange = e => {\r\n        setFormData ({ ...formData, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleCodesetGroupChange = (newValue) => {\r\n        setFormData ({ ...formData, codesetGroup: newValue.value});\r\n    };\r\n\r\n\r\n    const createGlobalVariable = e => {\r\n        e.preventDefault()\r\n            setLoading(true);\r\n\r\n            const onSuccess = () => {\r\n                setLoading(false);\r\n                toast.success(\"Application codeset saved successfully!\")\r\n                props.loadApplicationCodeset();\r\n                props.toggleModal()\r\n            }\r\n            const onError = () => {\r\n                setLoading(false);\r\n                //toast.error(\"Something went wrong, please contact administration\");\r\n                //props.toggleModal()\r\n            }\r\n            if(formData.id){\r\n                props.updateApplicationCodeset(formData.id, formData, onSuccess, onError)\r\n                return\r\n            }\r\n            props.createApplicationCodeset(formData, onSuccess,onError)\r\n\r\n    }\r\n    return (\r\n\r\n        <div >\r\n            <ToastContainer />\r\n            <Modal show={props.showModal}  size=\"lg\">\r\n\r\n                <Form onSubmit={createGlobalVariable}>\r\n                    <Modal.Header toggle={props.toggleModal}> \r\n                    <Modal.Title style={{color:'#014d88',fontWeight:'bolder'}}>{props.formData && props.formData.id ? 'Edit' : 'New'} Application Codeset </Modal.Title>\r\n                    <Button\r\n                      variant=\"\"\r\n                      className=\"btn-close\"\r\n                      onClick={props.toggleModal}\r\n                    ></Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12}>\r\n                                        {!showNewCodesetGroup ?\r\n                                            <FormGroup>\r\n                                                <Label style={{color:'#014d88',fontWeight:'bolder'}}>Codeset Group <span style={{cursor: \"pointer\", color: \"blue\"}}\r\n                                                                           onClick={() => setShowNewCodesetGroup(true)}> ( or Click to create new codeset group)</span></Label>\r\n                                                <Select\r\n                                                    required\r\n                                                    name=\"cg\"\r\n                                                    id=\"cg\"\r\n                                                    isOptionDisabled={option => formData.id ? option.value !== formData.codesetGroup : false}\r\n                                                    isMulti={false}\r\n                                                    onChange={handleCodesetGroupChange}\r\n                                                    style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder',appearance:'auto'}}\r\n                                                    options={props.applicationCodesetList ? Array.from(new Set(props.applicationCodesetList.map(x => x.codesetGroup))).sort().map(codesetGroup => ({\r\n                                                        value: codesetGroup,\r\n                                                        label: codesetGroup\r\n                                                    })) : []}\r\n                                                    value={formData.codesetGroup ? {\r\n                                                        value: formData.codesetGroup,\r\n                                                        label: formData.codesetGroup\r\n                                                    } : \"\"}\r\n                                                    isLoading={false}\r\n\r\n                                                />\r\n                                            </FormGroup> :\r\n                                            <FormGroup>\r\n                                                <Label style={{color:'#014d88',fontWeight:'bolder'}}>Codeset Group <span style={{cursor: \"pointer\", color: \"blue\"}}\r\n                                                                           onClick={() => setShowNewCodesetGroup(false)}> ( or Click to pick from existing codeset group)</span></Label>\r\n                                                <Input\r\n                                                    type='text'\r\n                                                    name='codesetGroup'\r\n                                                    id='codesetGroup'\r\n                                                    placeholder='Enter new codeset group'\r\n                                                    value={formData.codesetGroup}\r\n                                                    onChange={handleInputChange}\r\n                                                    style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                    required\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                        }\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label style={{color:'#014d88',fontWeight:'bolder'}}>Name</Label>\r\n                                            <Input\r\n                                                type='text'\r\n                                                name='display'\r\n                                                id='display'\r\n                                                placeholder=' '\r\n                                                value={formData.display}\r\n                                                onChange={handleInputChange}\r\n                                                style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                required\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label style={{color:'#014d88',fontWeight:'bolder'}}>Language</Label>\r\n                                            <Input\r\n                                                type='text'\r\n                                                name='language'\r\n                                                id='language'\r\n                                                placeholder=' '\r\n                                                value={formData.language}\r\n                                                onChange={handleInputChange}\r\n                                                style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                required\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col md={12}>\r\n                                        <FormGroup>\r\n                                            <Label style={{color:'#014d88',fontWeight:'bolder'}}>Version</Label>\r\n                                            <Input\r\n                                                type='text'\r\n                                                name='version'\r\n                                                id='version'\r\n                                                placeholder=' '\r\n                                                value={formData.version}\r\n                                                onChange={handleInputChange}\r\n                                                style={{height:\"40px\",border:'solid 1px #014d88',borderRadius:'5px', fontWeight:'bolder'}}\r\n                                                required\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <MatButton\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    disabled={loading}\r\n                                    style={{backgroundColor:'#014d88'}}\r\n                                >\r\n                                    Save  {loading ? <Spinner /> : \"\"}\r\n                                </MatButton>\r\n                                <MatButton\r\n                                    variant='contained'\r\n                                    className={classes.button}\r\n                                    color='default'\r\n                                    onClick={props.toggleModal}\r\n                                    startIcon={<CancelIcon style={{color:'#fff'}} />}\r\n                                    style={{backgroundColor:'#992E62',color:'#fff'}}\r\n                                >\r\n                                    Cancel\r\n                                </MatButton>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Modal.Body>\r\n\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        applicationCodesetList: state.applicationCodesets.applicationCodesetList\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createApplicationCodeset , updateApplicationCodeset})(ModalSample);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Functions\\UseForm.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\role.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Roles\\RolesList.js",["1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077"],"import axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { fetchRoles, deleteRole, updateRole } from \"./../../../actions/role\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./RolesList.css\";\r\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport {MdDeleteForever, MdModeEdit, MdPerson} from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport SplitActionButton from \"../Button/SplitActionButton\";\r\nimport {FaEye} from \"react-icons/fa\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nlet roleId = 0;\r\n\r\nconst RoleList = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n \r\n  useEffect(() => {\r\n    fetchRole()\r\n  }, []);\r\nconst fetchRole =()=>{\r\n  const onSuccess = () => {\r\n    setLoading(false);\r\n  };\r\n  const onError = () => {\r\n    setLoading(false);\r\n  };\r\n  props.fetchAllRoles(onSuccess, onError);\r\n}\r\n  /* Get list of Permissions from the server */\r\n\r\n  const deleteRoleModal = (id) => {\r\n    roleId = id;\r\n    setModal(!modal);\r\n\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    const onSuccess = () => {\r\n      setModal(false)\r\n      fetchRole()\r\n      toast.success(\"Role Deleted Successfully\");          \r\n      history.push(\"/roles\")\r\n      //return;\r\n    };\r\n    const onError = () => {\r\n      toast.error(\"Something went wrong\");\r\n      //return;\r\n    };\r\n    props.deleteRole(id, onSuccess,onError);  \r\n      \r\n      \r\n  };\r\n  function actionItems(row){\r\n    return  [\r\n      {\r\n        type:'link',\r\n        name:'View',\r\n        icon:<FaEye  size=\"22\"/>,\r\n        to:{\r\n          pathname: \"/edit-role\",\r\n          state: { row: row }\r\n        }\r\n      },\r\n      {\r\n        type:'link',\r\n        name:'Edit',\r\n        icon:<MdPerson size=\"20\" color='#014d88' />,\r\n        to:{\r\n          pathname: \"/edit-role\",\r\n          state: { row: row }\r\n        }\r\n      },\r\n      {\r\n        type:'button',\r\n        name:'Delete',\r\n        icon:<MdModeEdit size=\"20\" color='#014d88' />,\r\n        onClick:(() =>  deleteRoleModal(row.id))\r\n      }\r\n    ]\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <MaterialTable\r\n      icons={tableIcons}\r\n        title=\"Role List\"\r\n        columns={[\r\n          { title: \"Id\", field: \"id\", filtering: false },\r\n          { title: \"Name\", field: \"name\" },\r\n         \r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={props.rolesList.map((row) => ({\r\n          id: row.id,\r\n          name: row.name,\r\n         \r\n          actions: (\r\n            <div>\r\n              <SplitActionButton actions={actionItems(row)} />\r\n{/*              <Link to={{pathname: \"/edit-role\", state: { row: row }}}\r\n              >\r\n              <Label as='a' color='blue' className=\"ms-1\" size='mini'>\r\n                <Icon name='pencil' /> Edit\r\n              </Label>\r\n              </Link>\r\n              <Label as='a' color='red' onClick={() =>  deleteRoleModal(row.id)}  size='mini'>\r\n                <Icon name='trash' /> Delete\r\n              </Label>\r\n\r\n             */}\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n            fontSize:'14px',\r\n          },\r\n          \r\n          searchFieldStyle: {\r\n            width: \"150%\",\r\n            margingLeft: \"150px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n        }}\r\n      />\r\n        <Modal show={modal} >\r\n\r\n        <Modal.Header>\r\n          <Modal.Title>Delete Role</Modal.Title>\r\n          <Button\r\n              variant=\"\"\r\n              className=\"btn-close\"\r\n              onClick={() => setModal(false)}\r\n          >\r\n\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete Role</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            \r\n            onClick={() => onDelete(roleId)}\r\n          >\r\n          Yes\r\n          </MatButton>\r\n          <MatButton\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            startIcon={<CancelIcon />}\r\n            onClick={() => setModal(false)}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>\r\n              Cancel\r\n            </span>\r\n          </MatButton>\r\n        </Modal.Footer>\r\n        </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rolesList: state.roles.list,\r\n    //rolesList: [],\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  fetchAllRoles: fetchRoles,\r\n  deleteRole: deleteRole,\r\n  updateRole: updateRole\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(RoleList);\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\auth-header.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\interceptor.js",["1078"],"import axios from \"axios\";\r\nimport { authentication } from '../_services/authentication';\r\nimport { authHeader } from './auth-header';\r\nimport store from './../store';\r\nimport * as ACTION_TYPES from \"../actions/types\";\r\n\r\nconst { dispatch } = store;\r\n\r\n// Add authentication headers to requests\r\naxios.interceptors.request.use(function (config) {\r\n    const authenticationHeader = authHeader();\r\n    if(authenticationHeader) {\r\n        config.headers = authenticationHeader;\r\n    } else {\r\n        console.log('There is not token yet...'); \r\n    }\r\n    return config;\r\n});\r\n\r\n// Check if token is still valid\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n  }, function (error) {\r\n      // TODO:  Update 403(Forbiden) once roles is completed\r\n    console.log(error);\r\n    //return;\r\n\r\n    if( error && error.response && error.response.status && error.response.status == 403 && authentication.currentUserValue != null ){\r\n        // do nothing if the api has to do with an encounter, this is for custom handling of api response rather than redirecting to the unauthorised page\r\n        //console.log(error.request.responseURL);\r\n        const url = error.request && error.request.responseURL ? error.request.responseURL.toString() : null;\r\n        if(url && !url.includes(\"encounters\")){\r\n            window.location.href = '/unauthorised';\r\n        }\r\n\r\n    }\r\n   else\r\n       if (error && error.response && error.response.status && error.response.status === 401 ) {\r\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n        authentication.logout();\r\n        dispatch({\r\n            type: ACTION_TYPES.UNAUTHORISED_ERROR,\r\n            payload: error.response.status\r\n        });\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  })","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\handle-response.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\_helpers\\initialFieldState_UserRegistration.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemConfig.js",["1079"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {env} from \"./../../../actions/systemInfo\";\r\nimport {  Table,} from \"react-bootstrap\";\r\n\r\nlet newConfigList=[]\r\n\r\nconst SystemConfig = (props) => {\r\n\r\n    useEffect(() => {\r\n        fetchSystemEnv()  \r\n      }, []);\r\n\r\n    const fetchSystemEnv =()=>{\r\n      const onSuccess = () => {\r\n       \r\n      };\r\n      const onError = () => {\r\n      };\r\n      props.fetchEnv(onSuccess, onError);\r\n    }\r\n   ///console.log(newList[0])\r\n   const systemProperties = props.SystemInfo && props.SystemInfo.propertySources ? props.SystemInfo.propertySources : []\r\n        \r\n   systemProperties.forEach(function (value, index, array) {\r\n    if(value['name']==='across'){\r\n      //console.log(value['properties'])\r\n      return newConfigList=Object.entries(value['properties']).map(([key, value]) => ({\r\n        label: key,\r\n        value: value,\r\n      }))\r\n    }\r\n   \r\n  })\r\n    //console.log(newConfigList)\r\n\r\n  return (\r\n         <Fragment>      \r\n            <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            { newConfigList.map((row) => (\r\n                <tr>\r\n                <td>{row.label}</td>\r\n                <td>{row.value.value}</td>\r\n                \r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n                   \r\n     \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        SystemInfo: state.SystemInfo.list,\r\n    };\r\n  };\r\n  \r\n  const mapActionToProps = {\r\n    fetchEnv: env,\r\n  };\r\n  \r\nexport default connect(mapStateToProps, mapActionToProps)(SystemConfig);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\actions\\systemInfo.js",[],"C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemProperty.js",["1080"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {env} from \"./../../../actions/systemInfo\";\r\nimport {  Table,} from \"react-bootstrap\";\r\n\r\nlet newConfigList=[]\r\n\r\nconst SystemProperty = (props) => {\r\n\r\n    useEffect(() => {\r\n        fetchSystemEnv()  \r\n      }, []);\r\n\r\n    const fetchSystemEnv =()=>{\r\n      const onSuccess = () => {\r\n       \r\n      };\r\n      const onError = () => {\r\n      };\r\n      props.fetchEnv(onSuccess, onError);\r\n    }\r\n   ///console.log(newList[0])\r\n   const systemProperties = props.SystemInfo && props.SystemInfo.propertySources ? props.SystemInfo.propertySources : []\r\n        \r\n   systemProperties.forEach(function (value, index, array) {\r\n    if(value['name']==='systemProperties'){\r\n      //console.log(value['properties'])\r\n      return newConfigList=Object.entries(value['properties']).map(([key, value]) => ({\r\n        label: key,\r\n        value: value,\r\n      }))\r\n    }\r\n   \r\n  })\r\n    //console.log(newConfigList)\r\n\r\n  return (\r\n         <Fragment>      \r\n            <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            { newConfigList.map((row) => (\r\n                <tr>\r\n                <td>{row.label}</td>\r\n                <td>{row.value.value}</td>\r\n                \r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n                   \r\n     \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        SystemInfo: state.SystemInfo.list,\r\n    };\r\n  };\r\n  \r\n  const mapActionToProps = {\r\n    fetchEnv: env,\r\n  };\r\n  \r\nexport default connect(mapStateToProps, mapActionToProps)(SystemProperty);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\ApplicationConfig.js",["1081"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {env} from \"./../../../actions/systemInfo\";\r\nimport {  Table,} from \"react-bootstrap\";\r\n\r\nlet newConfigList=[]\r\n\r\nconst ApplicationConfig = (props) => {\r\n\r\n    useEffect(() => {\r\n        fetchSystemEnv()  \r\n      }, []);\r\n\r\n    const fetchSystemEnv =()=>{\r\n      const onSuccess = () => {\r\n       \r\n      };\r\n      const onError = () => {\r\n      };\r\n      props.fetchEnv(onSuccess, onError);\r\n    }\r\n   \r\n   const systemProperties = props.SystemInfo && props.SystemInfo.propertySources ? props.SystemInfo.propertySources : []\r\n        \r\n   systemProperties.forEach(function (value, index, array) {\r\n    if(value['name']==='applicationConfig: [file:./application.yml]'){\r\n      //console.log(value['properties'])\r\n      return newConfigList=Object.entries(value['properties']).map(([key, value]) => ({\r\n        label: key,\r\n        value: value,\r\n      }))\r\n    }\r\n   \r\n  })\r\n    //console.log(newConfigList)\r\n\r\n  return (\r\n         <Fragment>      \r\n            <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            { newConfigList.map((row) => (\r\n                <tr>\r\n                <td>{row.label}</td>\r\n                <td>{row.value.value}</td>\r\n                \r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n                   \r\n     \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        SystemInfo: state.SystemInfo.list,\r\n    };\r\n  };\r\n  \r\n  const mapActionToProps = {\r\n    fetchEnv: env,\r\n  };\r\n  \r\nexport default connect(mapStateToProps, mapActionToProps)(ApplicationConfig);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\SystemConfiguration\\SystemEnv.js",["1082"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {env} from \"./../../../actions/systemInfo\";\r\nimport {  Table,} from \"react-bootstrap\";\r\n\r\nlet newConfigList=[]\r\n\r\nconst SystemEnv = (props) => {\r\n\r\n    useEffect(() => {\r\n        fetchSystemEnv()  \r\n      }, []);\r\n\r\n    const fetchSystemEnv =()=>{\r\n      const onSuccess = () => {\r\n       \r\n      };\r\n      const onError = () => {\r\n      };\r\n      props.fetchEnv(onSuccess, onError);\r\n    }\r\n   ///console.log(newList[0])\r\n   const systemProperties = props.SystemInfo && props.SystemInfo.propertySources ? props.SystemInfo.propertySources : []\r\n        \r\n   systemProperties.forEach(function (value, index, array) {\r\n    if(value['name']==='systemEnvironment'){\r\n      //console.log(value['properties'])\r\n      return newConfigList=Object.entries(value['properties']).map(([key, value]) => ({\r\n        label: key,\r\n        value: value,\r\n      }))\r\n    }\r\n   \r\n  })\r\n    //console.log(newConfigList)\r\n\r\n  return (\r\n         <Fragment>      \r\n            <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            { newConfigList.map((row) => (\r\n                <tr>\r\n                <td>{row.label}</td>\r\n                <td>{row.value.value}</td>\r\n                \r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n            </Table>\r\n                   \r\n     \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        SystemInfo: state.SystemInfo.list,\r\n    };\r\n  };\r\n  \r\n  const mapActionToProps = {\r\n    fetchEnv: env,\r\n  };\r\n  \r\nexport default connect(mapStateToProps, mapActionToProps)(SystemEnv);\r\n\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\OrganizationUnit\\CreatOrgUnitByUpload.js",["1083","1084","1085","1086","1087","1088","1089","1090","1091"],"import React, { useState }   from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Row,Col,FormGroup,Input,FormFeedback,Label,Card,CardBody\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\n\r\nconst CreatOrgUnitByUpload = (props) => {\r\n    const classes = useStyles()\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [otherfields, setOtherFields] = useState({fileName:\"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const handleOtherFieldInputChange = e => {\r\n      setOtherFields ({ ...otherfields, [e.target.name]: e.target.value });\r\n      //console.log(otherfields)\r\n  }\r\n  const validate = () => {\r\n      let temp = { ...errors }\r\n      temp.fileName = otherfields.fileName ? \"\" : \"This field is required\"\r\n      setErrors({\r\n          ...temp\r\n          })    \r\n      return Object.values(temp).every(x => x == \"\")\r\n}\r\n\r\n\r\n  return (      \r\n      <div >\r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                  <ModalHeader toggle={props.togglestatus}>Create Organization Unit</ModalHeader>\r\n                      <ModalBody>\r\n                          <Card>\r\n                            <CardBody>\r\n                              <br />\r\n                              <Row>\r\n                                  <Col>\r\n                                  <Alert severity=\"info\">\r\n                                    <AlertTitle>Please click here to download template</AlertTitle>\r\n                                      <ul>\r\n                                        \r\n                                      </ul>\r\n                                      \r\n                                  </Alert>\r\n                                </Col>\r\n                              </Row>\r\n                                <Row>\r\n                                  {/* <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Parent name</Label>\r\n                                              <Input\r\n                                                  type=\"text\"\r\n                                                  name=\"fileName\"\r\n                                                  id=\"fileName\"\r\n                                                  \r\n                                                  value={otherfields.fileName}\r\n                                                  onChange={handleOtherFieldInputChange}\r\n                                                  {...(errors.fileName && { invalid: true})}\r\n                                                  \r\n                                              />\r\n                                                <FormFeedback>{errors.fileName}</FormFeedback>\r\n                                      </FormGroup>\r\n                                  </Col> */}\r\n                                  <Col md={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Import Children</Label>\r\n                                      <DropzoneArea\r\n                                          onChange={(files) => console.log('Files:', files)}\r\n                                          showFileNames=\"true\"\r\n                                          acceptedFiles={['pdf']}\r\n                                        />\r\n                                      </FormGroup>\r\n                                  </Col>\r\n                                     \r\n                                </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={12}>\r\n                                    <MatButton\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        className={classes.button}\r\n                                        \r\n                                        className=\" float-right mr-1\"\r\n                                        \r\n                                    >\r\n                                        Save \r\n                                    </MatButton>\r\n                                    <MatButton\r\n                                        variant='contained'\r\n                                        color='default'\r\n                                        onClick={props.togglestatus}\r\n                                        className={classes.button}\r\n                                        \r\n                                        className=\" float-right mr-1\"\r\n                                    >\r\n                                        Cancel\r\n                                   </MatButton>\r\n                            </Col>\r\n                            </Row>\r\n                      </CardBody>\r\n                </Card>\r\n          </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatOrgUnitByUpload;\r\n","C:\\Users\\mathew.adegbite\\LAMISPLUS\\core-enhancement-updated\\starter-module\\src\\main\\webapp\\jsx\\components\\Patients\\SubMenu.js",["1092","1093","1094","1095"],"import React, { useState } from \"react\";\r\nimport { Button, Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n//import * as CODES from \"api/codes\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu size=\"mini\" color={\"black\"} inverted>\r\n                <Dropdown text=\"Laboratory\"   labeled simple    className='icon link item'>\r\n                    <Dropdown.Menu >\r\n                        <Dropdown.Item color={\"black\"}>\r\n                            <Link style={{color:\"#000000\"}}>\r\n                                Sample Collection\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n\r\n                        <Dropdown.Item style={{color:\"#000000\"}} >\r\n                            <Link  style={{color:\"#000000\"}}>\r\n                                Radiology\r\n                            </Link>\r\n                        </Dropdown.Item>\r\n\r\n\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Menu.Item>  <Link  >Covid 19 </Link></Menu.Item>\r\n                <Menu.Item>  <Link  >Malaria</Link></Menu.Item>\r\n                <Menu.Item>  <Link >Tuberculosis </Link></Menu.Item>\r\n            </Menu>\r\n            <ToastContainer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         patient: state.patients.patient,\r\n//         relationships: state.applicationCodesets.relationships\r\n//     };\r\n// };\r\n\r\n// const mapActionToProps = {\r\n//     checkOutPatient: update,\r\n//     fetchPatientByHospitalNumber: fetchByHospitalNumber,\r\n//     fetchApplicationCodeSet: fetchApplicationCodeSet,\r\n// };\r\n\r\nexport default connect(null, null)(SubMenu);\r\n",{"ruleId":"1096","severity":1,"message":"1097","line":1,"column":26,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1100","line":1,"column":37,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1101","line":1,"column":47,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":53},{"ruleId":"1096","severity":1,"message":"1102","line":2,"column":8,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1103","line":26,"column":9,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1104","line":5,"column":18,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1105","line":16,"column":18,"nodeType":"1098","messageId":"1099","endLine":16,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1106","line":20,"column":8,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1107","line":51,"column":5,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":6},{"ruleId":"1096","severity":1,"message":"1108","line":60,"column":20,"nodeType":"1098","messageId":"1099","endLine":60,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1109","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1110","line":47,"column":13,"nodeType":"1098","messageId":"1099","endLine":47,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1111","line":56,"column":10,"nodeType":"1098","messageId":"1099","endLine":56,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1112","line":2,"column":10,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1113","line":5,"column":10,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1114","line":5,"column":39,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":44},{"ruleId":"1096","severity":1,"message":"1115","line":26,"column":12,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1116","line":26,"column":22,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1117","line":33,"column":12,"nodeType":"1098","messageId":"1099","endLine":33,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1118","line":47,"column":11,"nodeType":"1098","messageId":"1099","endLine":47,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1119","line":173,"column":11,"nodeType":"1098","messageId":"1099","endLine":173,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1097","line":1,"column":16,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1112","line":2,"column":10,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1120","line":37,"column":8,"nodeType":"1098","messageId":"1099","endLine":37,"endColumn":9},{"ruleId":"1096","severity":1,"message":"1121","line":79,"column":12,"nodeType":"1098","messageId":"1099","endLine":79,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1122","line":79,"column":25,"nodeType":"1098","messageId":"1099","endLine":79,"endColumn":39},{"ruleId":"1096","severity":1,"message":"1123","line":80,"column":12,"nodeType":"1098","messageId":"1099","endLine":80,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1124","line":80,"column":23,"nodeType":"1098","messageId":"1099","endLine":80,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1125","line":83,"column":11,"nodeType":"1098","messageId":"1099","endLine":83,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1126","line":90,"column":12,"nodeType":"1098","messageId":"1099","endLine":90,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1127","line":90,"column":25,"nodeType":"1098","messageId":"1099","endLine":90,"endColumn":39},{"ruleId":"1096","severity":1,"message":"1128","line":98,"column":12,"nodeType":"1098","messageId":"1099","endLine":98,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1129","line":101,"column":12,"nodeType":"1098","messageId":"1099","endLine":101,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1130","line":104,"column":11,"nodeType":"1098","messageId":"1099","endLine":104,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1131","line":120,"column":12,"nodeType":"1098","messageId":"1099","endLine":120,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1132","line":128,"column":11,"nodeType":"1098","messageId":"1099","endLine":128,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1103","line":130,"column":11,"nodeType":"1098","messageId":"1099","endLine":130,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1133","line":135,"column":12,"nodeType":"1098","messageId":"1099","endLine":135,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1134","line":136,"column":12,"nodeType":"1098","messageId":"1099","endLine":136,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1135","line":136,"column":22,"nodeType":"1098","messageId":"1099","endLine":136,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1136","line":137,"column":12,"nodeType":"1098","messageId":"1099","endLine":137,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1137","line":140,"column":12,"nodeType":"1098","messageId":"1099","endLine":140,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1138","line":143,"column":12,"nodeType":"1098","messageId":"1099","endLine":143,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1139","line":143,"column":26,"nodeType":"1098","messageId":"1099","endLine":143,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1140","line":145,"column":12,"nodeType":"1098","messageId":"1099","endLine":145,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1141","line":145,"column":26,"nodeType":"1098","messageId":"1099","endLine":145,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1142","line":146,"column":12,"nodeType":"1098","messageId":"1099","endLine":146,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1143","line":148,"column":11,"nodeType":"1098","messageId":"1099","endLine":148,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1144","line":149,"column":12,"nodeType":"1098","messageId":"1099","endLine":149,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1145","line":149,"column":26,"nodeType":"1098","messageId":"1099","endLine":149,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1146","line":151,"column":12,"nodeType":"1098","messageId":"1099","endLine":151,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1147","line":152,"column":26,"nodeType":"1098","messageId":"1099","endLine":152,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1148","line":153,"column":28,"nodeType":"1098","messageId":"1099","endLine":153,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1149","line":155,"column":11,"nodeType":"1098","messageId":"1099","endLine":155,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1150","line":157,"column":12,"nodeType":"1098","messageId":"1099","endLine":157,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1151","line":157,"column":20,"nodeType":"1098","messageId":"1099","endLine":157,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1152","line":161,"column":15,"nodeType":"1098","messageId":"1099","endLine":161,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1153","line":165,"column":15,"nodeType":"1098","messageId":"1099","endLine":165,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1154","line":183,"column":11,"nodeType":"1098","messageId":"1099","endLine":183,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1155","line":193,"column":11,"nodeType":"1098","messageId":"1099","endLine":193,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1156","line":211,"column":11,"nodeType":"1098","messageId":"1099","endLine":211,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1157","line":220,"column":11,"nodeType":"1098","messageId":"1099","endLine":220,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1158","line":235,"column":19,"nodeType":"1098","messageId":"1099","endLine":235,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1159","line":307,"column":11,"nodeType":"1098","messageId":"1099","endLine":307,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1161","line":10,"column":11,"nodeType":"1162","endLine":10,"endColumn":55},{"ruleId":"1096","severity":1,"message":"1163","line":35,"column":11,"nodeType":"1098","messageId":"1099","endLine":35,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1149","line":54,"column":11,"nodeType":"1098","messageId":"1099","endLine":54,"endColumn":29},{"ruleId":"1164","severity":1,"message":"1165","line":58,"column":8,"nodeType":"1166","endLine":58,"endColumn":10,"suggestions":"1167"},{"ruleId":"1096","severity":1,"message":"1168","line":69,"column":17,"nodeType":"1098","messageId":"1099","endLine":69,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1169","line":81,"column":11,"nodeType":"1098","messageId":"1099","endLine":81,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1170","line":89,"column":11,"nodeType":"1098","messageId":"1099","endLine":89,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1171","line":1,"column":8,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":2,"column":17,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1173","line":9,"column":10,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1174","line":9,"column":16,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1175","line":9,"column":26,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1176","line":9,"column":38,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":46},{"ruleId":"1096","severity":1,"message":"1177","line":10,"column":10,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1178","line":10,"column":27,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1179","line":81,"column":9,"nodeType":"1098","messageId":"1099","endLine":81,"endColumn":16},{"ruleId":"1164","severity":1,"message":"1180","line":95,"column":8,"nodeType":"1166","endLine":95,"endColumn":44,"suggestions":"1181"},{"ruleId":"1096","severity":1,"message":"1100","line":1,"column":15,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1112","line":2,"column":9,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1182","line":5,"column":9,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1183","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1184","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1185","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1186","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1187","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1188","line":15,"column":8,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1189","line":17,"column":7,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1190","line":20,"column":7,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1191","line":23,"column":7,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1192","line":26,"column":7,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1193","line":31,"column":28,"nodeType":"1098","messageId":"1099","endLine":31,"endColumn":38},{"ruleId":"1164","severity":1,"message":"1194","line":34,"column":5,"nodeType":"1166","endLine":34,"endColumn":7,"suggestions":"1195"},{"ruleId":"1096","severity":1,"message":"1196","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1197","line":7,"column":27,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1198","line":8,"column":8,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1179","line":51,"column":9,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1151","line":53,"column":20,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1199","line":81,"column":12,"nodeType":"1098","messageId":"1099","endLine":81,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1200","line":81,"column":22,"nodeType":"1098","messageId":"1099","endLine":81,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1132","line":82,"column":11,"nodeType":"1098","messageId":"1099","endLine":82,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1103","line":83,"column":11,"nodeType":"1098","messageId":"1099","endLine":83,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1133","line":88,"column":12,"nodeType":"1098","messageId":"1099","endLine":88,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1134","line":89,"column":12,"nodeType":"1098","messageId":"1099","endLine":89,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1135","line":89,"column":22,"nodeType":"1098","messageId":"1099","endLine":89,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1136","line":90,"column":12,"nodeType":"1098","messageId":"1099","endLine":90,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1137","line":93,"column":12,"nodeType":"1098","messageId":"1099","endLine":93,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1138","line":96,"column":12,"nodeType":"1098","messageId":"1099","endLine":96,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1139","line":96,"column":26,"nodeType":"1098","messageId":"1099","endLine":96,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1140","line":98,"column":12,"nodeType":"1098","messageId":"1099","endLine":98,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1141","line":98,"column":26,"nodeType":"1098","messageId":"1099","endLine":98,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1142","line":99,"column":12,"nodeType":"1098","messageId":"1099","endLine":99,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1143","line":101,"column":11,"nodeType":"1098","messageId":"1099","endLine":101,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1144","line":102,"column":12,"nodeType":"1098","messageId":"1099","endLine":102,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1145","line":102,"column":26,"nodeType":"1098","messageId":"1099","endLine":102,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1146","line":104,"column":12,"nodeType":"1098","messageId":"1099","endLine":104,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1147","line":105,"column":26,"nodeType":"1098","messageId":"1099","endLine":105,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1148","line":106,"column":28,"nodeType":"1098","messageId":"1099","endLine":106,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1152","line":110,"column":13,"nodeType":"1098","messageId":"1099","endLine":110,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1153","line":114,"column":13,"nodeType":"1098","messageId":"1099","endLine":114,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1154","line":118,"column":11,"nodeType":"1098","messageId":"1099","endLine":118,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1155","line":128,"column":9,"nodeType":"1098","messageId":"1099","endLine":128,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1156","line":147,"column":9,"nodeType":"1098","messageId":"1099","endLine":147,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1158","line":181,"column":13,"nodeType":"1098","messageId":"1099","endLine":181,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1159","line":251,"column":9,"nodeType":"1098","messageId":"1099","endLine":251,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1097","line":1,"column":28,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1178","line":23,"column":9,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1179","line":50,"column":9,"nodeType":"1098","messageId":"1099","endLine":50,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1163","line":51,"column":11,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1201","line":52,"column":21,"nodeType":"1098","messageId":"1099","endLine":52,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1202","line":53,"column":12,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1203","line":53,"column":19,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1204","line":54,"column":23,"nodeType":"1098","messageId":"1099","endLine":54,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1205","line":17,"column":8,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1206","line":20,"column":8,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1207","line":21,"column":8,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1208","line":23,"column":8,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":18},{"ruleId":"1209","severity":1,"message":"1210","line":92,"column":15,"nodeType":"1211","messageId":"1212","endLine":97,"endColumn":22,"fix":"1213"},{"ruleId":"1164","severity":1,"message":"1214","line":107,"column":8,"nodeType":"1166","endLine":107,"endColumn":10,"suggestions":"1215"},{"ruleId":"1096","severity":1,"message":"1100","line":7,"column":3,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":11},{"ruleId":"1096","severity":1,"message":"1101","line":8,"column":3,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":9},{"ruleId":"1096","severity":1,"message":"1216","line":19,"column":8,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1217","line":20,"column":10,"nodeType":"1098","messageId":"1099","endLine":20,"endColumn":18},{"ruleId":"1164","severity":1,"message":"1218","line":74,"column":6,"nodeType":"1166","endLine":74,"endColumn":8,"suggestions":"1219"},{"ruleId":"1096","severity":1,"message":"1220","line":78,"column":12,"nodeType":"1098","messageId":"1099","endLine":78,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1221","line":106,"column":7,"nodeType":"1098","messageId":"1099","endLine":106,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1222","line":109,"column":12,"nodeType":"1098","messageId":"1099","endLine":109,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1223","line":124,"column":5,"nodeType":"1098","messageId":"1099","endLine":124,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1224","line":125,"column":5,"nodeType":"1098","messageId":"1099","endLine":125,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1225","line":131,"column":9,"nodeType":"1098","messageId":"1099","endLine":131,"endColumn":17},{"ruleId":"1226","severity":1,"message":"1227","line":168,"column":23,"nodeType":"1228","messageId":"1229","endLine":168,"endColumn":32},{"ruleId":"1226","severity":1,"message":"1227","line":177,"column":23,"nodeType":"1228","messageId":"1229","endLine":177,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1230","line":11,"column":9,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1231","line":18,"column":7,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1232","line":25,"column":12,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1233","line":25,"column":27,"nodeType":"1098","messageId":"1099","endLine":25,"endColumn":43},{"ruleId":"1096","severity":1,"message":"1234","line":31,"column":11,"nodeType":"1098","messageId":"1099","endLine":31,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1235","line":21,"column":11,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1236","line":21,"column":17,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1112","line":23,"column":9,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":13},{"ruleId":"1164","severity":1,"message":"1237","line":85,"column":6,"nodeType":"1166","endLine":85,"endColumn":8,"suggestions":"1238"},{"ruleId":"1096","severity":1,"message":"1239","line":86,"column":11,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1249","line":22,"column":5,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":34,"column":9,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":16},{"ruleId":"1164","severity":1,"message":"1250","line":66,"column":8,"nodeType":"1166","endLine":66,"endColumn":26,"suggestions":"1251"},{"ruleId":"1252","severity":1,"message":"1253","line":80,"column":49,"nodeType":"1254","messageId":"1255","endLine":80,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1100","line":1,"column":10,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1256","line":3,"column":19,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":38},{"ruleId":"1164","severity":1,"message":"1257","line":11,"column":12,"nodeType":"1166","endLine":11,"endColumn":14,"suggestions":"1258"},{"ruleId":"1096","severity":1,"message":"1114","line":2,"column":71,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":76},{"ruleId":"1164","severity":1,"message":"1259","line":108,"column":8,"nodeType":"1166","endLine":108,"endColumn":24,"suggestions":"1260"},{"ruleId":"1096","severity":1,"message":"1261","line":141,"column":11,"nodeType":"1098","messageId":"1099","endLine":141,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1262","line":18,"column":26,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":42},{"ruleId":"1096","severity":1,"message":"1249","line":22,"column":5,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":34,"column":9,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1263","line":40,"column":11,"nodeType":"1098","messageId":"1099","endLine":40,"endColumn":24},{"ruleId":"1164","severity":1,"message":"1250","line":66,"column":8,"nodeType":"1166","endLine":66,"endColumn":10,"suggestions":"1264"},{"ruleId":"1252","severity":1,"message":"1253","line":80,"column":49,"nodeType":"1254","messageId":"1255","endLine":80,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1265","line":18,"column":9,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1263","line":39,"column":11,"nodeType":"1098","messageId":"1099","endLine":39,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1266","line":44,"column":26,"nodeType":"1098","messageId":"1099","endLine":44,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1267","line":48,"column":12,"nodeType":"1098","messageId":"1099","endLine":48,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1268","line":48,"column":32,"nodeType":"1098","messageId":"1099","endLine":48,"endColumn":53},{"ruleId":"1164","severity":1,"message":"1250","line":70,"column":8,"nodeType":"1166","endLine":70,"endColumn":10,"suggestions":"1269"},{"ruleId":"1164","severity":1,"message":"1180","line":73,"column":8,"nodeType":"1166","endLine":73,"endColumn":23,"suggestions":"1270"},{"ruleId":"1252","severity":1,"message":"1253","line":94,"column":49,"nodeType":"1254","messageId":"1255","endLine":94,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1271","line":376,"column":19,"nodeType":"1098","messageId":"1099","endLine":376,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1179","line":12,"column":9,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1272","line":13,"column":11,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1273","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1274","line":20,"column":45,"nodeType":"1254","messageId":"1255","endLine":20,"endColumn":47},{"ruleId":"1096","severity":1,"message":"1275","line":21,"column":7,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":42},{"ruleId":"1252","severity":1,"message":"1274","line":41,"column":52,"nodeType":"1254","messageId":"1255","endLine":41,"endColumn":54},{"ruleId":"1252","severity":1,"message":"1253","line":75,"column":17,"nodeType":"1254","messageId":"1255","endLine":75,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1171","line":1,"column":8,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":2,"column":17,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1173","line":9,"column":10,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1174","line":9,"column":16,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1175","line":9,"column":26,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1176","line":9,"column":38,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":46},{"ruleId":"1096","severity":1,"message":"1177","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1235","line":27,"column":10,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1236","line":27,"column":16,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1179","line":82,"column":9,"nodeType":"1098","messageId":"1099","endLine":82,"endColumn":16},{"ruleId":"1276","severity":1,"message":"1277","line":93,"column":76,"nodeType":"1254","messageId":"1278","endLine":93,"endColumn":77},{"ruleId":"1164","severity":1,"message":"1279","line":96,"column":8,"nodeType":"1166","endLine":96,"endColumn":19,"suggestions":"1280"},{"ruleId":"1096","severity":1,"message":"1171","line":1,"column":8,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":2,"column":17,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1112","line":6,"column":9,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1281","line":15,"column":10,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1235","line":27,"column":10,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1236","line":27,"column":16,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1282","line":46,"column":16,"nodeType":"1098","messageId":"1099","endLine":46,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1283","line":47,"column":10,"nodeType":"1098","messageId":"1099","endLine":47,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1177","line":47,"column":23,"nodeType":"1098","messageId":"1099","endLine":47,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1179","line":83,"column":9,"nodeType":"1098","messageId":"1099","endLine":83,"endColumn":16},{"ruleId":"1164","severity":1,"message":"1180","line":96,"column":8,"nodeType":"1166","endLine":96,"endColumn":10,"suggestions":"1284"},{"ruleId":"1096","severity":1,"message":"1171","line":1,"column":8,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":2,"column":17,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1112","line":5,"column":9,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1281","line":14,"column":10,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1179","line":79,"column":9,"nodeType":"1098","messageId":"1099","endLine":79,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1201","line":86,"column":21,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1152","line":109,"column":15,"nodeType":"1098","messageId":"1099","endLine":109,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1153","line":113,"column":15,"nodeType":"1098","messageId":"1099","endLine":113,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1104","line":5,"column":9,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":5,"column":17,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1236","line":5,"column":23,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1112","line":9,"column":10,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1285","line":13,"column":16,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1286","line":18,"column":39,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1287","line":26,"column":9,"nodeType":"1098","messageId":"1099","endLine":26,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1178","line":44,"column":9,"nodeType":"1098","messageId":"1099","endLine":44,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1288","line":44,"column":21,"nodeType":"1098","messageId":"1099","endLine":44,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1289","line":82,"column":12,"nodeType":"1098","messageId":"1099","endLine":82,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1290","line":82,"column":24,"nodeType":"1098","messageId":"1099","endLine":82,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1163","line":93,"column":11,"nodeType":"1098","messageId":"1099","endLine":93,"endColumn":18},{"ruleId":"1164","severity":1,"message":"1291","line":101,"column":8,"nodeType":"1166","endLine":101,"endColumn":10,"suggestions":"1292"},{"ruleId":"1096","severity":1,"message":"1293","line":111,"column":15,"nodeType":"1098","messageId":"1099","endLine":111,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1294","line":113,"column":11,"nodeType":"1098","messageId":"1099","endLine":113,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1295","line":117,"column":11,"nodeType":"1098","messageId":"1099","endLine":117,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1296","line":122,"column":11,"nodeType":"1098","messageId":"1099","endLine":122,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1297","line":125,"column":11,"nodeType":"1098","messageId":"1099","endLine":125,"endColumn":30},{"ruleId":"1209","severity":1,"message":"1298","line":188,"column":40,"nodeType":"1211","messageId":"1212","endLine":188,"endColumn":56,"fix":"1299"},{"ruleId":"1096","severity":1,"message":"1104","line":4,"column":8,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1300","line":9,"column":9,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1301","line":9,"column":41,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":55},{"ruleId":"1096","severity":1,"message":"1302","line":13,"column":10,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1303","line":19,"column":9,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1285","line":19,"column":23,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1235","line":21,"column":10,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1236","line":21,"column":16,"nodeType":"1098","messageId":"1099","endLine":21,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1304","line":40,"column":8,"nodeType":"1098","messageId":"1099","endLine":40,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1163","line":92,"column":11,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1103","line":94,"column":11,"nodeType":"1098","messageId":"1099","endLine":94,"endColumn":19},{"ruleId":"1164","severity":1,"message":"1305","line":99,"column":6,"nodeType":"1166","endLine":99,"endColumn":8,"suggestions":"1306"},{"ruleId":"1096","severity":1,"message":"1297","line":128,"column":11,"nodeType":"1098","messageId":"1099","endLine":128,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1307","line":134,"column":16,"nodeType":"1098","messageId":"1099","endLine":134,"endColumn":27},{"ruleId":"1209","severity":1,"message":"1298","line":213,"column":52,"nodeType":"1211","messageId":"1212","endLine":213,"endColumn":68,"fix":"1308"},{"ruleId":"1096","severity":1,"message":"1309","line":2,"column":10,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1310","line":17,"column":7,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1311","line":2,"column":11,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1312","line":2,"column":18,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1313","line":2,"column":31,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":40},{"ruleId":"1096","severity":1,"message":"1113","line":2,"column":42,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":46},{"ruleId":"1096","severity":1,"message":"1114","line":2,"column":71,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":76},{"ruleId":"1096","severity":1,"message":"1314","line":2,"column":77,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":81},{"ruleId":"1096","severity":1,"message":"1315","line":2,"column":82,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":90},{"ruleId":"1096","severity":1,"message":"1316","line":59,"column":5,"nodeType":"1098","messageId":"1099","endLine":59,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1150","line":73,"column":12,"nodeType":"1098","messageId":"1099","endLine":73,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1151","line":73,"column":20,"nodeType":"1098","messageId":"1099","endLine":73,"endColumn":29},{"ruleId":"1164","severity":1,"message":"1259","line":152,"column":8,"nodeType":"1166","endLine":152,"endColumn":24,"suggestions":"1317"},{"ruleId":"1096","severity":1,"message":"1261","line":178,"column":11,"nodeType":"1098","messageId":"1099","endLine":178,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1163","line":54,"column":11,"nodeType":"1098","messageId":"1099","endLine":54,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1318","line":9,"column":8,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1208","line":10,"column":8,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1112","line":11,"column":10,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1235","line":37,"column":9,"nodeType":"1098","messageId":"1099","endLine":37,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1236","line":37,"column":15,"nodeType":"1098","messageId":"1099","endLine":37,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1288","line":38,"column":21,"nodeType":"1098","messageId":"1099","endLine":38,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1304","line":39,"column":8,"nodeType":"1098","messageId":"1099","endLine":39,"endColumn":25},{"ruleId":"1164","severity":1,"message":"1319","line":80,"column":8,"nodeType":"1166","endLine":80,"endColumn":10,"suggestions":"1320"},{"ruleId":"1096","severity":1,"message":"1307","line":115,"column":14,"nodeType":"1098","messageId":"1099","endLine":115,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1248","line":18,"column":26,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1321","line":77,"column":19,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":28},{"ruleId":"1164","severity":1,"message":"1322","line":97,"column":4,"nodeType":"1166","endLine":97,"endColumn":72,"suggestions":"1323"},{"ruleId":"1226","severity":1,"message":"1324","line":149,"column":33,"nodeType":"1325","messageId":"1229","endLine":149,"endColumn":35},{"ruleId":"1226","severity":1,"message":"1324","line":157,"column":33,"nodeType":"1325","messageId":"1229","endLine":157,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1114","line":7,"column":3,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1326","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1316","line":73,"column":5,"nodeType":"1098","messageId":"1099","endLine":73,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1327","line":79,"column":10,"nodeType":"1098","messageId":"1099","endLine":79,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1202","line":80,"column":10,"nodeType":"1098","messageId":"1099","endLine":80,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1203","line":80,"column":17,"nodeType":"1098","messageId":"1099","endLine":80,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1289","line":85,"column":10,"nodeType":"1098","messageId":"1099","endLine":85,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1290","line":85,"column":22,"nodeType":"1098","messageId":"1099","endLine":85,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1321","line":86,"column":17,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1261","line":86,"column":28,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":45},{"ruleId":"1164","severity":1,"message":"1328","line":97,"column":6,"nodeType":"1166","endLine":97,"endColumn":8,"suggestions":"1329"},{"ruleId":"1096","severity":1,"message":"1330","line":123,"column":9,"nodeType":"1098","messageId":"1099","endLine":123,"endColumn":26},{"ruleId":"1226","severity":1,"message":"1324","line":154,"column":27,"nodeType":"1325","messageId":"1229","endLine":154,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1281","line":6,"column":10,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1331","line":18,"column":10,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1248","line":18,"column":26,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1321","line":74,"column":19,"nodeType":"1098","messageId":"1099","endLine":74,"endColumn":28},{"ruleId":"1226","severity":1,"message":"1324","line":138,"column":33,"nodeType":"1325","messageId":"1229","endLine":138,"endColumn":35},{"ruleId":"1226","severity":1,"message":"1324","line":145,"column":33,"nodeType":"1325","messageId":"1229","endLine":145,"endColumn":35},{"ruleId":"1096","severity":1,"message":"1332","line":77,"column":6,"nodeType":"1098","messageId":"1099","endLine":77,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1316","line":82,"column":10,"nodeType":"1098","messageId":"1099","endLine":82,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1333","line":83,"column":9,"nodeType":"1098","messageId":"1099","endLine":83,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1321","line":85,"column":19,"nodeType":"1098","messageId":"1099","endLine":85,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1334","line":88,"column":10,"nodeType":"1098","messageId":"1099","endLine":88,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1335","line":88,"column":18,"nodeType":"1098","messageId":"1099","endLine":88,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1336","line":97,"column":10,"nodeType":"1098","messageId":"1099","endLine":97,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1337","line":97,"column":18,"nodeType":"1098","messageId":"1099","endLine":97,"endColumn":27},{"ruleId":"1338","severity":1,"message":"1339","line":105,"column":78,"nodeType":"1340","messageId":"1341","endLine":105,"endColumn":79,"suggestions":"1342"},{"ruleId":"1338","severity":1,"message":"1343","line":105,"column":81,"nodeType":"1340","messageId":"1341","endLine":105,"endColumn":82,"suggestions":"1344"},{"ruleId":"1338","severity":1,"message":"1345","line":105,"column":84,"nodeType":"1340","messageId":"1341","endLine":105,"endColumn":85,"suggestions":"1346"},{"ruleId":"1164","severity":1,"message":"1347","line":150,"column":6,"nodeType":"1166","endLine":150,"endColumn":8,"suggestions":"1348"},{"ruleId":"1226","severity":1,"message":"1324","line":253,"column":72,"nodeType":"1325","messageId":"1229","endLine":253,"endColumn":74},{"ruleId":"1209","severity":1,"message":"1210","line":255,"column":11,"nodeType":"1211","messageId":"1212","endLine":258,"endColumn":24,"fix":"1349"},{"ruleId":"1226","severity":1,"message":"1324","line":268,"column":48,"nodeType":"1325","messageId":"1229","endLine":268,"endColumn":50},{"ruleId":"1209","severity":1,"message":"1210","line":276,"column":7,"nodeType":"1211","messageId":"1212","endLine":279,"endColumn":20,"fix":"1350"},{"ruleId":"1096","severity":1,"message":"1273","line":3,"column":8,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1351","line":6,"column":3,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1114","line":7,"column":3,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1326","line":9,"column":3,"nodeType":"1098","messageId":"1099","endLine":9,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1352","line":13,"column":8,"nodeType":"1098","messageId":"1099","endLine":13,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1196","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1104","line":27,"column":8,"nodeType":"1098","messageId":"1099","endLine":27,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1281","line":29,"column":10,"nodeType":"1098","messageId":"1099","endLine":29,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1353","line":34,"column":8,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1321","line":83,"column":19,"nodeType":"1098","messageId":"1099","endLine":83,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1334","line":86,"column":10,"nodeType":"1098","messageId":"1099","endLine":86,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1354","line":87,"column":10,"nodeType":"1098","messageId":"1099","endLine":87,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1355","line":89,"column":10,"nodeType":"1098","messageId":"1099","endLine":89,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1356","line":90,"column":10,"nodeType":"1098","messageId":"1099","endLine":90,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1357","line":91,"column":10,"nodeType":"1098","messageId":"1099","endLine":91,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1358","line":92,"column":10,"nodeType":"1098","messageId":"1099","endLine":92,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1336","line":95,"column":10,"nodeType":"1098","messageId":"1099","endLine":95,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1337","line":95,"column":18,"nodeType":"1098","messageId":"1099","endLine":95,"endColumn":27},{"ruleId":"1164","severity":1,"message":"1359","line":149,"column":6,"nodeType":"1166","endLine":149,"endColumn":8,"suggestions":"1360"},{"ruleId":"1096","severity":1,"message":"1361","line":164,"column":9,"nodeType":"1098","messageId":"1099","endLine":164,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1362","line":184,"column":11,"nodeType":"1098","messageId":"1099","endLine":184,"endColumn":22},{"ruleId":"1096","severity":1,"message":"1120","line":37,"column":8,"nodeType":"1098","messageId":"1099","endLine":37,"endColumn":9},{"ruleId":"1096","severity":1,"message":"1363","line":97,"column":49,"nodeType":"1098","messageId":"1099","endLine":97,"endColumn":58},{"ruleId":"1096","severity":1,"message":"1364","line":110,"column":10,"nodeType":"1098","messageId":"1099","endLine":110,"endColumn":26},{"ruleId":"1096","severity":1,"message":"1365","line":113,"column":10,"nodeType":"1098","messageId":"1099","endLine":113,"endColumn":26},{"ruleId":"1338","severity":1,"message":"1339","line":116,"column":78,"nodeType":"1340","messageId":"1341","endLine":116,"endColumn":79,"suggestions":"1366"},{"ruleId":"1338","severity":1,"message":"1343","line":116,"column":81,"nodeType":"1340","messageId":"1341","endLine":116,"endColumn":82,"suggestions":"1367"},{"ruleId":"1338","severity":1,"message":"1345","line":116,"column":84,"nodeType":"1340","messageId":"1341","endLine":116,"endColumn":85,"suggestions":"1368"},{"ruleId":"1096","severity":1,"message":"1369","line":118,"column":10,"nodeType":"1098","messageId":"1099","endLine":118,"endColumn":14},{"ruleId":"1209","severity":1,"message":"1210","line":271,"column":5,"nodeType":"1211","messageId":"1212","endLine":279,"endColumn":18,"fix":"1370"},{"ruleId":"1096","severity":1,"message":"1371","line":292,"column":9,"nodeType":"1098","messageId":"1099","endLine":292,"endColumn":22},{"ruleId":"1372","severity":1,"message":"1373","line":300,"column":27,"nodeType":"1374","messageId":"1375","endLine":300,"endColumn":58,"fix":"1376"},{"ruleId":"1164","severity":1,"message":"1377","line":15,"column":6,"nodeType":"1166","endLine":15,"endColumn":8,"suggestions":"1378"},{"ruleId":"1096","severity":1,"message":"1242","line":4,"column":38,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":43},{"ruleId":"1096","severity":1,"message":"1243","line":3,"column":27,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1112","line":4,"column":10,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":14},{"ruleId":"1164","severity":1,"message":"1377","line":15,"column":6,"nodeType":"1166","endLine":15,"endColumn":8,"suggestions":"1379"},{"ruleId":"1096","severity":1,"message":"1112","line":4,"column":10,"nodeType":"1098","messageId":"1099","endLine":4,"endColumn":14},{"ruleId":"1164","severity":1,"message":"1377","line":15,"column":6,"nodeType":"1166","endLine":15,"endColumn":8,"suggestions":"1380"},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1249","line":22,"column":5,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":34,"column":9,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":16},{"ruleId":"1164","severity":1,"message":"1250","line":66,"column":8,"nodeType":"1166","endLine":66,"endColumn":26,"suggestions":"1381"},{"ruleId":"1252","severity":1,"message":"1253","line":80,"column":49,"nodeType":"1254","messageId":"1255","endLine":80,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1249","line":22,"column":5,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":34,"column":9,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1272","line":37,"column":11,"nodeType":"1098","messageId":"1099","endLine":37,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1263","line":40,"column":11,"nodeType":"1098","messageId":"1099","endLine":40,"endColumn":24},{"ruleId":"1164","severity":1,"message":"1250","line":64,"column":8,"nodeType":"1166","endLine":64,"endColumn":10,"suggestions":"1382"},{"ruleId":"1252","severity":1,"message":"1253","line":78,"column":49,"nodeType":"1254","messageId":"1255","endLine":78,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1353","line":14,"column":8,"nodeType":"1098","messageId":"1099","endLine":14,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1302","line":18,"column":10,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1179","line":46,"column":9,"nodeType":"1098","messageId":"1099","endLine":46,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1103","line":51,"column":11,"nodeType":"1098","messageId":"1099","endLine":51,"endColumn":19},{"ruleId":"1096","severity":1,"message":"1383","line":56,"column":12,"nodeType":"1098","messageId":"1099","endLine":56,"endColumn":29},{"ruleId":"1096","severity":1,"message":"1384","line":56,"column":31,"nodeType":"1098","messageId":"1099","endLine":56,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1385","line":57,"column":12,"nodeType":"1098","messageId":"1099","endLine":57,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1386","line":57,"column":26,"nodeType":"1098","messageId":"1099","endLine":57,"endColumn":41},{"ruleId":"1096","severity":1,"message":"1387","line":58,"column":12,"nodeType":"1098","messageId":"1099","endLine":58,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1267","line":62,"column":12,"nodeType":"1098","messageId":"1099","endLine":62,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1115","line":67,"column":12,"nodeType":"1098","messageId":"1099","endLine":67,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1116","line":67,"column":22,"nodeType":"1098","messageId":"1099","endLine":67,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1388","line":69,"column":12,"nodeType":"1098","messageId":"1099","endLine":69,"endColumn":24},{"ruleId":"1164","severity":1,"message":"1259","line":80,"column":8,"nodeType":"1166","endLine":80,"endColumn":24,"suggestions":"1389"},{"ruleId":"1252","severity":1,"message":"1253","line":89,"column":49,"nodeType":"1254","messageId":"1255","endLine":89,"endColumn":51},{"ruleId":"1276","severity":1,"message":"1277","line":96,"column":125,"nodeType":"1254","messageId":"1278","endLine":96,"endColumn":126},{"ruleId":"1164","severity":1,"message":"1390","line":106,"column":6,"nodeType":"1166","endLine":106,"endColumn":52,"suggestions":"1391"},{"ruleId":"1096","severity":1,"message":"1261","line":128,"column":11,"nodeType":"1098","messageId":"1099","endLine":128,"endColumn":28},{"ruleId":"1096","severity":1,"message":"1392","line":159,"column":11,"nodeType":"1098","messageId":"1099","endLine":159,"endColumn":30},{"ruleId":"1096","severity":1,"message":"1314","line":2,"column":53,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":57},{"ruleId":"1096","severity":1,"message":"1315","line":2,"column":58,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":66},{"ruleId":"1096","severity":1,"message":"1113","line":2,"column":67,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":71},{"ruleId":"1096","severity":1,"message":"1115","line":63,"column":12,"nodeType":"1098","messageId":"1099","endLine":63,"endColumn":20},{"ruleId":"1096","severity":1,"message":"1116","line":63,"column":22,"nodeType":"1098","messageId":"1099","endLine":63,"endColumn":33},{"ruleId":"1096","severity":1,"message":"1393","line":66,"column":11,"nodeType":"1098","messageId":"1099","endLine":66,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1394","line":73,"column":9,"nodeType":"1098","messageId":"1099","endLine":73,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1253","line":81,"column":47,"nodeType":"1254","messageId":"1255","endLine":81,"endColumn":49},{"ruleId":"1164","severity":1,"message":"1395","line":86,"column":6,"nodeType":"1166","endLine":86,"endColumn":13,"suggestions":"1396"},{"ruleId":"1164","severity":1,"message":"1397","line":107,"column":4,"nodeType":"1166","endLine":107,"endColumn":6,"suggestions":"1398"},{"ruleId":"1252","severity":1,"message":"1274","line":145,"column":50,"nodeType":"1254","messageId":"1255","endLine":145,"endColumn":52},{"ruleId":"1096","severity":1,"message":"1312","line":2,"column":16,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":27},{"ruleId":"1096","severity":1,"message":"1313","line":2,"column":29,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":38},{"ruleId":"1164","severity":1,"message":"1395","line":58,"column":8,"nodeType":"1166","endLine":58,"endColumn":15,"suggestions":"1399"},{"ruleId":"1096","severity":1,"message":"1400","line":81,"column":13,"nodeType":"1098","messageId":"1099","endLine":81,"endColumn":22},{"ruleId":"1252","severity":1,"message":"1253","line":93,"column":49,"nodeType":"1254","messageId":"1255","endLine":93,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1401","line":96,"column":11,"nodeType":"1098","messageId":"1099","endLine":96,"endColumn":28},{"ruleId":"1402","severity":1,"message":"1403","line":211,"column":45,"nodeType":"1404","messageId":"1405","endLine":211,"endColumn":74},{"ruleId":"1402","severity":1,"message":"1403","line":224,"column":45,"nodeType":"1404","messageId":"1405","endLine":224,"endColumn":74},{"ruleId":"1096","severity":1,"message":"1163","line":53,"column":11,"nodeType":"1098","messageId":"1099","endLine":53,"endColumn":18},{"ruleId":"1252","severity":1,"message":"1253","line":102,"column":47,"nodeType":"1254","messageId":"1255","endLine":102,"endColumn":49},{"ruleId":"1096","severity":1,"message":"1401","line":105,"column":7,"nodeType":"1098","messageId":"1099","endLine":105,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1406","line":112,"column":11,"nodeType":"1098","messageId":"1099","endLine":112,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1196","line":5,"column":8,"nodeType":"1098","messageId":"1099","endLine":5,"endColumn":18},{"ruleId":"1402","severity":1,"message":"1403","line":94,"column":37,"nodeType":"1404","messageId":"1405","endLine":94,"endColumn":66},{"ruleId":"1402","severity":1,"message":"1403","line":105,"column":37,"nodeType":"1404","messageId":"1405","endLine":105,"endColumn":66},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1249","line":23,"column":5,"nodeType":"1098","messageId":"1099","endLine":23,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":35,"column":9,"nodeType":"1098","messageId":"1099","endLine":35,"endColumn":16},{"ruleId":"1164","severity":1,"message":"1250","line":67,"column":8,"nodeType":"1166","endLine":67,"endColumn":26,"suggestions":"1407"},{"ruleId":"1252","severity":1,"message":"1253","line":81,"column":49,"nodeType":"1254","messageId":"1255","endLine":81,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1408","line":113,"column":11,"nodeType":"1098","messageId":"1099","endLine":113,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1171","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":8,"column":16,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1248","line":11,"column":9,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1253","line":48,"column":49,"nodeType":"1254","messageId":"1255","endLine":48,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1171","line":7,"column":8,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":8,"column":16,"nodeType":"1098","messageId":"1099","endLine":8,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1248","line":11,"column":9,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":14},{"ruleId":"1252","severity":1,"message":"1253","line":48,"column":49,"nodeType":"1254","messageId":"1255","endLine":48,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1240","line":3,"column":5,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":8},{"ruleId":"1096","severity":1,"message":"1241","line":3,"column":10,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1242","line":3,"column":31,"nodeType":"1098","messageId":"1099","endLine":3,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1243","line":7,"column":10,"nodeType":"1098","messageId":"1099","endLine":7,"endColumn":15},{"ruleId":"1096","severity":1,"message":"1235","line":10,"column":9,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1244","line":10,"column":24,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":32},{"ruleId":"1096","severity":1,"message":"1245","line":10,"column":34,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1098","messageId":"1099","endLine":12,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1248","line":15,"column":9,"nodeType":"1098","messageId":"1099","endLine":15,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1249","line":22,"column":5,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":12},{"ruleId":"1096","severity":1,"message":"1179","line":34,"column":9,"nodeType":"1098","messageId":"1099","endLine":34,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1263","line":40,"column":11,"nodeType":"1098","messageId":"1099","endLine":40,"endColumn":24},{"ruleId":"1164","severity":1,"message":"1250","line":64,"column":8,"nodeType":"1166","endLine":64,"endColumn":10,"suggestions":"1409"},{"ruleId":"1252","severity":1,"message":"1253","line":78,"column":49,"nodeType":"1254","messageId":"1255","endLine":78,"endColumn":51},{"ruleId":"1096","severity":1,"message":"1351","line":2,"column":48,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":57},{"ruleId":"1096","severity":1,"message":"1236","line":2,"column":58,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":63},{"ruleId":"1096","severity":1,"message":"1196","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":18},{"ruleId":"1402","severity":1,"message":"1403","line":93,"column":31,"nodeType":"1404","messageId":"1405","endLine":93,"endColumn":60},{"ruleId":"1402","severity":1,"message":"1403","line":103,"column":33,"nodeType":"1404","messageId":"1405","endLine":103,"endColumn":62},{"ruleId":"1096","severity":1,"message":"1410","line":18,"column":8,"nodeType":"1098","messageId":"1099","endLine":18,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1411","line":19,"column":8,"nodeType":"1098","messageId":"1099","endLine":19,"endColumn":17},{"ruleId":"1164","severity":1,"message":"1259","line":36,"column":8,"nodeType":"1166","endLine":36,"endColumn":42,"suggestions":"1412"},{"ruleId":"1096","severity":1,"message":"1171","line":1,"column":8,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1172","line":2,"column":17,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1112","line":6,"column":9,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":13},{"ruleId":"1096","severity":1,"message":"1173","line":10,"column":10,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1174","line":10,"column":16,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1175","line":10,"column":26,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1176","line":10,"column":38,"nodeType":"1098","messageId":"1099","endLine":10,"endColumn":46},{"ruleId":"1096","severity":1,"message":"1177","line":11,"column":9,"nodeType":"1098","messageId":"1099","endLine":11,"endColumn":24},{"ruleId":"1096","severity":1,"message":"1235","line":22,"column":10,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":14},{"ruleId":"1096","severity":1,"message":"1236","line":22,"column":16,"nodeType":"1098","messageId":"1099","endLine":22,"endColumn":21},{"ruleId":"1164","severity":1,"message":"1413","line":79,"column":6,"nodeType":"1166","endLine":79,"endColumn":8,"suggestions":"1414"},{"ruleId":"1252","severity":1,"message":"1253","line":28,"column":83,"nodeType":"1254","messageId":"1255","endLine":28,"endColumn":85},{"ruleId":"1164","severity":1,"message":"1377","line":12,"column":10,"nodeType":"1166","endLine":12,"endColumn":12,"suggestions":"1415"},{"ruleId":"1164","severity":1,"message":"1377","line":12,"column":10,"nodeType":"1166","endLine":12,"endColumn":12,"suggestions":"1416"},{"ruleId":"1164","severity":1,"message":"1377","line":12,"column":10,"nodeType":"1166","endLine":12,"endColumn":12,"suggestions":"1417"},{"ruleId":"1164","severity":1,"message":"1377","line":12,"column":10,"nodeType":"1166","endLine":12,"endColumn":12,"suggestions":"1418"},{"ruleId":"1096","severity":1,"message":"1114","line":2,"column":58,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":63},{"ruleId":"1096","severity":1,"message":"1326","line":2,"column":64,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":76},{"ruleId":"1096","severity":1,"message":"1196","line":6,"column":8,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":18},{"ruleId":"1096","severity":1,"message":"1272","line":49,"column":11,"nodeType":"1098","messageId":"1099","endLine":49,"endColumn":21},{"ruleId":"1096","severity":1,"message":"1419","line":52,"column":11,"nodeType":"1098","messageId":"1099","endLine":52,"endColumn":38},{"ruleId":"1096","severity":1,"message":"1394","line":56,"column":9,"nodeType":"1098","messageId":"1099","endLine":56,"endColumn":17},{"ruleId":"1252","severity":1,"message":"1253","line":62,"column":47,"nodeType":"1254","messageId":"1255","endLine":62,"endColumn":49},{"ruleId":"1402","severity":1,"message":"1403","line":123,"column":41,"nodeType":"1404","messageId":"1405","endLine":123,"endColumn":70},{"ruleId":"1402","severity":1,"message":"1403","line":134,"column":41,"nodeType":"1404","messageId":"1405","endLine":134,"endColumn":70},{"ruleId":"1096","severity":1,"message":"1100","line":1,"column":17,"nodeType":"1098","messageId":"1099","endLine":1,"endColumn":25},{"ruleId":"1096","severity":1,"message":"1104","line":2,"column":10,"nodeType":"1098","messageId":"1099","endLine":2,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1248","line":6,"column":26,"nodeType":"1098","messageId":"1099","endLine":6,"endColumn":31},{"ruleId":"1096","severity":1,"message":"1163","line":17,"column":11,"nodeType":"1098","messageId":"1099","endLine":17,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'moment' is defined but never used.","'dispatch' is assigned a value but never used.","'Button' is defined but never used.","'setRemember' is assigned a value but never used.","'error' is assigned a value but never used.","'d' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'LoginPage' is defined but never used.","'ACTION_TYPES' is defined but never used.","'appConfig' is assigned a value but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'targetGroup' is assigned a value but never used.","'getTargetGroup' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'_' is defined but never used.","'timesession' is assigned a value but never used.","'setTimesession' is assigned a value but never used.","'postModal' is assigned a value but never used.","'setPostModal' is assigned a value but never used.","'handleDeleteClick' is assigned a value but never used.","'addFormData' is assigned a value but never used.","'setAddFormData' is assigned a value but never used.","'editModal' is assigned a value but never used.","'editContactId' is assigned a value but never used.","'handleEditClick' is assigned a value but never used.","'editFormData' is assigned a value but never used.","'apiURl' is assigned a value but never used.","'uploadModuleList' is assigned a value but never used.","'filename' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'disableNextButtonProcess' is assigned a value but never used.","'uploadButton' is assigned a value but never used.","'setUploadButton' is assigned a value but never used.","'buttonStatus' is assigned a value but never used.","'setButtonStatus' is assigned a value but never used.","'hiddeStartModuleFinishButton' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'collectModal' is assigned a value but never used.","'setcollectModal' is assigned a value but never used.","'disabledNextButton' is assigned a value but never used.","'setModuleStatus' is assigned a value but never used.","'setModuleBatchNum' is assigned a value but never used.","'toggleRestartModal' is assigned a value but never used.","'saving' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","'onError' is assigned a value but never used.","'handleModuleBatchList' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'startModule' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'installModuleDetail' is assigned a value but never used.","'handleStartModule' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadModules'. Either include it or remove the dependency array.","ArrayExpression",["1420"],"'fetchAllModule' is assigned a value but never used.","'restartingModule' is assigned a value but never used.","'updateModuleMenuPosition' is assigned a value but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'MdDeleteForever' is defined but never used.","'MdModeEdit' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadModuleMenus'. Either include it or remove the dependency array.",["1421"],"'Dropdown' is defined but never used.","'BestSellingTab' is defined but never used.","'RecentEvenList' is defined but never used.","'Latestsaleblog' is defined but never used.","'SalesRevenueTab' is defined but never used.","'UpcomingEventSection' is defined but never used.","'avatar' is defined but never used.","'TicketsLineApex' is assigned a value but never used.","'RevenueLineApex' is assigned a value but never used.","'SalesCanvas' is assigned a value but never used.","'Donut' is assigned a value but never used.","'background' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeBackground'. Either include it or remove the dependency array.",["1422"],"'CancelIcon' is defined but never used.","'CardHeader' is defined but never used.","'DualListBox' is defined but never used.","'contacts' is assigned a value but never used.","'setContacts' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'setRolesList' is assigned a value but never used.","'Avatar' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"1423","text":"1424"},"React Hook useEffect has a missing dependency: 'fetchMe'. Either include it or remove the dependency array.",["1425"],"'LoadMenus' is defined but never used.","'fontSize' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchExternalMenu' and 'fetchPermisisons'. Either include them or remove the dependency array.",["1426"],"'userHasRole' is defined but never used.","'roles' is assigned a value but never used.","'sideBarParentUrl' is defined but never used.","'subMainMenu' is assigned a value but never used.","'sysInfo' is assigned a value but never used.","'MainMenu' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'FaEye' is defined but never used.","'options' is assigned a value but never used.","'selectedIndex' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'Icon' is defined but never used.","'Label' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["1427"],"'handleClose' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Table' is defined but never used.","'Badge' is defined but never used.","'LabelSui' is defined but never used.","'List' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'toast' is defined but never used.","'menuobj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'menList'. Either include it or remove the dependency array.",["1428"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchUserPermission' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchExternalMenu2'. Either include it or remove the dependency array.",["1429"],"React Hook useEffect has a missing dependency: 'defaultValues'. Either include it or remove the dependency array.",["1430"],"'handleInputChange' is assigned a value but never used.","'updateModuleMenu' is defined but never used.","'defaultValues' is assigned a value but never used.",["1431"],"'fetchAllBootstrapModule' is defined but never used.","'setOtherDetails' is assigned a value but never used.","'locationListArray2' is assigned a value but never used.","'setLocationListArray2' is assigned a value but never used.",["1432"],["1433"],"'getactualmenu' is assigned a value but never used.","'datasample' is assigned a value but never used.","'MatButton' is defined but never used.","Expected '!==' and instead saw '!='.","'bootstrapModuleBYBacthNumberReducer' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'loadSubMenus'. Either include it or remove the dependency array.",["1434"],"'TiArrowBack' is defined but never used.","'FaUserPlus' is defined but never used.","'MdDashboard' is defined but never used.",["1435"],"'FaPlus' is defined but never used.","'Delete' is defined but never used.","'MButton' is defined but never used.","'MdPerson' is defined but never used.","'basicModal' is assigned a value but never used.","'setBasicModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllOrgUnitLevel'. Either include it or remove the dependency array.",["1436"],"'fetchAllOrgUnit' is assigned a value but never used.","'deleteModule' is assigned a value but never used.","'updateOrgUnitLevel' is assigned a value but never used.","'createOrgUnit' is assigned a value but never used.","'createParentOrgUnit' is assigned a value but never used.","Unexpected whitespace before property description.",{"range":"1437","text":"1424"},"'MdDelete' is defined but never used.","'MdRemoveRedEye' is defined but never used.","'useSelector' is defined but never used.","'FaPlusCircle' is defined but never used.","'SplitActionButton' is defined but never used.","React Hook useEffect has a missing dependency: 'loadOrgUnitById'. Either include it or remove the dependency array.",["1438"],"'actionItems' is defined but never used.",{"range":"1439","text":"1424"},"'useHistory' is defined but never used.","'myRequest' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'currentUser' is assigned a value but never used.",["1440"],"'Breadcrumbs' is defined but never used.","React Hook useEffect has a missing dependency: 'loadApplicationCodeset'. Either include it or remove the dependency array.",["1441"],"'setValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state.row'. Either include it or remove the dependency array.",["1442"],"Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","'FormFeedback' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defaultUserRole' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1443"],"'toggleAssignModal' is assigned a value but never used.","'ToastContainer' is defined but never used.","'arrVal' is assigned a value but never used.","'rolesDef' is assigned a value but never used.","'gender' is assigned a value but never used.","'setGender' is assigned a value but never used.","'setArr' is assigned a value but never used.","'setSetArr' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["1444","1445"],"Unnecessary escape character: \\^.",["1446","1447"],"Unnecessary escape character: \\*.",["1448","1449"],"React Hook useEffect has a missing dependency: 'fetchOrganisation'. Either include it or remove the dependency array.",["1450"],{"range":"1451","text":"1424"},{"range":"1452","text":"1424"},"'FormGroup' is defined but never used.","'SaveIcon' is defined but never used.","'Select' is defined but never used.","'role' is assigned a value but never used.","'matchingPassword' is assigned a value but never used.","'validPassword' is assigned a value but never used.","'matchingPasswordClass' is assigned a value but never used.","'validPasswordClass' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.location.state.user.roles' and 'rolesDef'. Either include them or remove the dependency array.",["1453"],"'handlePassword' is assigned a value but never used.","'newRoleList' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'allOrganisations' is assigned a value but never used.","'passwordStrength' is assigned a value but never used.",["1454","1455"],["1456","1457"],["1458","1459"],"'user' is assigned a value but never used.",{"range":"1460","text":"1424"},"'checkNINLimit' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['phoneNumber'] found.","Property","unnecessarilyComputedProperty",{"range":"1461","text":"1462"},"React Hook useEffect has a missing dependency: 'fetchSystemEnv'. Either include it or remove the dependency array.",["1463"],["1464"],["1465"],["1466"],["1467"],"'otherDetailFields' is assigned a value but never used.","'setOtherDetailFields' is assigned a value but never used.","'locationList' is assigned a value but never used.","'setLocationList' is assigned a value but never used.","'otherDetails' is assigned a value but never used.","'orgUnitLevel' is assigned a value but never used.",["1468"],"React Hook useEffect has a missing dependency: 'orgUnitIDParam.id'. Either include it or remove the dependency array.",["1469"],"'organisationUnitIds' is assigned a value but never used.","'toggleModal3' is assigned a value but never used.","'validate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orgUnitDetails'. Either include it or remove the dependency array.",["1470"],"React Hook useEffect has a missing dependency: 'orgUnitDetails.organisationUnitLevelId'. Either include it or remove the dependency array.",["1471"],["1472"],"'isChecked' is assigned a value but never used.","'createUploadBatch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'status' is assigned a value but never used.",["1473"],"'CaretDownIcon' is assigned a value but never used.",["1474"],"'loadable' is defined but never used.","'pMinDelay' is defined but never used.",["1475"],"React Hook useEffect has a missing dependency: 'fetchRole'. Either include it or remove the dependency array.",["1476"],["1477"],["1478"],["1479"],["1480"],"'handleOtherFieldInputChange' is assigned a value but never used.",{"desc":"1481","fix":"1482"},{"desc":"1483","fix":"1484"},{"desc":"1485","fix":"1486"},[3690,3692],".",{"desc":"1487","fix":"1488"},{"desc":"1489","fix":"1490"},{"desc":"1491","fix":"1492"},{"desc":"1493","fix":"1494"},{"desc":"1495","fix":"1496"},{"desc":"1497","fix":"1498"},{"desc":"1499","fix":"1500"},{"desc":"1499","fix":"1501"},{"desc":"1502","fix":"1503"},{"desc":"1504","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},[7730,7732],{"desc":"1510","fix":"1511"},[9803,9805],{"desc":"1497","fix":"1512"},{"desc":"1513","fix":"1514"},{"desc":"1515","fix":"1516"},{"desc":"1517","fix":"1518"},{"messageId":"1519","fix":"1520","desc":"1521"},{"messageId":"1522","fix":"1523","desc":"1524"},{"messageId":"1519","fix":"1525","desc":"1521"},{"messageId":"1522","fix":"1526","desc":"1524"},{"messageId":"1519","fix":"1527","desc":"1521"},{"messageId":"1522","fix":"1528","desc":"1524"},{"desc":"1529","fix":"1530"},[8749,8751],[9409,9411],{"desc":"1531","fix":"1532"},{"messageId":"1519","fix":"1533","desc":"1521"},{"messageId":"1522","fix":"1534","desc":"1524"},{"messageId":"1519","fix":"1535","desc":"1521"},{"messageId":"1522","fix":"1536","desc":"1524"},{"messageId":"1519","fix":"1537","desc":"1521"},{"messageId":"1522","fix":"1538","desc":"1524"},[9491,9493],[10155,10170],"'phoneNumber'",{"desc":"1539","fix":"1540"},{"desc":"1539","fix":"1541"},{"desc":"1539","fix":"1542"},{"desc":"1493","fix":"1543"},{"desc":"1499","fix":"1544"},{"desc":"1497","fix":"1545"},{"desc":"1546","fix":"1547"},{"desc":"1548","fix":"1549"},{"desc":"1550","fix":"1551"},{"desc":"1548","fix":"1552"},{"desc":"1493","fix":"1553"},{"desc":"1499","fix":"1554"},{"desc":"1555","fix":"1556"},{"desc":"1557","fix":"1558"},{"desc":"1539","fix":"1559"},{"desc":"1539","fix":"1560"},{"desc":"1539","fix":"1561"},{"desc":"1539","fix":"1562"},"Update the dependencies array to be: [loadModules]",{"range":"1563","text":"1564"},"Update the dependencies array to be: [loadModuleMenus, props.location.state.datasample.id]",{"range":"1565","text":"1566"},"Update the dependencies array to be: [changeBackground]",{"range":"1567","text":"1568"},"Update the dependencies array to be: [fetchMe]",{"range":"1569","text":"1570"},"Update the dependencies array to be: [fetchExternalMenu, fetchPermisisons]",{"range":"1571","text":"1572"},"Update the dependencies array to be: [fetchUsers]",{"range":"1573","text":"1574"},"Update the dependencies array to be: [menList, props.datasample]",{"range":"1575","text":"1576"},"Update the dependencies array to be: [fetchExternalMenu2]",{"range":"1577","text":"1578"},"Update the dependencies array to be: [defaultValues, props.formData]",{"range":"1579","text":"1580"},"Update the dependencies array to be: [menList]",{"range":"1581","text":"1582"},{"range":"1583","text":"1582"},"Update the dependencies array to be: [datasample.id, loadModuleMenus]",{"range":"1584","text":"1585"},"Update the dependencies array to be: [loadSubMenus, parent.id]",{"range":"1586","text":"1587"},"Update the dependencies array to be: [loadModuleMenus]",{"range":"1588","text":"1589"},"Update the dependencies array to be: [loadAllOrgUnitLevel]",{"range":"1590","text":"1591"},"Update the dependencies array to be: [loadOrgUnitById]",{"range":"1592","text":"1593"},{"range":"1594","text":"1580"},"Update the dependencies array to be: [loadApplicationCodeset]",{"range":"1595","text":"1596"},"Update the dependencies array to be: [props.location.state.row.permission, props.location.state.row.menu, props.location.state.row]",{"range":"1597","text":"1598"},"Update the dependencies array to be: [defaultUserRole, props]",{"range":"1599","text":"1600"},"removeEscape",{"range":"1601","text":"1602"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1603","text":"1604"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1605","text":"1602"},{"range":"1606","text":"1604"},{"range":"1607","text":"1602"},{"range":"1608","text":"1604"},"Update the dependencies array to be: [fetchOrganisation]",{"range":"1609","text":"1610"},"Update the dependencies array to be: [props.location.state.user.roles, rolesDef]",{"range":"1611","text":"1612"},{"range":"1613","text":"1602"},{"range":"1614","text":"1604"},{"range":"1615","text":"1602"},{"range":"1616","text":"1604"},{"range":"1617","text":"1602"},{"range":"1618","text":"1604"},"Update the dependencies array to be: [fetchSystemEnv]",{"range":"1619","text":"1620"},{"range":"1621","text":"1620"},{"range":"1622","text":"1620"},{"range":"1623","text":"1576"},{"range":"1624","text":"1582"},{"range":"1625","text":"1580"},"Update the dependencies array to be: [orgUnitIDParam.id, orgUnitIDParam.parentOrganisationUnitLevelId]",{"range":"1626","text":"1627"},"Update the dependencies array to be: [orgUnitDetails, props]",{"range":"1628","text":"1629"},"Update the dependencies array to be: [orgUnitDetails.organisationUnitLevelId]",{"range":"1630","text":"1631"},{"range":"1632","text":"1629"},{"range":"1633","text":"1576"},{"range":"1634","text":"1582"},"Update the dependencies array to be: [defaultValues, props.formData, props.showModal]",{"range":"1635","text":"1636"},"Update the dependencies array to be: [fetchRole]",{"range":"1637","text":"1638"},{"range":"1639","text":"1620"},{"range":"1640","text":"1620"},{"range":"1641","text":"1620"},{"range":"1642","text":"1620"},[2812,2814],"[loadModules]",[4730,4766],"[loadModuleMenus, props.location.state.datasample.id]",[1329,1331],"[changeBackground]",[3929,3931],"[fetchMe]",[1886,1888],"[fetchExternalMenu, fetchPermisisons]",[3833,3835],"[fetchUsers]",[2367,2385],"[menList, props.datasample]",[324,326],"[fetchExternalMenu2]",[3854,3870],"[defaultValues, props.formData]",[2571,2573],"[menList]",[2844,2846],[2907,2922],"[datasample.id, loadModuleMenus]",[4827,4838],"[loadSubMenus, parent.id]",[4869,4871],"[loadModuleMenus]",[4675,4677],"[loadAllOrgUnitLevel]",[4512,4514],"[loadOrgUnitById]",[5081,5097],[4006,4008],"[loadApplicationCodeset]",[3181,3249],"[props.location.state.row.permission, props.location.state.row.menu, props.location.state.row]",[2903,2905],"[defaultUserRole, props]",[3865,3866],"",[3865,3865],"\\",[3868,3869],[3868,3868],[3871,3872],[3871,3871],[5169,5171],"[fetchOrganisation]",[4586,4588],"[props.location.state.user.roles, rolesDef]",[4215,4216],[4215,4215],[4218,4219],[4218,4218],[4221,4222],[4221,4221],[492,494],"[fetchSystemEnv]",[501,503],[493,495],[2362,2380],[2382,2384],[3414,3430],[4432,4478],"[orgUnitIDParam.id, orgUnitIDParam.parentOrganisationUnitLevelId]",[2764,2771],"[orgUnitDetails, props]",[3460,3462],"[orgUnitDetails.organisationUnitLevelId]",[1574,1581],[2437,2455],[2367,2369],[1429,1463],"[defaultValues, props.formData, props.showModal]",[3748,3750],"[fetchRole]",[311,313],[313,315],[316,318],[308,310]]